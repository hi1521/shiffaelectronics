{"ast":null,"code":"import _regeneratorRuntime from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hishsmtariq/ReactJsProjects/spare_part/src/spare_parts_components/pages/sale.jsx\";\n\nimport React, { Component } from \"react\";\nimport lodash from \"lodash\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardHeader, MDBCol, MDBContainer, MDBIcon, MDBInput, MDBRow, MDBSelect, MDBTable, MDBTableBody, MDBTableHead, MDBLink, MDBDatePicker, MDBTimePicker } from \"mdbreact\";\nimport axios from \"axios\";\nimport getCurrentDate from \"../utils/get_current_date\";\n\nvar Row = function Row(_ref) {\n  var id = _ref.id,\n      categoryComponent = _ref.categoryComponent,\n      productComponent = _ref.productComponent,\n      quantity = _ref.quantity,\n      price = _ref.price;\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, categoryComponent(id)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, productComponent(id)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, quantity(id)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, price));\n};\n\nvar SalePage = /*#__PURE__*/function (_Component) {\n  _inherits(SalePage, _Component);\n\n  var _super = _createSuper(SalePage);\n\n  function SalePage() {\n    var _this2;\n\n    _classCallCheck(this, SalePage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.notSelected = \"Chose your option\";\n\n    _this2.onEnter = function () {\n      var _this2$state = _this2.state,\n          SelectedProductPrices = _this2$state.SelectedProductPrices,\n          SelectedProducts = _this2$state.SelectedProducts,\n          SelectedProductIDs = _this2$state.SelectedProductIDs,\n          SelectedProductQty = _this2$state.SelectedProductQty,\n          rowCount = _this2$state.rowCount,\n          subTotal = _this2$state.subTotal,\n          discount = _this2$state.discount,\n          total = _this2$state.total,\n          customerName = _this2$state.customerName,\n          date = _this2$state.date,\n          time = _this2$state.time; //    Data Format\n      // {\n      //  sno: index\n      //  dec: Product Name,\n      //  qty: 1 (Quantity)\n      //  rate: Price\n      // }\n\n      var items = lodash.range(rowCount).map(function (index) {\n        return {\n          sno: index,\n          desc: SelectedProducts[index],\n          qty: SelectedProductQty[index],\n          rate: SelectedProductPrices[index],\n          Product_id: SelectedProductIDs[index]\n        };\n      });\n      var data = {\n        subTotal: subTotal,\n        discount: discount,\n        total: total,\n        items: items,\n        itemsLength: items.length,\n        customerName: customerName,\n        date: date,\n        time: time\n      };\n      console.log(data); // axios.post(\"http://localhost/spare_parts/sales.php\", data);\n\n      return data;\n    };\n\n    _this2.newItem = {\n      category: _this2.notSelected,\n      product: _this2.notSelected,\n      price: 0,\n      qty: 1,\n      productId: \"\"\n    };\n    _this2.state = {\n      isMounted: false,\n      customerName: \"\",\n      date: \"\",\n      time: \"\",\n      rowCount: 1,\n      Items: _this2.onEnter,\n      SelectedItems: [_this2.newItem],\n      SelectedCategories: [_this2.notSelected],\n      SelectedProducts: [_this2.notSelected],\n      SelectedProductPrices: [0],\n      SelectedProductQty: [1],\n      SelectedProductIDs: [\"\"],\n      subTotal: 0,\n      discount: 0,\n      total: 0,\n      categories: [// {\n        //     text: \"Category Name\",\n        //     value: \"Category Value\"\n        // },\n      ],\n      products: {// Data Format\n        // Category_Name: {\n        //     Product_Name: {\n        //         text: \"Product Name\",\n        //         value: \"Product Value\"\n        //         price: \"Product Price\"\n        //         id: Product_id,\n        //         qty: Product_Quantity,\n        //     },\n        // },\n      }\n    };\n    _this2.componentDidMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _this2$state2, categories, products;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this2$state2 = _this2.state, categories = _this2$state2.categories, products = _this2$state2.products;\n              _context.next = 3;\n              return axios.post(\"http://localhost/spare_parts/show_category.php\").then(function (response) {\n                response.data.map(function (category) {\n                  var newCategory = {\n                    text: category.Category_Name,\n                    value: category.Category_Name\n                  };\n                  categories = [].concat(_toConsumableArray(categories), [newCategory]);\n                });\n              });\n\n            case 3:\n              _context.next = 5;\n              return axios.post(\"http://localhost/spare_parts/allproducts.php\").then(function (response) {\n                response.data.map(function (product) {\n                  var Product_Name = product.Product_Name,\n                      Category_Name = product.Category_Name,\n                      Product_Retail_Price = product.Product_Retail_Price,\n                      id = product.id,\n                      Product_Quantity = product.Product_Quantity;\n                  var newProduct = {};\n                  newProduct[Product_Name] = {\n                    text: Product_Name,\n                    value: Product_Name,\n                    price: parseInt(Product_Retail_Price),\n                    id: id,\n                    qty: Product_Quantity\n                  };\n                  if (!products.hasOwnProperty(product.Category_Name)) products[Category_Name] = newProduct;else products[Category_Name][Product_Name] = newProduct[Product_Name];\n                });\n              });\n\n            case 5:\n              _this2.setState({\n                products,\n                categories\n              });\n\n              _this2.setState({\n                isMounted: true\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this2.onAdd = function () {\n      var _this2$state3 = _this2.state,\n          rowCount = _this2$state3.rowCount,\n          SelectedItems = _this2$state3.SelectedItems;\n      SelectedItems[rowCount] = _this2.newItem;\n      rowCount += 1;\n\n      _this2.setState({\n        SelectedItems,\n        rowCount\n      });\n    };\n\n    _this2.categoryComponent = function (id) {\n      var _this2$state4 = _this2.state,\n          categories = _this2$state4.categories,\n          SelectedItems = _this2$state4.SelectedItems;\n      var index = id - 1;\n      return /*#__PURE__*/React.createElement(MDBSelect, {\n        search: true,\n        style: {\n          margin: 0\n        },\n        getValue: function getValue(selectedValue) {\n          return _this2.onSelectedCategoryUpdate(id, selectedValue[0]);\n        },\n        options: categories,\n        selected: SelectedItems[index].category,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this2.onSelectedCategoryUpdate = function (id, selectedValue) {\n      var _this2$state5 = _this2.state,\n          isMounted = _this2$state5.isMounted,\n          discount = _this2$state5.discount,\n          SelectedItems = _this2$state5.SelectedItems;\n\n      if (isMounted && typeof selectedValue != \"undefined\" && selectedValue !== SelectedItems[id - 1].category) {\n        var index = id - 1;\n        SelectedItems[index].category = selectedValue;\n\n        var subTotal = _this2.computeSubtotal();\n\n        var total = subTotal - discount;\n\n        _this2.setState({\n          SelectedItems,\n          subTotal,\n          total\n        });\n      }\n    };\n\n    _this2.productComponent = function (id) {\n      var _this2$state6 = _this2.state,\n          products = _this2$state6.products,\n          SelectedItems = _this2$state6.SelectedItems;\n      var index = id - 1;\n      var options;\n      if (products[SelectedItems[index].category]) options = lodash.map(products[SelectedItems[index].category], function (val) {\n        return val;\n      });else options = [];\n      return /*#__PURE__*/React.createElement(MDBSelect, {\n        search: true,\n        style: {\n          margin: 0\n        },\n        getValue: function getValue(selectedValue) {\n          return _this2.onSelectedProductUpdate(id, selectedValue[0]);\n        },\n        options: options,\n        selected: SelectedItems[index].product,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this2.onSelectedProductUpdate = function (id, selectedValue) {\n      var _this2$state7 = _this2.state,\n          SelectedProducts = _this2$state7.SelectedProducts,\n          products = _this2$state7.products,\n          isMounted = _this2$state7.isMounted,\n          discount = _this2$state7.discount,\n          SelectedItems = _this2$state7.SelectedItems;\n      var index = id - 1;\n      var category = SelectedItems[index].category;\n\n      if (isMounted && selectedValue !== _this2.notSelected && typeof selectedValue != \"undefined\" && selectedValue !== SelectedProducts[id - 1] && typeof category != 'undefined') {\n        SelectedItems[index].price = products[category][selectedValue].price;\n        SelectedItems[index].product = selectedValue;\n\n        var subTotal = _this2.computeSubtotal();\n\n        var total = subTotal - discount;\n\n        _this2.setState({\n          SelectedItems,\n          subTotal,\n          total\n        });\n      }\n    };\n\n    _this2.quantityComponent = function (id) {\n      var _this2$state8 = _this2.state,\n          SelectedProductQty = _this2$state8.SelectedProductQty,\n          SelectedProductPrices = _this2$state8.SelectedProductPrices,\n          SelectedProducts = _this2$state8.SelectedProducts,\n          SelectedCategories = _this2$state8.SelectedCategories,\n          products = _this2$state8.products,\n          subTotal = _this2$state8.subTotal,\n          total = _this2$state8.total,\n          discount = _this2$state8.discount;\n      var index = id - 1;\n      return /*#__PURE__*/React.createElement(MDBInput, {\n        style: {\n          marginTop: \"-1.5rem\"\n        },\n        label: \"Quantity\",\n        group: true,\n        type: \"number\",\n        value: SelectedProductQty[index],\n        validate: true,\n        onChange: function onChange(event) {\n          var categ = SelectedCategories[index];\n          var product = SelectedProducts[index];\n\n          if (event.target.value !== '' && typeof products[categ] != \"undefined\" && typeof products[categ][product] != 'undefined') {\n            var quantity = parseInt(event.target.value);\n            SelectedProductPrices[index] = products[categ][product].price * quantity;\n            SelectedProductQty[index] = quantity;\n            subTotal = _this2.computeSubtotal();\n            total = subTotal - discount;\n\n            _this2.setState({\n              SelectedProductQty,\n              SelectedProductPrices,\n              subTotal,\n              total\n            });\n          }\n        },\n        name: \"productName\",\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }\n      });\n    };\n\n    _this2.computeSubtotal = function () {\n      return _this2.state.SelectedProductPrices.reduce(function (value, newVal) {\n        return value + newVal;\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(SalePage, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          rowCount = _this$state.rowCount,\n          SelectedItems = _this$state.SelectedItems,\n          subTotal = _this$state.subTotal,\n          total = _this$state.total,\n          discount = _this$state.discount;\n      return /*#__PURE__*/React.createElement(MDBContainer, {\n        style: {\n          paddingTop: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MDBRow, {\n        className: \"d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        size: \"12\",\n        xl: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MDBCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(MDBCardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(MDBCardHeader, {\n        className: \"form-header blue-gradient rounded\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"my-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(MDBIcon, {\n        icon: \"dollar-sign\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 41\n        }\n      }), \" Sale\")), /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"grey-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"4\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Customer Name\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            customerName: event.target.value\n          });\n        },\n        name: \"productName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"1\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"2\",\n        className: \"mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBDatePicker, {\n        getValue: function getValue(value) {\n          return _this3.setState({\n            date: \"\".concat(value.getDate(), \"-\").concat(value.getMonth(), \"-\").concat(value.getYear() + 1900)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"2\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBTimePicker, {\n        getValue: function getValue(value) {\n          return _this3.setState({\n            time: value\n          });\n        },\n        id: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBBtn, {\n        color: \"red\",\n        onClick: this.onAdd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 49\n        }\n      }, \"Add\"))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBTable, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(MDBTableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 61\n        }\n      }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 61\n        }\n      }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 61\n        }\n      }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 61\n        }\n      }, \"Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 61\n        }\n      }, \"Price\"))), /*#__PURE__*/React.createElement(MDBTableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 53\n        }\n      }, lodash.range(1, rowCount + 1).map(function (id) {\n        return /*#__PURE__*/React.createElement(Row, {\n          key: id,\n          id: id,\n          categoryComponent: _this3.categoryComponent,\n          productComponent: _this3.productComponent,\n          price: SelectedItems[id - 1].price,\n          quantity: _this3.quantityComponent,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 65\n          }\n        });\n      }))))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Subtotal \",\n        value: subTotal,\n        disabled: true,\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Discount \",\n        value: discount,\n        type: \"number\",\n        onChange: function onChange(val) {\n          var disc = 0;\n\n          if (val.target.value !== '') {\n            disc = parseInt(val.target.value);\n          }\n\n          var subTotal = _this3.computeSubtotal();\n\n          var total = subTotal - disc;\n\n          _this3.setState({\n            discount: disc,\n            subTotal,\n            total\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Total \",\n        value: total,\n        disabled: true,\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBLink, {\n        to: {\n          pathname: \"/invoice\",\n          data: this.state.Items()\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(MDBBtn, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 53\n        }\n      }, \" Enter Bill \"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 37\n        }\n      })))))));\n    }\n  }]);\n\n  return SalePage;\n}(Component);\n\nexport default SalePage;","map":{"version":3,"sources":["/home/hishsmtariq/ReactJsProjects/spare_part/src/spare_parts_components/pages/sale.jsx"],"names":["React","Component","lodash","MDBBtn","MDBCard","MDBCardBody","MDBCardHeader","MDBCol","MDBContainer","MDBIcon","MDBInput","MDBRow","MDBSelect","MDBTable","MDBTableBody","MDBTableHead","MDBLink","MDBDatePicker","MDBTimePicker","axios","getCurrentDate","Row","id","categoryComponent","productComponent","quantity","price","SalePage","notSelected","onEnter","state","SelectedProductPrices","SelectedProducts","SelectedProductIDs","SelectedProductQty","rowCount","subTotal","discount","total","customerName","date","time","items","range","map","index","sno","desc","qty","rate","Product_id","data","itemsLength","length","console","log","newItem","category","product","productId","isMounted","Items","SelectedItems","SelectedCategories","categories","products","componentDidMount","post","then","response","newCategory","text","Category_Name","value","Product_Name","Product_Retail_Price","Product_Quantity","newProduct","parseInt","hasOwnProperty","setState","onAdd","margin","selectedValue","onSelectedCategoryUpdate","computeSubtotal","options","val","onSelectedProductUpdate","quantityComponent","marginTop","event","categ","target","reduce","newVal","paddingTop","getDate","getMonth","getYear","disc","pathname"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport lodash from \"lodash\"\nimport {\n    MDBBtn,\n    MDBCard,\n    MDBCardBody,\n    MDBCardHeader,\n    MDBCol,\n    MDBContainer,\n    MDBIcon,\n    MDBInput,\n    MDBRow,\n    MDBSelect,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n    MDBLink,\n    MDBDatePicker,\n    MDBTimePicker\n} from \"mdbreact\";\nimport axios from \"axios\";\n\nimport getCurrentDate from \"../utils/get_current_date\"\n\nconst Row = ({id, categoryComponent, productComponent, quantity, price}) => {\n    return (\n        <tr>\n            <td>{id}</td>\n            <td>{categoryComponent(id)}</td>\n            <td>{productComponent(id)}</td>\n            <td>{quantity(id)}</td>\n            <td>{price}</td>\n        </tr>\n    );\n}\n\n\nclass SalePage extends Component {\n    notSelected = \"Chose your option\";\n\n    onEnter = () =>{\n        const {\n            SelectedProductPrices,\n            SelectedProducts,\n            SelectedProductIDs,\n            SelectedProductQty,\n            rowCount,\n            subTotal,\n            discount,\n            total,\n            customerName,\n            date,\n            time,\n        } = this.state;\n        //    Data Format\n        // {\n        //  sno: index\n        //  dec: Product Name,\n        //  qty: 1 (Quantity)\n        //  rate: Price\n        // }\n         let items = lodash.range(rowCount).map(index => {\n             return {\n                 sno: index,\n                 desc: SelectedProducts[index],\n                 qty: SelectedProductQty[index],\n                 rate: SelectedProductPrices[index],\n                 Product_id: SelectedProductIDs[index],\n             }\n         })\n        const data = {\n            subTotal: subTotal,\n            discount: discount,\n            total: total,\n            items: items,\n            itemsLength: items.length,\n            customerName: customerName,\n            date: date,\n            time: time,\n        };\n         console.log(data);\n         // axios.post(\"http://localhost/spare_parts/sales.php\", data);\n        return data;\n    }\n\n    newItem = {\n        category: this.notSelected,\n        product:this.notSelected,\n        price:0,\n        qty:1,\n        productId:\"\"\n    }\n\n    state = {\n        isMounted: false,\n        customerName: \"\",\n        date: \"\",\n        time: \"\",\n        rowCount: 1,\n        Items: this.onEnter,\n        SelectedItems: [\n            this.newItem\n        ],\n        SelectedCategories: [this.notSelected],\n        SelectedProducts: [this.notSelected],\n        SelectedProductPrices: [0],\n        SelectedProductQty: [1],\n        SelectedProductIDs: [\"\"],\n        subTotal: 0,\n        discount: 0,\n        total: 0,\n        categories: [\n            // {\n            //     text: \"Category Name\",\n            //     value: \"Category Value\"\n            // },\n        ],\n        products: {\n            // Data Format\n            // Category_Name: {\n            //     Product_Name: {\n            //         text: \"Product Name\",\n            //         value: \"Product Value\"\n            //         price: \"Product Price\"\n            //         id: Product_id,\n            //         qty: Product_Quantity,\n            //     },\n            // },\n        },\n    };\n\n    componentDidMount = async () => {\n        let {categories, products} = this.state;\n        await axios\n            .post(\"http://localhost/spare_parts/show_category.php\")\n            .then((response) => {\n                    response.data.map((category) => {\n                        const newCategory = {text: category.Category_Name, value: category.Category_Name};\n                        categories = [...categories, newCategory];\n                    });\n                }\n            );\n        await axios\n            .post(\"http://localhost/spare_parts/allproducts.php\")\n            .then((response) => {\n                    response.data.map((product) => {\n\n                        const {Product_Name, Category_Name, Product_Retail_Price,id, Product_Quantity } = product;\n                        const newProduct = {}\n                        newProduct[Product_Name] = {\n                            text: Product_Name,\n                            value: Product_Name,\n                            price: parseInt(Product_Retail_Price),\n                            id:id,\n                            qty: Product_Quantity,\n\n                        };\n                        if (!products.hasOwnProperty(product.Category_Name))\n                            products[Category_Name] = newProduct;\n                        else\n                            products[Category_Name][Product_Name] = newProduct[Product_Name];\n                    });\n                }\n            );\n        this.setState({products, categories})\n        this.setState({isMounted: true})\n    };\n\n    onAdd = () => {\n        let {rowCount,\n            SelectedItems\n        } = this.state;\n        SelectedItems[rowCount] = this.newItem;\n        rowCount += 1;\n        this.setState({SelectedItems, rowCount});\n    };\n\n    categoryComponent = (id) => {\n        const {categories, SelectedItems} = this.state;\n        const index = id - 1;\n        return (\n            <MDBSelect\n                search\n                style={{margin: 0}}\n                getValue={selectedValue => this.onSelectedCategoryUpdate(id, selectedValue[0])}\n                options={categories}\n                selected={SelectedItems[index].category}\n            />\n        );\n    };\n\n    onSelectedCategoryUpdate = (id, selectedValue) => {\n        let {\n            isMounted,\n            discount,\n            SelectedItems\n        } = this.state;\n\n\n        if (isMounted\n            && typeof selectedValue != \"undefined\"\n            && selectedValue !== SelectedItems[id - 1].category\n        ) {\n            const index = id - 1;\n            SelectedItems[index].category = selectedValue;\n            const subTotal = this.computeSubtotal();\n            const total = subTotal - discount;\n            this.setState({SelectedItems, subTotal, total});\n        }\n    };\n\n    productComponent = (id) => {\n        const {products, SelectedItems} = this.state;\n        const index = id - 1;\n        let options;\n        if (products[SelectedItems[index].category])\n            options = lodash.map(products[SelectedItems[index].category], function (val) {\n                return val;\n            })\n        else options = []\n\n        return (\n            <MDBSelect\n                search\n                style={{margin: 0}}\n                getValue={selectedValue => this.onSelectedProductUpdate(id, selectedValue[0])}\n                options={options}\n                selected={SelectedItems[index].product}\n            />\n        );\n    };\n\n    onSelectedProductUpdate = (id, selectedValue) => {\n        let {\n            SelectedProducts,\n            products,\n            isMounted,\n            discount,\n            SelectedItems\n        } = this.state;\n        const index = id - 1;\n        const category = SelectedItems[index].category;\n\n        if (isMounted\n            && selectedValue !== this.notSelected\n            && typeof selectedValue != \"undefined\"\n            && selectedValue !== SelectedProducts[id - 1]\n            && typeof category != 'undefined'\n        ) {\n            SelectedItems[index].price = products[category][selectedValue].price\n            SelectedItems[index].product = selectedValue;\n            const subTotal = this.computeSubtotal()\n            const total = subTotal - discount;\n            this.setState({SelectedItems, subTotal, total});\n        }\n    };\n\n    quantityComponent = (id) =>{\n        let {\n            SelectedProductQty,\n            SelectedProductPrices,\n            SelectedProducts,\n            SelectedCategories,\n            products,\n            subTotal,\n            total,\n            discount,\n        } = this.state;\n        const index = id - 1 ;\n\n      return(\n          <MDBInput\n              style={{marginTop:\"-1.5rem\"}}\n              label=\"Quantity\"\n              group\n              type=\"number\"\n              value={SelectedProductQty[index]}\n              validate\n              onChange={(event) => {\n                  const categ = SelectedCategories[index];\n                  const product = SelectedProducts[index];\n                  if(event.target.value !== '' &&\n                      typeof products[categ] != \"undefined\" &&\n                      typeof products[categ][product] != 'undefined'\n                  ){\n                      const quantity = parseInt(event.target.value);\n                      SelectedProductPrices[index] = products[categ][product].price * quantity\n                      SelectedProductQty[index] = quantity;\n                      subTotal = this.computeSubtotal();\n                      total = subTotal - discount;\n                      this.setState({SelectedProductQty, SelectedProductPrices, subTotal, total});\n                  }\n\n              }}\n              name=\"productName\"\n          />\n      )\n    };\n\n\n\n    computeSubtotal = () => {\n        return this.state.SelectedProductPrices.reduce((value, newVal) => {\n            return value + newVal;\n        });\n    }\n\n\n\n\n\n    render() {\n        const {rowCount, SelectedItems, subTotal, total, discount} = this.state;\n        return (\n            <MDBContainer style={{paddingTop: 50}}>\n                <MDBRow className=\"d-flex justify-content-center\">\n                    <MDBCol size=\"12\" xl=\"12\">\n                        <MDBCard>\n                            <MDBCardBody>\n                                <MDBCardHeader className=\"form-header blue-gradient rounded\">\n                                    <h3 className=\"my-3\">\n                                        <MDBIcon icon=\"dollar-sign\"/> Sale\n                                    </h3>\n                                </MDBCardHeader>\n                                <form>\n                                    <div className=\"grey-text\">\n                                        {/*---------- Row 1 ----------*/}\n                                        <MDBRow>\n                                            <MDBCol sm=\"4\" className=\"mb-3\">\n                                                <MDBInput\n                                                    label=\"Customer Name\"\n                                                    group\n                                                    type=\"text\"\n                                                    validate\n                                                    onChange={(event) =>\n                                                        this.setState({customerName: event.target.value})\n                                                    }\n                                                    name=\"productName\"\n                                                />\n                                            </MDBCol>\n                                            <MDBCol sm=\"1\" className=\"mb-3\"/>\n                                            <MDBCol sm=\"2\" className=\"mt-2\">\n                                                <MDBDatePicker  getValue={value => this.setState(\n                                                    {date: `${value.getDate()}-${value.getMonth()}-${value.getYear()+1900}`}\n                                                    )} />\n                                            </MDBCol>\n                                            <MDBCol sm=\"2\" className=\"mb-3\">\n                                                <MDBTimePicker  getValue={value => this.setState({time: value})}  id={1}/>\n                                            </MDBCol>\n                                            <MDBCol sm=\"3\">\n                                                <MDBBtn color=\"red\" onClick={this.onAdd}>\n                                                    Add\n                                                </MDBBtn>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol>\n                                                <MDBTable>\n                                                    <MDBTableHead>\n                                                        <tr>\n                                                            <th>#</th>\n                                                            <th>Category</th>\n                                                            <th>Product</th>\n                                                            <th>Qty</th>\n                                                            <th>Price</th>\n                                                        </tr>\n                                                    </MDBTableHead>\n                                                    <MDBTableBody>\n                                                        {lodash.range(1, rowCount + 1).map((id) => {\n                                                            return (\n                                                                <Row key={id}\n                                                                     id={id}\n                                                                     categoryComponent={this.categoryComponent}\n                                                                     productComponent={this.productComponent}\n                                                                     price={SelectedItems[id - 1].price}\n                                                                     quantity={this.quantityComponent}\n                                                                />\n                                                            )\n                                                        })\n                                                        }\n                                                    </MDBTableBody>\n                                                </MDBTable>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol sm=\"3\">\n                                                <MDBInput label=\"Subtotal \" value={subTotal} disabled type=\"number\" />\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol sm=\"3\">\n                                                <MDBInput label=\"Discount \" value={discount} type=\"number\"  onChange={val => {\n                                                    let disc = 0\n                                                    if (val.target.value !== '') {\n                                                        disc = parseInt(val.target.value);\n                                                    }\n                                                    const subTotal = this.computeSubtotal();\n                                                    const total = subTotal - disc;\n                                                    this.setState({discount: disc, subTotal, total})\n                                                }}/>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol sm=\"3\">\n                                                <MDBInput label=\"Total \" value={total} disabled type=\"number\" />\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol sm=\"3\">\n                                                <MDBLink   to={{pathname: \"/invoice\",data: this.state.Items()}}>\n                                                    <MDBBtn> Enter Bill </MDBBtn>\n                                                </MDBLink>\n                                            </MDBCol>\n                                        </MDBRow>\n                                    </div>\n                                    <div className=\"text-center mt-4\"/>\n                                </form>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        );\n    }\n}\n\nexport default SalePage;\n\n"]},"metadata":{},"sourceType":"module"}