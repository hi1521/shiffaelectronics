{"ast":null,"code":"import _regeneratorRuntime from \"/home/hishsmtariq/GitProj/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/home/hishsmtariq/GitProj/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/hishsmtariq/GitProj/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/hishsmtariq/GitProj/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hishsmtariq/GitProj/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/hishsmtariq/GitProj/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/hishsmtariq/GitProj/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/hishsmtariq/GitProj/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/hishsmtariq/GitProj/spare_part/src/spare_parts_components/all_product.jsx\";\nimport React, { Component } from \"react\";\nimport { MDBDataTable, MDBBtn, MDBRow, MDBContainer, MDBCol } from \"mdbreact\";\nimport \"./all_product.css\";\nimport axios from \"axios\";\n\nvar AllProducts = /*#__PURE__*/function (_Component) {\n  _inherits(AllProducts, _Component);\n\n  var _super = _createSuper(AllProducts);\n\n  function AllProducts() {\n    var _this;\n\n    _classCallCheck(this, AllProducts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.quantityComponent = function (index) {\n      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var rows = _this.state.data.rows;\n      var quantity = rows.length > 0 ? rows[index].Product_Quantity : parseInt(value);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"md-form\",\n        style: {\n          margin: 0\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        // style={{width:\"150px\"}}\n        type: \"number\",\n        id: index + 1,\n        onChange: function onChange(event) {\n          return _this.onQuantityChange(index, event.target.value);\n        },\n        min: 0,\n        value: quantity,\n        className: \"form-control\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    _this.onQuantityChange = function (index, value) {\n      var quantity = 0;\n      if (value !== \"\") quantity = parseInt(value);\n      var _this$state = _this.state,\n          data = _this$state.data,\n          grossProfit = _this$state.grossProfit;\n      grossProfit -= data.rows[index].Profit;\n      data.rows[index].Product_Quantity = quantity;\n      var _data$rows$index = data.rows[index],\n          Product_Retail_Price = _data$rows$index.Product_Retail_Price,\n          Product_PurchasePrice = _data$rows$index.Product_PurchasePrice;\n      data.rows[index].Profit = (Product_Retail_Price - Product_PurchasePrice) * quantity;\n      grossProfit += data.rows[index].Profit;\n\n      _this.setState({\n        data,\n        grossProfit\n      });\n    };\n\n    _this.state = {\n      data: {\n        columns: [{\n          label: \"Name\",\n          field: \"Product_Name\",\n          sort: \"asc\",\n          width: 150\n        }, {\n          label: \"C.Name\",\n          field: \"Category_Name\",\n          sort: \"asc\",\n          width: 270\n        }, {\n          label: \"P.Brand\",\n          field: \"Product_Brand\",\n          sort: \"asc\",\n          width: 200\n        }, {\n          label: \"P.Code\",\n          field: \"Product_Code\",\n          sort: \"asc\",\n          width: 100\n        }, {\n          label: \"Qty\",\n          field: \"qty\",\n          sort: \"asc\",\n          width: 150\n        }, {\n          label: \"R.Price\",\n          field: \"Product_Retail_Price\",\n          sort: \"asc\",\n          width: 350\n        }, {\n          label: \"Profit\",\n          field: \"Profit\",\n          sort: \"asc\",\n          width: 350\n        }],\n        rows: []\n      },\n      grossProfit: 0\n    };\n    _this.componentDidMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _this$state2, data, grossProfit, rows;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state2 = _this.state, data = _this$state2.data, grossProfit = _this$state2.grossProfit;\n              rows = data.rows;\n              _context.next = 4;\n              return axios.post(\"http://localhost/spare_parts/allproducts.php\").then(function (response) {\n                response.data.map(function (product, index) {\n                  var Product_Retail_Price = product.Product_Retail_Price,\n                      Product_PurchasePrice = product.Product_PurchasePrice,\n                      Product_Quantity = product.Product_Quantity;\n                  product[\"qty\"] = _this.quantityComponent(index, product.Product_Quantity);\n                  product[\"Profit\"] = (Product_Retail_Price - Product_PurchasePrice) * Product_Quantity;\n                  grossProfit += product[\"Profit\"];\n                  rows = [].concat(_toConsumableArray(rows), [product]);\n                  return null;\n                });\n              });\n\n            case 4:\n              data.rows = rows;\n\n              _this.setState({\n                data,\n                grossProfit\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.onSave = function () {\n      var products = _this.state.data.rows.map(function (value) {\n        delete value.qty;\n        return value;\n      });\n\n      var data = {\n        items: products\n      };\n      console.log(data);\n      axios.post(\"http://localhost/spare_parts/update_product.php\", data).then(function (value) {\n        return console.log(value);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AllProducts, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var grossProfit = this.state.grossProfit;\n      var _this$state$data = this.state.data,\n          columns = _this$state$data.columns,\n          rows = _this$state$data.rows;\n      if (rows.length > 0) rows.map(function (value, index) {\n        rows[index].qty = _this2.quantityComponent(index); // rows[index].Product_PurchasePrice;\n        // rows[index].Product_Retail_Price;\n\n        return null;\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(MDBDataTable // className=\"form-header blue-gradient rounded\"\n      , {\n        theadColor: \"blue-gradient\",\n        striped: true,\n        barReverse: true,\n        theadTextWhite: true,\n        hover: true,\n        noBottomColumns: true,\n        data: {\n          columns,\n          rows\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(MDBContainer, {\n        style: {\n          paddingTop: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MDBRow, {\n        className: \"d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MDBBtn, {\n        color: \"success\",\n        onClick: this.onSave,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }\n      }, \"Save\")), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: \"20px\",\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }\n      }, \"Gross Profit:\", \" \"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"inline-block\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        style: {\n          color: \"#00C851\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      }, \"Rs.\".concat(grossProfit)))))));\n    }\n  }]);\n\n  return AllProducts;\n}(Component);\n\nexport default AllProducts;","map":{"version":3,"sources":["/home/hishsmtariq/GitProj/spare_part/src/spare_parts_components/all_product.jsx"],"names":["React","Component","MDBDataTable","MDBBtn","MDBRow","MDBContainer","MDBCol","axios","AllProducts","quantityComponent","index","value","rows","state","data","quantity","length","Product_Quantity","parseInt","margin","event","onQuantityChange","target","grossProfit","Profit","Product_Retail_Price","Product_PurchasePrice","setState","columns","label","field","sort","width","componentDidMount","post","then","response","map","product","onSave","products","qty","items","console","log","paddingTop","fontSize","fontWeight","display","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { MDBDataTable, MDBBtn, MDBRow, MDBContainer, MDBCol } from \"mdbreact\";\nimport \"./all_product.css\";\nimport axios from \"axios\";\n\nclass AllProducts extends Component {\n  quantityComponent = (index, value = null) => {\n    const { rows } = this.state.data;\n    const quantity =\n      rows.length > 0 ? rows[index].Product_Quantity : parseInt(value);\n    return (\n      <div className=\"md-form\" style={{ margin: 0 }}>\n        <input\n          // style={{width:\"150px\"}}\n          type=\"number\"\n          id={index + 1}\n          onChange={(event) => this.onQuantityChange(index, event.target.value)}\n          min={0}\n          value={quantity}\n          className=\"form-control\"\n        />\n      </div>\n    );\n  };\n\n  onQuantityChange = (index, value) => {\n    let quantity = 0;\n    if (value !== \"\") quantity = parseInt(value);\n    let { data, grossProfit } = this.state;\n    grossProfit -= data.rows[index].Profit;\n    data.rows[index].Product_Quantity = quantity;\n    const { Product_Retail_Price, Product_PurchasePrice } = data.rows[index];\n    data.rows[index].Profit =\n      (Product_Retail_Price - Product_PurchasePrice) * quantity;\n    grossProfit += data.rows[index].Profit;\n    this.setState({ data, grossProfit });\n  };\n\n  state = {\n    data: {\n      columns: [\n        {\n          label: \"Name\",\n          field: \"Product_Name\",\n          sort: \"asc\",\n          width: 150,\n        },\n        {\n          label: \"C.Name\",\n          field: \"Category_Name\",\n          sort: \"asc\",\n          width: 270,\n        },\n        {\n          label: \"P.Brand\",\n          field: \"Product_Brand\",\n          sort: \"asc\",\n          width: 200,\n        },\n        {\n          label: \"P.Code\",\n          field: \"Product_Code\",\n          sort: \"asc\",\n          width: 100,\n        },\n        {\n          label: \"Qty\",\n          field: \"qty\",\n          sort: \"asc\",\n          width: 150,\n        },\n        {\n          label: \"R.Price\",\n          field: \"Product_Retail_Price\",\n          sort: \"asc\",\n          width: 350,\n        },\n        {\n          label: \"Profit\",\n          field: \"Profit\",\n          sort: \"asc\",\n          width: 350,\n        },\n      ],\n      rows: [],\n    },\n    grossProfit: 0,\n  };\n\n  componentDidMount = async () => {\n    let { data, grossProfit } = this.state;\n    let rows = data.rows;\n    await axios\n      .post(\"http://localhost/spare_parts/allproducts.php\")\n      .then((response) => {\n        response.data.map((product, index) => {\n          const {\n            Product_Retail_Price,\n            Product_PurchasePrice,\n            Product_Quantity,\n          } = product;\n          product[\"qty\"] = this.quantityComponent(\n            index,\n            product.Product_Quantity\n          );\n          product[\"Profit\"] =\n            (Product_Retail_Price - Product_PurchasePrice) * Product_Quantity;\n          grossProfit += product[\"Profit\"];\n          rows = [...rows, product];\n          return null;\n        });\n      });\n    data.rows = rows;\n    this.setState({ data, grossProfit });\n  };\n\n  onSave = () => {\n    const products = this.state.data.rows.map((value) => {\n      delete value.qty;\n      return value;\n    });\n\n    const data = {\n      items: products,\n    };\n\n    console.log(data);\n    axios\n      .post(\"http://localhost/spare_parts/update_product.php\", data)\n      .then((value) => console.log(value));\n  };\n\n  render() {\n    const { grossProfit } = this.state;\n    let { columns, rows } = this.state.data;\n    if (rows.length > 0)\n      rows.map((value, index) => {\n        rows[index].qty = this.quantityComponent(index);\n        // rows[index].Product_PurchasePrice;\n        // rows[index].Product_Retail_Price;\n        return null;\n      });\n    return (\n      <div>\n        <MDBDataTable\n          // className=\"form-header blue-gradient rounded\"\n          theadColor={\"blue-gradient\"}\n          striped\n          barReverse={true}\n          theadTextWhite={true}\n          hover\n          noBottomColumns={true}\n          data={{ columns, rows }}\n        />\n        <MDBContainer style={{ paddingTop: 50 }}>\n          <MDBRow className=\"d-flex justify-content-center\">\n            <MDBCol sm={8}>\n              <MDBBtn color={\"success\"} onClick={this.onSave}>\n                Save\n              </MDBBtn>\n            </MDBCol>\n            <MDBCol sm={4}>\n              <span style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\n                Gross Profit:{\" \"}\n              </span>\n              <div style={{ display: \"inline-block\" }}>\n                <h4 style={{ color: \"#00C851\" }}>{`Rs.${grossProfit}`}</h4>\n              </div>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      </div>\n    );\n  }\n}\n\nexport default AllProducts;\n"]},"metadata":{},"sourceType":"module"}