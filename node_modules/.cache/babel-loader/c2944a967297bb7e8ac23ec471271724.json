{"ast":null,"code":"import _classCallCheck from\"/home/hishsmtariq/GitProj/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/hishsmtariq/GitProj/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/hishsmtariq/GitProj/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/hishsmtariq/GitProj/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{MDBBtn,MDBCard,MDBCardBody,MDBCol,MDBContainer,MDBInput,MDBRow}from\"mdbreact\";var axios=require(\"axios\");var LoginPage=/*#__PURE__*/function(_Component){_inherits(LoginPage,_Component);var _super=_createSuper(LoginPage);function LoginPage(){var _this;_classCallCheck(this,LoginPage);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={email:\"\",password:\"\",login:false};_this.componentWillMount=function(){axios.post(\"http://localhost/spare_parts/session_checker.php\").then(function(value){if(value.data===\"no record found\")return null;else if(value.data[0].status===\"1\"){_this.props.history.push(\"/\");}});};_this.onLogin=function(val){var _this$state=_this.state,email=_this$state.email,password=_this$state.password;axios.post(\"http://localhost/spare_parts/signin.php\",JSON.stringify({email:email})).then(function(response){var status=response.data[0].pwd===password;// this.setState({email: \"\", password: \"\"});\nif(status){axios.post(\"http://localhost/spare_parts/session_create.php\",{email:email}).then(function(value){return _this.setState({login:true});});}});};return _this;}_createClass(LoginPage,[{key:\"render\",value:function render(){var _this2=this;if(this.state.login)this.props.history.push(\"/\");var _this$state2=this.state,email=_this$state2.email,password=_this$state2.password;return/*#__PURE__*/React.createElement(MDBContainer,null,/*#__PURE__*/React.createElement(MDBRow,null,/*#__PURE__*/React.createElement(MDBCol,{md:\"6\"},/*#__PURE__*/React.createElement(MDBCard,null,/*#__PURE__*/React.createElement(\"div\",{className:\"header pt-3 grey lighten-2\"},/*#__PURE__*/React.createElement(MDBRow,{className:\"d-flex justify-content-start\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"deep-grey-text mt-3 mb-4 pb-1 mx-5\"},\"Log in\"))),/*#__PURE__*/React.createElement(MDBCardBody,{className:\"mx-4 mt-4\"},/*#__PURE__*/React.createElement(MDBInput,{label:\"Your email\",value:email,group:true,type:\"text\",validate:true,onChange:function onChange(event){return _this2.setState({email:event.target.value});}}),/*#__PURE__*/React.createElement(MDBInput,{label:\"Your password\",value:password,group:true,type:\"password\",validate:true,containerClass:\"mb-0\",onChange:function onChange(event){return _this2.setState({password:event.target.value});}}),/*#__PURE__*/React.createElement(\"p\",{className:\"font-small grey-text d-flex justify-content-end\"},\"Forgot\",/*#__PURE__*/React.createElement(\"span\",{className:\"dark-grey-text font-weight-bold ml-1\"},\"Password?\")),/*#__PURE__*/React.createElement(\"div\",{className:\"text-center mb-4 mt-5\"},/*#__PURE__*/React.createElement(MDBBtn,{color:\"danger\",type:\"button\",className:\"btn-block z-depth-2\",onClick:function onClick(){return _this2.onLogin(true);}},\"Log in\")),/*#__PURE__*/React.createElement(\"p\",{className:\"font-small grey-text d-flex justify-content-center\"},\"Don't have an account?\",/*#__PURE__*/React.createElement(\"span\",{className:\"dark-grey-text font-weight-bold ml-1\"},\"Sign up\")))))));}}]);return LoginPage;}(Component);export default LoginPage;","map":{"version":3,"sources":["/home/hishsmtariq/GitProj/spare_part/src/spare_parts_components/pages/login.jsx"],"names":["React","Component","MDBBtn","MDBCard","MDBCardBody","MDBCol","MDBContainer","MDBInput","MDBRow","axios","require","LoginPage","state","email","password","login","componentWillMount","post","then","value","data","status","props","history","push","onLogin","val","JSON","stringify","response","pwd","setState","event","target"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport {\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCol,\n  MDBContainer,\n  MDBInput,\n  MDBRow,\n} from \"mdbreact\";\n\nconst axios = require(\"axios\");\n\nclass LoginPage extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    login: false,\n  };\n\n  componentWillMount = () => {\n    axios\n      .post(\"http://localhost/spare_parts/session_checker.php\")\n      .then((value) => {\n        if (value.data === \"no record found\") return null;\n        else if (value.data[0].status === \"1\") {\n          this.props.history.push(\"/\");\n        }\n      });\n  };\n\n  onLogin = (val) => {\n    const { email, password } = this.state;\n    axios\n      .post(\n        \"http://localhost/spare_parts/signin.php\",\n        JSON.stringify({\n          email: email,\n        })\n      )\n      .then((response) => {\n        const status = response.data[0].pwd === password;\n        // this.setState({email: \"\", password: \"\"});\n        if (status) {\n          axios\n            .post(\"http://localhost/spare_parts/session_create.php\", {\n              email: email,\n            })\n            .then((value) => this.setState({ login: true }));\n        }\n      });\n  };\n\n  render() {\n    if (this.state.login) this.props.history.push(\"/\");\n    const { email, password } = this.state;\n    return (\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <MDBCard>\n              <div className=\"header pt-3 grey lighten-2\">\n                <MDBRow className=\"d-flex justify-content-start\">\n                  <h3 className=\"deep-grey-text mt-3 mb-4 pb-1 mx-5\">Log in</h3>\n                </MDBRow>\n              </div>\n              <MDBCardBody className=\"mx-4 mt-4\">\n                <MDBInput\n                  label=\"Your email\"\n                  value={email}\n                  group\n                  type=\"text\"\n                  validate\n                  onChange={(event) =>\n                    this.setState({ email: event.target.value })\n                  }\n                />\n                <MDBInput\n                  label=\"Your password\"\n                  value={password}\n                  group\n                  type=\"password\"\n                  validate\n                  containerClass=\"mb-0\"\n                  onChange={(event) =>\n                    this.setState({ password: event.target.value })\n                  }\n                />\n                <p className=\"font-small grey-text d-flex justify-content-end\">\n                  Forgot\n                  <span className=\"dark-grey-text font-weight-bold ml-1\">\n                    Password?\n                  </span>\n                </p>\n                <div className=\"text-center mb-4 mt-5\">\n                  <MDBBtn\n                    color=\"danger\"\n                    type=\"button\"\n                    className=\"btn-block z-depth-2\"\n                    onClick={() => this.onLogin(true)}\n                  >\n                    Log in\n                  </MDBBtn>\n                </div>\n                <p className=\"font-small grey-text d-flex justify-content-center\">\n                  Don't have an account?\n                  <span className=\"dark-grey-text font-weight-bold ml-1\">\n                    Sign up\n                  </span>\n                </p>\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    );\n  }\n}\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}