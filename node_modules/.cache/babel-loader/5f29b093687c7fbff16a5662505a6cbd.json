{"ast":null,"code":"import _regeneratorRuntime from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hishsmtariq/ReactJsProjects/spare_part/src/spare_parts_components/pages/sale.jsx\";\n\nimport React, { Component } from \"react\";\nimport lodash from \"lodash\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardHeader, MDBCol, MDBContainer, MDBIcon, MDBInput, MDBRow, MDBSelect, MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\nimport axios from \"axios\";\nimport getCurrentDate from \"../utils/get_current_date\";\n\nvar Row = function Row(_ref) {\n  var id = _ref.id,\n      categoryComponent = _ref.categoryComponent,\n      productComponent = _ref.productComponent,\n      price = _ref.price;\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, categoryComponent(id)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, productComponent(id)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, price));\n};\n\nvar SalePage = /*#__PURE__*/function (_Component) {\n  _inherits(SalePage, _Component);\n\n  var _super = _createSuper(SalePage);\n\n  function SalePage() {\n    var _this2;\n\n    _classCallCheck(this, SalePage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.notSelected = \"Chose your option\";\n    _this2.state = {\n      isMounted: false,\n      CustomerName: \"\",\n      rowCount: 1,\n      SelectedCategories: [_this2.notSelected],\n      SelectedProducts: [_this2.notSelected],\n      SelectedProductPrices: [0],\n      categories: [// {\n        //     text: \"Category Name\",\n        //     value: \"Category Value\"\n        // },\n      ],\n      products: {// Data Format\n        // Category_Name: [\n        //     {\n        //         text: \"Product Name\",\n        //         value: \"Product Value\"\n        //         price: \"Product Price\"\n        //     },\n        // },\n      }\n    };\n    _this2.componentDidMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _this2$state, categories, products;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this2$state = _this2.state, categories = _this2$state.categories, products = _this2$state.products;\n              _context.next = 3;\n              return axios.post(\"http://localhost/spare_parts/show_category.php\").then(function (response) {\n                response.data.map(function (category) {\n                  var newCategory = {\n                    text: category.Category_Name,\n                    value: category.Category_Name\n                  };\n                  categories = [].concat(_toConsumableArray(categories), [newCategory]);\n                });\n              });\n\n            case 3:\n              _context.next = 5;\n              return axios.post(\"http://localhost/spare_parts/allproducts.php\").then(function (response) {\n                response.data.map(function (product) {\n                  var Product_Name = product.Product_Name,\n                      Category_Name = product.Category_Name,\n                      Product_Retail_Price = product.Product_Retail_Price;\n                  var newProduct = {};\n                  newProduct[Product_Name] = {\n                    text: Product_Name,\n                    value: Product_Name // price: Product_Retail_Price\n\n                  };\n                  if (!products.hasOwnProperty(product.Category_Name)) products[Category_Name] = newProduct;else products[Category_Name][Product_Name] = newProduct[Product_Name];\n                });\n              });\n\n            case 5:\n              _this2.setState({\n                products,\n                categories\n              });\n\n              _this2.setState({\n                isMounted: true\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this2.onAdd = function () {};\n\n    _this2.categoryComponent = function (id) {\n      var index = id - 1;\n      return /*#__PURE__*/React.createElement(MDBSelect, {\n        search: true,\n        style: {\n          margin: 0\n        },\n        getValue: function getValue(selectedValue) {\n          return _this2.onSelectedCategoryUpdate(id, selectedValue[0]);\n        },\n        options: _this2.state.categories,\n        selected: _this2.state.SelectedCategories[index],\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this2.onSelectedCategoryUpdate = function (id, selectedValue) {\n      if (_this2.state.isMounted && typeof selectedValue != \"undefined\" && selectedValue !== _this2.state.SelectedCategories[id - 1]) {\n        console.log(\"Category \", selectedValue);\n        var index = id - 1;\n        var SelectedCategories = _this2.state.SelectedCategories;\n        SelectedCategories[index] = selectedValue;\n\n        _this2.setState({\n          SelectedCategories\n        });\n      }\n    };\n\n    _this2.productComponent = function (id) {\n      var _this2$state2 = _this2.state,\n          products = _this2$state2.products,\n          SelectedCategories = _this2$state2.SelectedCategories,\n          SelectedProducts = _this2$state2.SelectedProducts;\n      var index = id - 1;\n      var options;\n\n      if (products[SelectedCategories[index]]) {\n        options = lodash.map(products[SelectedCategories[index]], function (val) {\n          return val;\n        });\n      } else {\n        options = [];\n      } // products[SelectedCategories[index]].map((val) => console.log(val))\n\n\n      return /*#__PURE__*/React.createElement(MDBSelect, {\n        search: true,\n        style: {\n          margin: 0\n        },\n        getTextContent: function getTextContent(selectedValue) {\n          return _this2.onSelectedProductUpdate(id, selectedValue);\n        },\n        options: options,\n        selected: SelectedProducts[index],\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this2.onSelectedProductUpdate = function (id, selectedValue) {\n      // && selectedValue !== 'undefined'\n      if (_this2.state.isMounted && selectedValue !== _this2.notSelected) {\n        console.log(\"Product\", selectedValue);\n        var _this2$state3 = _this2.state,\n            SelectedCategories = _this2$state3.SelectedCategories,\n            SelectedProducts = _this2$state3.SelectedProducts,\n            products = _this2$state3.products,\n            SelectedProductPrices = _this2$state3.SelectedProductPrices;\n        var index = id - 1;\n        var category = SelectedCategories[index];\n        SelectedProducts[index] = selectedValue;\n\n        _this2.setState({\n          SelectedProducts\n        });\n      }\n    };\n\n    _this2.rowComponent = function (id) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }\n      }, id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }\n      }, _this2.categoryComponent(id)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }\n      }, _this2.productComponent(id)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }, _this2.state.SelectedProductPrices[id - 1]));\n    };\n\n    return _this2;\n  }\n\n  _createClass(SalePage, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          rowCount = _this$state.rowCount,\n          SelectedProductPrices = _this$state.SelectedProductPrices;\n      return /*#__PURE__*/React.createElement(MDBContainer, {\n        style: {\n          paddingTop: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MDBRow, {\n        className: \"d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        size: \"12\",\n        xl: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MDBCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(MDBCardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(MDBCardHeader, {\n        className: \"form-header blue-gradient rounded\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"my-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(MDBIcon, {\n        icon: \"dollar-sign\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 41\n        }\n      }), \" Sale\")), /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"grey-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"4\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Customer Name\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            CustomerName: event.target.value\n          });\n        },\n        name: \"productName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"1\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"4\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Date\",\n        disabled: true,\n        group: true,\n        type: \"text\",\n        value: getCurrentDate(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBBtn, {\n        color: \"red\",\n        onClick: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 49\n        }\n      }, \"Add\"))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBTable, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"caption\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 53\n        }\n      }, \"List of users\"), /*#__PURE__*/React.createElement(MDBTableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 61\n        }\n      }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 61\n        }\n      }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 61\n        }\n      }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 61\n        }\n      }, \"Price\"))), /*#__PURE__*/React.createElement(MDBTableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 53\n        }\n      }, lodash.range(1, rowCount + 1).map(function (id) {\n        return /*#__PURE__*/React.createElement(Row, {\n          key: id,\n          id: id,\n          categoryComponent: _this3.categoryComponent,\n          productComponent: _this3.productComponent,\n          price: SelectedProductPrices[id - 1],\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 65\n          }\n        });\n      })))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(MDBBtn, {\n        color: \"light-blue\",\n        className: \"mb-3\",\n        onClick: this.onAdd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 33\n        }\n      }, \"Add\"))))));\n    }\n  }]);\n\n  return SalePage;\n}(Component);\n\nexport default SalePage;","map":{"version":3,"sources":["/home/hishsmtariq/ReactJsProjects/spare_part/src/spare_parts_components/pages/sale.jsx"],"names":["React","Component","lodash","MDBBtn","MDBCard","MDBCardBody","MDBCardHeader","MDBCol","MDBContainer","MDBIcon","MDBInput","MDBRow","MDBSelect","MDBTable","MDBTableBody","MDBTableHead","axios","getCurrentDate","Row","id","categoryComponent","productComponent","price","SalePage","notSelected","state","isMounted","CustomerName","rowCount","SelectedCategories","SelectedProducts","SelectedProductPrices","categories","products","componentDidMount","post","then","response","data","map","category","newCategory","text","Category_Name","value","product","Product_Name","Product_Retail_Price","newProduct","hasOwnProperty","setState","onAdd","index","margin","selectedValue","onSelectedCategoryUpdate","console","log","options","val","onSelectedProductUpdate","rowComponent","paddingTop","event","target","range"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport lodash from \"lodash\"\nimport {\n    MDBBtn,\n    MDBCard,\n    MDBCardBody,\n    MDBCardHeader,\n    MDBCol,\n    MDBContainer,\n    MDBIcon,\n    MDBInput,\n    MDBRow,\n    MDBSelect,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n} from \"mdbreact\";\nimport axios from \"axios\";\n\nimport getCurrentDate from \"../utils/get_current_date\"\n\nconst Row = ({id, categoryComponent, productComponent, price}) => {\n    return (\n        <tr>\n            <td>{id}</td>\n            <td>{categoryComponent(id)}</td>\n            <td>{productComponent(id)}</td>\n            <td>{price}</td>\n        </tr>\n    );\n}\n\n\nclass SalePage extends Component {\n    notSelected = \"Chose your option\";\n    state = {\n        isMounted: false,\n        CustomerName: \"\",\n        rowCount: 1,\n        SelectedCategories: [this.notSelected],\n        SelectedProducts: [this.notSelected],\n        SelectedProductPrices: [0],\n        categories: [\n            // {\n            //     text: \"Category Name\",\n            //     value: \"Category Value\"\n            // },\n        ],\n        products: {\n            // Data Format\n            // Category_Name: [\n            //     {\n            //         text: \"Product Name\",\n            //         value: \"Product Value\"\n            //         price: \"Product Price\"\n            //     },\n            // },\n        },\n    };\n\n    componentDidMount = async () => {\n        let {categories, products} = this.state;\n        await axios\n            .post(\"http://localhost/spare_parts/show_category.php\")\n            .then((response) => {\n                    response.data.map((category) => {\n                        const newCategory = {text: category.Category_Name, value: category.Category_Name};\n                        categories = [...categories, newCategory];\n                    });\n                }\n            );\n        await axios\n            .post(\"http://localhost/spare_parts/allproducts.php\")\n            .then((response) => {\n                    response.data.map((product) => {\n                        const {Product_Name, Category_Name, Product_Retail_Price} = product;\n                        const newProduct = {}\n                        newProduct[Product_Name] = {\n                            text: Product_Name,\n                            value: Product_Name,\n                            // price: Product_Retail_Price\n                        };\n                        if (!products.hasOwnProperty(product.Category_Name))\n                            products[Category_Name] = newProduct;\n                        else\n                            products[Category_Name][Product_Name] = newProduct[Product_Name];\n                    });\n                }\n            );\n            this.setState({products, categories})\n            this.setState({isMounted: true})\n    };\n\n    onAdd = () => {\n    };\n\n    categoryComponent = (id) => {\n        const index = id - 1;\n        return (\n            <MDBSelect\n                search\n                style={{margin: 0}}\n                getValue={selectedValue => this.onSelectedCategoryUpdate(id, selectedValue[0])}\n                options={this.state.categories}\n                selected={this.state.SelectedCategories[index]}\n            />\n        );\n    };\n\n    onSelectedCategoryUpdate = (id, selectedValue) => {\n        if (this.state.isMounted && typeof selectedValue != \"undefined\" && selectedValue !== this.state.SelectedCategories[id -1]) {\n            console.log(\"Category \",selectedValue);\n            const index = id - 1;\n            let {SelectedCategories} = this.state;\n            SelectedCategories[index] = selectedValue;\n            this.setState({SelectedCategories});\n        }\n    };\n\n    productComponent = (id) => {\n        const {products, SelectedCategories, SelectedProducts} = this.state;\n        const index = id - 1;\n        let options;\n        if (products[SelectedCategories[index]]) {\n            options = lodash.map(products[SelectedCategories[index]], function (val) {\n                return val;\n            })\n        } else {\n            options = []\n        }\n\n        // products[SelectedCategories[index]].map((val) => console.log(val))\n        return (\n            <MDBSelect\n                search\n                style={{margin: 0}}\n                getTextContent={selectedValue => this.onSelectedProductUpdate(id, selectedValue)}\n                options={options}\n                selected={SelectedProducts[index]}\n            />\n        );\n    };\n\n    onSelectedProductUpdate = (id, selectedValue) => {\n    // && selectedValue !== 'undefined'\n        if (this.state.isMounted && selectedValue !== this.notSelected) {\n            console.log(\"Product\", selectedValue );\n            let {SelectedCategories, SelectedProducts, products, SelectedProductPrices} = this.state;\n            const index = id - 1;\n            const category = SelectedCategories[index];\n            SelectedProducts[index] = selectedValue;\n            this.setState({SelectedProducts});\n        }\n    };\n\n    rowComponent = (id) => {\n        return (\n            <tr>\n                <td>{id}</td>\n                <td>{this.categoryComponent(id)}</td>\n                <td>{this.productComponent(id)}</td>\n                <td>{this.state.SelectedProductPrices[id - 1]}</td>\n            </tr>\n        );\n    }\n\n    render() {\n        const {rowCount, SelectedProductPrices} = this.state;\n        return (\n            <MDBContainer style={{paddingTop: 50}}>\n                <MDBRow className=\"d-flex justify-content-center\">\n                    <MDBCol size=\"12\" xl=\"12\">\n                        <MDBCard>\n                            <MDBCardBody>\n                                <MDBCardHeader className=\"form-header blue-gradient rounded\">\n                                    <h3 className=\"my-3\">\n                                        <MDBIcon icon=\"dollar-sign\"/> Sale\n                                    </h3>\n                                </MDBCardHeader>\n                                <form>\n                                    <div className=\"grey-text\">\n                                        {/*---------- Row 1 ----------*/}\n                                        <MDBRow>\n                                            <MDBCol sm=\"4\" className=\"mb-3\">\n                                                <MDBInput\n                                                    label=\"Customer Name\"\n                                                    group\n                                                    type=\"text\"\n                                                    validate\n                                                    onChange={(event) =>\n                                                        this.setState({CustomerName: event.target.value})\n                                                    }\n                                                    name=\"productName\"\n                                                />\n                                            </MDBCol>\n                                            <MDBCol sm=\"1\" className=\"mb-3\"/>\n                                            <MDBCol sm=\"4\" className=\"mb-3\">\n                                                <MDBInput\n                                                    label=\"Date\"\n                                                    disabled={true}\n                                                    group\n                                                    type=\"text\"\n                                                    value={getCurrentDate()}\n                                                />\n                                            </MDBCol>\n                                            <MDBCol sm=\"3\">\n                                                <MDBBtn color=\"red\" onClick={null}>\n                                                    Add\n                                                </MDBBtn>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol>\n                                                <MDBTable>\n                                                    <caption>List of users</caption>\n                                                    <MDBTableHead>\n                                                        <tr>\n                                                            <th>#</th>\n                                                            <th>Category</th>\n                                                            <th>Product</th>\n                                                            <th>Price</th>\n                                                        </tr>\n                                                    </MDBTableHead>\n                                                    <MDBTableBody>\n                                                        {lodash.range(1, rowCount + 1).map((id) => {\n                                                            return (\n                                                                <Row key={id}\n                                                                     id={id}\n                                                                     categoryComponent={this.categoryComponent}\n                                                                     productComponent={this.productComponent}\n                                                                     price={SelectedProductPrices[id - 1]}\n                                                                />\n                                                            )})\n                                                        }\n                                                    </MDBTableBody>\n                                                </MDBTable>\n                                            </MDBCol>\n                                        </MDBRow>\n                                    </div>\n                                    <div className=\"text-center mt-4\"/>\n                                </form>\n                                <MDBBtn\n                                    color=\"light-blue\"\n                                    className=\"mb-3\"\n                                    onClick={this.onAdd}\n                                >\n                                    Add\n                                </MDBBtn>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        );\n    }\n}\n\nexport default SalePage;\n\n"]},"metadata":{},"sourceType":"module"}