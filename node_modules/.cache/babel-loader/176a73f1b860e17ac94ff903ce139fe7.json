{"ast":null,"code":"import _regeneratorRuntime from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hishsmtariq/ReactJsProjects/spare_part/src/spare_parts_components/pages/sale.jsx\";\n\nimport React, { Component } from \"react\";\nimport lodash from \"lodash\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardHeader, MDBCol, MDBContainer, MDBIcon, MDBInput, MDBRow, MDBSelect, MDBTable, MDBTableBody, MDBTableHead, MDBLink } from \"mdbreact\";\nimport axios from \"axios\";\nimport getCurrentDate from \"../utils/get_current_date\";\n\nvar Row = function Row(_ref) {\n  var id = _ref.id,\n      categoryComponent = _ref.categoryComponent,\n      productComponent = _ref.productComponent,\n      price = _ref.price;\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, categoryComponent(id)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, productComponent(id)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, price));\n};\n\nvar SalePage = /*#__PURE__*/function (_Component) {\n  _inherits(SalePage, _Component);\n\n  var _super = _createSuper(SalePage);\n\n  function SalePage() {\n    var _this2;\n\n    _classCallCheck(this, SalePage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.notSelected = \"Chose your option\";\n    _this2.state = {\n      isMounted: false,\n      CustomerName: \"\",\n      rowCount: 1,\n      SelectedCategories: [_this2.notSelected],\n      SelectedProducts: [_this2.notSelected],\n      SelectedProductPrices: [0],\n      subTotal: 0,\n      discount: 0,\n      total: 0,\n      categories: [// {\n        //     text: \"Category Name\",\n        //     value: \"Category Value\"\n        // },\n      ],\n      products: {// Data Format\n        // Category_Name: {\n        //     Product_Name: {\n        //         text: \"Product Name\",\n        //         value: \"Product Value\"\n        //         price: \"Product Price\"\n        //     },\n        // },\n      }\n    };\n    _this2.componentDidMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _this2$state, categories, products;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this2$state = _this2.state, categories = _this2$state.categories, products = _this2$state.products;\n              _context.next = 3;\n              return axios.post(\"http://localhost/spare_parts/show_category.php\").then(function (response) {\n                response.data.map(function (category) {\n                  var newCategory = {\n                    text: category.Category_Name,\n                    value: category.Category_Name\n                  };\n                  categories = [].concat(_toConsumableArray(categories), [newCategory]);\n                });\n              });\n\n            case 3:\n              _context.next = 5;\n              return axios.post(\"http://localhost/spare_parts/allproducts.php\").then(function (response) {\n                response.data.map(function (product) {\n                  var Product_Name = product.Product_Name,\n                      Category_Name = product.Category_Name,\n                      Product_Retail_Price = product.Product_Retail_Price;\n                  var newProduct = {};\n                  newProduct[Product_Name] = {\n                    text: Product_Name,\n                    value: Product_Name,\n                    price: parseInt(Product_Retail_Price)\n                  };\n                  if (!products.hasOwnProperty(product.Category_Name)) products[Category_Name] = newProduct;else products[Category_Name][Product_Name] = newProduct[Product_Name];\n                });\n              });\n\n            case 5:\n              _this2.setState({\n                products,\n                categories\n              });\n\n              _this2.setState({\n                isMounted: true\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this2.onAdd = function () {\n      var _this2$state2 = _this2.state,\n          rowCount = _this2$state2.rowCount,\n          SelectedProducts = _this2$state2.SelectedProducts,\n          SelectedCategories = _this2$state2.SelectedCategories,\n          SelectedProductPrices = _this2$state2.SelectedProductPrices;\n      SelectedProductPrices[rowCount] = 0;\n      SelectedProducts[rowCount] = _this2.notSelected;\n      SelectedCategories[rowCount] = _this2.notSelected;\n      rowCount += 1;\n\n      _this2.setState({\n        SelectedCategories,\n        SelectedProducts,\n        SelectedProductPrices,\n        rowCount\n      });\n    };\n\n    _this2.categoryComponent = function (id) {\n      var index = id - 1;\n      return /*#__PURE__*/React.createElement(MDBSelect, {\n        search: true,\n        style: {\n          margin: 0\n        },\n        getValue: function getValue(selectedValue) {\n          return _this2.onSelectedCategoryUpdate(id, selectedValue[0]);\n        },\n        options: _this2.state.categories,\n        selected: _this2.state.SelectedCategories[index],\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this2.onSelectedCategoryUpdate = function (id, selectedValue) {\n      var _this2$state3 = _this2.state,\n          isMounted = _this2$state3.isMounted,\n          SelectedCategories = _this2$state3.SelectedCategories,\n          discount = _this2$state3.discount;\n\n      if (isMounted && typeof selectedValue != \"undefined\" && selectedValue !== SelectedCategories[id - 1]) {\n        var index = id - 1;\n        SelectedCategories[index] = selectedValue;\n\n        var subTotal = _this2.computeSubtotal();\n\n        var total = subTotal - discount;\n\n        _this2.setState({\n          SelectedCategories,\n          subTotal,\n          total\n        });\n      }\n    };\n\n    _this2.productComponent = function (id) {\n      var _this2$state4 = _this2.state,\n          products = _this2$state4.products,\n          SelectedCategories = _this2$state4.SelectedCategories,\n          SelectedProducts = _this2$state4.SelectedProducts;\n      var index = id - 1;\n      var options;\n      if (products[SelectedCategories[index]]) options = lodash.map(products[SelectedCategories[index]], function (val) {\n        return val;\n      });else options = []; // products[SelectedCategories[index]].map((val) => console.log(val))\n\n      return /*#__PURE__*/React.createElement(MDBSelect, {\n        search: true,\n        style: {\n          margin: 0\n        },\n        getValue: function getValue(selectedValue) {\n          return _this2.onSelectedProductUpdate(id, selectedValue[0]);\n        },\n        options: options,\n        selected: SelectedProducts[index],\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this2.onSelectedProductUpdate = function (id, selectedValue) {\n      var _this2$state5 = _this2.state,\n          SelectedCategories = _this2$state5.SelectedCategories,\n          SelectedProducts = _this2$state5.SelectedProducts,\n          products = _this2$state5.products,\n          SelectedProductPrices = _this2$state5.SelectedProductPrices,\n          isMounted = _this2$state5.isMounted,\n          discount = _this2$state5.discount;\n      var index = id - 1;\n      var category = SelectedCategories[index];\n\n      if (isMounted && selectedValue !== _this2.notSelected && typeof selectedValue != \"undefined\" && selectedValue !== SelectedProducts[id - 1] && typeof category != 'undefined') {\n        SelectedProductPrices[index] = products[category][selectedValue].price;\n        SelectedProducts[index] = selectedValue;\n\n        var subTotal = _this2.computeSubtotal();\n\n        var total = subTotal - discount;\n\n        _this2.setState({\n          SelectedProducts,\n          SelectedProductPrices,\n          subTotal,\n          total\n        });\n      }\n    };\n\n    _this2.computeSubtotal = function () {\n      return _this2.state.SelectedProductPrices.reduce(function (value, newVal) {\n        return value + newVal;\n      });\n    };\n\n    _this2.onEnter = function () {\n      console.log(\"Enter\");\n    };\n\n    return _this2;\n  }\n\n  _createClass(SalePage, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          rowCount = _this$state.rowCount,\n          SelectedProductPrices = _this$state.SelectedProductPrices,\n          subTotal = _this$state.subTotal,\n          total = _this$state.total,\n          discount = _this$state.discount;\n      return /*#__PURE__*/React.createElement(MDBContainer, {\n        style: {\n          paddingTop: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MDBRow, {\n        className: \"d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        size: \"12\",\n        xl: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MDBCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(MDBCardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(MDBCardHeader, {\n        className: \"form-header blue-gradient rounded\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"my-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(MDBIcon, {\n        icon: \"dollar-sign\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 41\n        }\n      }), \" Sale\")), /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"grey-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"4\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Customer Name\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            CustomerName: event.target.value\n          });\n        },\n        name: \"productName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"1\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"4\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Date\",\n        disabled: true,\n        group: true,\n        type: \"text\",\n        value: getCurrentDate(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBBtn, {\n        color: \"red\",\n        onClick: this.onAdd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 49\n        }\n      }, \"Add\"))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBTable, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(MDBTableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 61\n        }\n      }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 61\n        }\n      }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 61\n        }\n      }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 61\n        }\n      }, \"Price\"))), /*#__PURE__*/React.createElement(MDBTableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 53\n        }\n      }, lodash.range(1, rowCount + 1).map(function (id) {\n        return /*#__PURE__*/React.createElement(Row, {\n          key: id,\n          id: id,\n          categoryComponent: _this3.categoryComponent,\n          productComponent: _this3.productComponent,\n          price: SelectedProductPrices[id - 1],\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 65\n          }\n        });\n      }))))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Subtotal \",\n        value: subTotal,\n        disabled: true,\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Discount \",\n        value: discount,\n        type: \"number\",\n        onChange: function onChange(val) {\n          var disc = 0;\n\n          if (val.target.value !== '') {\n            disc = parseInt(val.target.value);\n          }\n\n          var subTotal = _this3.computeSubtotal();\n\n          var total = subTotal - disc;\n\n          _this3.setState({\n            discount: disc,\n            subTotal,\n            total\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Total \",\n        value: total,\n        disabled: true,\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBLink, {\n        to: \"/invoice\",\n        data: \"msg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(MDBBtn, {\n        onClick: this.onEnter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 53\n        }\n      }, \" Enter Bill \"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 37\n        }\n      })))))));\n    }\n  }]);\n\n  return SalePage;\n}(Component);\n\nexport default SalePage;","map":{"version":3,"sources":["/home/hishsmtariq/ReactJsProjects/spare_part/src/spare_parts_components/pages/sale.jsx"],"names":["React","Component","lodash","MDBBtn","MDBCard","MDBCardBody","MDBCardHeader","MDBCol","MDBContainer","MDBIcon","MDBInput","MDBRow","MDBSelect","MDBTable","MDBTableBody","MDBTableHead","MDBLink","axios","getCurrentDate","Row","id","categoryComponent","productComponent","price","SalePage","notSelected","state","isMounted","CustomerName","rowCount","SelectedCategories","SelectedProducts","SelectedProductPrices","subTotal","discount","total","categories","products","componentDidMount","post","then","response","data","map","category","newCategory","text","Category_Name","value","product","Product_Name","Product_Retail_Price","newProduct","parseInt","hasOwnProperty","setState","onAdd","index","margin","selectedValue","onSelectedCategoryUpdate","computeSubtotal","options","val","onSelectedProductUpdate","reduce","newVal","onEnter","console","log","paddingTop","event","target","range","disc"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SACIC,MADJ,EAEIC,OAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,MALJ,EAMIC,YANJ,EAOIC,OAPJ,EAQIC,QARJ,EASIC,MATJ,EAUIC,SAVJ,EAWIC,QAXJ,EAYIC,YAZJ,EAaIC,YAbJ,EAcIC,OAdJ,QAeO,UAfP;AAgBA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,cAAP,MAA2B,2BAA3B;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAsD;AAAA,MAApDC,EAAoD,QAApDA,EAAoD;AAAA,MAAhDC,iBAAgD,QAAhDA,iBAAgD;AAAA,MAA7BC,gBAA6B,QAA7BA,gBAA6B;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAC9D,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,EAAL,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,iBAAiB,CAACD,EAAD,CAAtB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,gBAAgB,CAACF,EAAD,CAArB,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,KAAL,CAJJ,CADJ;AAQH,CATD;;IAYMC,Q;;;;;;;;;;;;;;;WACFC,W,GAAc,mB;WACdC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,QAAQ,EAAE,CAHN;AAIJC,MAAAA,kBAAkB,EAAE,CAAC,OAAKL,WAAN,CAJhB;AAKJM,MAAAA,gBAAgB,EAAE,CAAC,OAAKN,WAAN,CALd;AAMJO,MAAAA,qBAAqB,EAAE,CAAC,CAAD,CANnB;AAOJC,MAAAA,QAAQ,EAAE,CAPN;AAQJC,MAAAA,QAAQ,EAAE,CARN;AASJC,MAAAA,KAAK,EAAE,CATH;AAUJC,MAAAA,UAAU,EAAE,CACR;AACA;AACA;AACA;AAJQ,OAVR;AAgBJC,MAAAA,QAAQ,EAAE,CACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARM;AAhBN,K;WA4BRC,iB,yEAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BACa,OAAKZ,KADlB,EACXU,UADW,gBACXA,UADW,EACCC,QADD,gBACCA,QADD;AAAA;AAAA,qBAEVpB,KAAK,CACNsB,IADC,CACI,gDADJ,EAEDC,IAFC,CAEI,UAACC,QAAD,EAAc;AACZA,gBAAAA,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,UAACC,QAAD,EAAc;AAC5B,sBAAMC,WAAW,GAAG;AAACC,oBAAAA,IAAI,EAAEF,QAAQ,CAACG,aAAhB;AAA+BC,oBAAAA,KAAK,EAAEJ,QAAQ,CAACG;AAA/C,mBAApB;AACAX,kBAAAA,UAAU,gCAAOA,UAAP,IAAmBS,WAAnB,EAAV;AACH,iBAHD;AAIH,eAPH,CAFU;;AAAA;AAAA;AAAA,qBAWV5B,KAAK,CACNsB,IADC,CACI,8CADJ,EAEDC,IAFC,CAEI,UAACC,QAAD,EAAc;AACZA,gBAAAA,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,UAACM,OAAD,EAAa;AAAA,sBAEpBC,YAFoB,GAEiCD,OAFjC,CAEpBC,YAFoB;AAAA,sBAENH,aAFM,GAEiCE,OAFjC,CAENF,aAFM;AAAA,sBAESI,oBAFT,GAEiCF,OAFjC,CAESE,oBAFT;AAG3B,sBAAMC,UAAU,GAAG,EAAnB;AACAA,kBAAAA,UAAU,CAACF,YAAD,CAAV,GAA2B;AACvBJ,oBAAAA,IAAI,EAAEI,YADiB;AAEvBF,oBAAAA,KAAK,EAAEE,YAFgB;AAGvB3B,oBAAAA,KAAK,EAAE8B,QAAQ,CAACF,oBAAD;AAHQ,mBAA3B;AAKA,sBAAI,CAACd,QAAQ,CAACiB,cAAT,CAAwBL,OAAO,CAACF,aAAhC,CAAL,EACIV,QAAQ,CAACU,aAAD,CAAR,GAA0BK,UAA1B,CADJ,KAGIf,QAAQ,CAACU,aAAD,CAAR,CAAwBG,YAAxB,IAAwCE,UAAU,CAACF,YAAD,CAAlD;AACP,iBAbD;AAcH,eAjBH,CAXU;;AAAA;AA8BhB,qBAAKK,QAAL,CAAc;AAAClB,gBAAAA,QAAD;AAAWD,gBAAAA;AAAX,eAAd;;AACA,qBAAKmB,QAAL,CAAc;AAAC5B,gBAAAA,SAAS,EAAE;AAAZ,eAAd;;AA/BgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;WAkCpB6B,K,GAAQ,YAAM;AAAA,0BAKN,OAAK9B,KALC;AAAA,UACLG,QADK,iBACLA,QADK;AAAA,UAENE,gBAFM,iBAENA,gBAFM;AAAA,UAGND,kBAHM,iBAGNA,kBAHM;AAAA,UAINE,qBAJM,iBAINA,qBAJM;AAMVA,MAAAA,qBAAqB,CAACH,QAAD,CAArB,GAAkC,CAAlC;AACAE,MAAAA,gBAAgB,CAACF,QAAD,CAAhB,GAA6B,OAAKJ,WAAlC;AACAK,MAAAA,kBAAkB,CAACD,QAAD,CAAlB,GAA+B,OAAKJ,WAApC;AACAI,MAAAA,QAAQ,IAAI,CAAZ;;AACA,aAAK0B,QAAL,CAAc;AAACzB,QAAAA,kBAAD;AAAqBC,QAAAA,gBAArB;AAAuCC,QAAAA,qBAAvC;AAA8DH,QAAAA;AAA9D,OAAd;AACH,K;;WAEDR,iB,GAAoB,UAACD,EAAD,EAAQ;AACxB,UAAMqC,KAAK,GAAGrC,EAAE,GAAG,CAAnB;AACA,0BACI,oBAAC,SAAD;AACI,QAAA,MAAM,MADV;AAEI,QAAA,KAAK,EAAE;AAACsC,UAAAA,MAAM,EAAE;AAAT,SAFX;AAGI,QAAA,QAAQ,EAAE,kBAAAC,aAAa;AAAA,iBAAI,OAAKC,wBAAL,CAA8BxC,EAA9B,EAAkCuC,aAAa,CAAC,CAAD,CAA/C,CAAJ;AAAA,SAH3B;AAII,QAAA,OAAO,EAAE,OAAKjC,KAAL,CAAWU,UAJxB;AAKI,QAAA,QAAQ,EAAE,OAAKV,KAAL,CAAWI,kBAAX,CAA8B2B,KAA9B,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AASH,K;;WAEDG,wB,GAA2B,UAACxC,EAAD,EAAKuC,aAAL,EAAuB;AAAA,0BAK1C,OAAKjC,KALqC;AAAA,UAE1CC,SAF0C,iBAE1CA,SAF0C;AAAA,UAG1CG,kBAH0C,iBAG1CA,kBAH0C;AAAA,UAI1CI,QAJ0C,iBAI1CA,QAJ0C;;AAQ9C,UAAIP,SAAS,IACN,OAAOgC,aAAP,IAAwB,WAD3B,IAEGA,aAAa,KAAK7B,kBAAkB,CAACV,EAAE,GAAG,CAAN,CAF3C,EAGE;AACE,YAAMqC,KAAK,GAAGrC,EAAE,GAAG,CAAnB;AACAU,QAAAA,kBAAkB,CAAC2B,KAAD,CAAlB,GAA4BE,aAA5B;;AACA,YAAM1B,QAAQ,GAAG,OAAK4B,eAAL,EAAjB;;AACA,YAAM1B,KAAK,GAAGF,QAAQ,GAAGC,QAAzB;;AACA,eAAKqB,QAAL,CAAc;AAACzB,UAAAA,kBAAD;AAAqBG,UAAAA,QAArB;AAA+BE,UAAAA;AAA/B,SAAd;AACH;AACJ,K;;WAEDb,gB,GAAmB,UAACF,EAAD,EAAQ;AAAA,0BACkC,OAAKM,KADvC;AAAA,UAChBW,QADgB,iBAChBA,QADgB;AAAA,UACNP,kBADM,iBACNA,kBADM;AAAA,UACcC,gBADd,iBACcA,gBADd;AAEvB,UAAM0B,KAAK,GAAGrC,EAAE,GAAG,CAAnB;AACA,UAAI0C,OAAJ;AACA,UAAIzB,QAAQ,CAACP,kBAAkB,CAAC2B,KAAD,CAAnB,CAAZ,EACIK,OAAO,GAAG5D,MAAM,CAACyC,GAAP,CAAWN,QAAQ,CAACP,kBAAkB,CAAC2B,KAAD,CAAnB,CAAnB,EAAgD,UAAUM,GAAV,EAAe;AACrE,eAAOA,GAAP;AACH,OAFS,CAAV,CADJ,KAIKD,OAAO,GAAG,EAAV,CARkB,CAUvB;;AACA,0BACI,oBAAC,SAAD;AACI,QAAA,MAAM,MADV;AAEI,QAAA,KAAK,EAAE;AAACJ,UAAAA,MAAM,EAAE;AAAT,SAFX;AAGI,QAAA,QAAQ,EAAE,kBAAAC,aAAa;AAAA,iBAAI,OAAKK,uBAAL,CAA6B5C,EAA7B,EAAiCuC,aAAa,CAAC,CAAD,CAA9C,CAAJ;AAAA,SAH3B;AAII,QAAA,OAAO,EAAEG,OAJb;AAKI,QAAA,QAAQ,EAAE/B,gBAAgB,CAAC0B,KAAD,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AASH,K;;WAEDO,uB,GAA0B,UAAC5C,EAAD,EAAKuC,aAAL,EAAuB;AAAA,0BAQzC,OAAKjC,KARoC;AAAA,UAEzCI,kBAFyC,iBAEzCA,kBAFyC;AAAA,UAGzCC,gBAHyC,iBAGzCA,gBAHyC;AAAA,UAIzCM,QAJyC,iBAIzCA,QAJyC;AAAA,UAKzCL,qBALyC,iBAKzCA,qBALyC;AAAA,UAMzCL,SANyC,iBAMzCA,SANyC;AAAA,UAOzCO,QAPyC,iBAOzCA,QAPyC;AAS7C,UAAMuB,KAAK,GAAGrC,EAAE,GAAG,CAAnB;AACA,UAAMwB,QAAQ,GAAGd,kBAAkB,CAAC2B,KAAD,CAAnC;;AAEA,UAAI9B,SAAS,IACNgC,aAAa,KAAK,OAAKlC,WAD1B,IAEG,OAAOkC,aAAP,IAAwB,WAF3B,IAGGA,aAAa,KAAK5B,gBAAgB,CAACX,EAAE,GAAG,CAAN,CAHrC,IAIG,OAAOwB,QAAP,IAAmB,WAJ1B,EAKE;AACEZ,QAAAA,qBAAqB,CAACyB,KAAD,CAArB,GAA+BpB,QAAQ,CAACO,QAAD,CAAR,CAAmBe,aAAnB,EAAkCpC,KAAjE;AACAQ,QAAAA,gBAAgB,CAAC0B,KAAD,CAAhB,GAA0BE,aAA1B;;AACA,YAAM1B,QAAQ,GAAG,OAAK4B,eAAL,EAAjB;;AACA,YAAM1B,KAAK,GAAGF,QAAQ,GAAGC,QAAzB;;AACA,eAAKqB,QAAL,CAAc;AAACxB,UAAAA,gBAAD;AAAmBC,UAAAA,qBAAnB;AAA0CC,UAAAA,QAA1C;AAAoDE,UAAAA;AAApD,SAAd;AACH;AACJ,K;;WAED0B,e,GAAkB,YAAM;AACpB,aAAO,OAAKnC,KAAL,CAAWM,qBAAX,CAAiCiC,MAAjC,CAAwC,UAACjB,KAAD,EAAQkB,MAAR,EAAmB;AAC9D,eAAOlB,KAAK,GAAGkB,MAAf;AACH,OAFM,CAAP;AAGH,K;;WAEDC,O,GAAU,YAAK;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,K;;;;;;;6BAEQ;AAAA;;AAAA,wBACgE,KAAK3C,KADrE;AAAA,UACEG,QADF,eACEA,QADF;AAAA,UACYG,qBADZ,eACYA,qBADZ;AAAA,UACmCC,QADnC,eACmCA,QADnC;AAAA,UAC6CE,KAD7C,eAC6CA,KAD7C;AAAA,UACoDD,QADpD,eACoDA,QADpD;AAEL,0BACI,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAACoC,UAAAA,UAAU,EAAE;AAAb,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,+BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,EAAE,EAAC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,aAAD;AAAe,QAAA,SAAS,EAAC,mCAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,UADJ,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,GAAX;AAAe,QAAA,SAAS,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AACI,QAAA,KAAK,EAAC,eADV;AAEI,QAAA,KAAK,MAFT;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,QAAQ,MAJZ;AAKI,QAAA,QAAQ,EAAE,kBAACC,KAAD;AAAA,iBACN,MAAI,CAAChB,QAAL,CAAc;AAAC3B,YAAAA,YAAY,EAAE2C,KAAK,CAACC,MAAN,CAAaxB;AAA5B,WAAd,CADM;AAAA,SALd;AAQI,QAAA,IAAI,EAAC,aART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,eAaI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,GAAX;AAAe,QAAA,SAAS,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,eAcI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,GAAX;AAAe,QAAA,SAAS,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AACI,QAAA,KAAK,EAAC,MADV;AAEI,QAAA,QAAQ,EAAE,IAFd;AAGI,QAAA,KAAK,MAHT;AAII,QAAA,IAAI,EAAC,MAJT;AAKI,QAAA,KAAK,EAAE9B,cAAc,EALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAdJ,eAuBI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAoB,QAAA,OAAO,EAAE,KAAKsC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CAvBJ,CAFJ,eA+BI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,CADJ,CADJ,eASI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKtD,MAAM,CAACuE,KAAP,CAAa,CAAb,EAAgB5C,QAAQ,GAAG,CAA3B,EAA8Bc,GAA9B,CAAkC,UAACvB,EAAD,EAAQ;AACvC,4BACI,oBAAC,GAAD;AAAK,UAAA,GAAG,EAAEA,EAAV;AACK,UAAA,EAAE,EAAEA,EADT;AAEK,UAAA,iBAAiB,EAAE,MAAI,CAACC,iBAF7B;AAGK,UAAA,gBAAgB,EAAE,MAAI,CAACC,gBAH5B;AAIK,UAAA,KAAK,EAAEU,qBAAqB,CAACZ,EAAE,GAAG,CAAN,CAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,OATA,CADL,CATJ,CADJ,CADJ,CA/BJ,eA0DI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAEa,QAAnC;AAA6C,QAAA,QAAQ,MAArD;AAAsD,QAAA,IAAI,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CA1DJ,eA+DI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAEC,QAAnC;AAA6C,QAAA,IAAI,EAAC,QAAlD;AAA4D,QAAA,QAAQ,EAAE,kBAAA6B,GAAG,EAAI;AACzE,cAAIW,IAAI,GAAG,CAAX;;AACA,cAAIX,GAAG,CAACS,MAAJ,CAAWxB,KAAX,KAAqB,EAAzB,EAA6B;AACzB0B,YAAAA,IAAI,GAAGrB,QAAQ,CAACU,GAAG,CAACS,MAAJ,CAAWxB,KAAZ,CAAf;AACH;;AACD,cAAMf,QAAQ,GAAG,MAAI,CAAC4B,eAAL,EAAjB;;AACA,cAAM1B,KAAK,GAAGF,QAAQ,GAAGyC,IAAzB;;AACA,UAAA,MAAI,CAACnB,QAAL,CAAc;AAACrB,YAAAA,QAAQ,EAAEwC,IAAX;AAAiBzC,YAAAA,QAAjB;AAA2BE,YAAAA;AAA3B,WAAd;AACH,SARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CA/DJ,eA4EI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,QAAhB;AAAyB,QAAA,KAAK,EAAEA,KAAhC;AAAuC,QAAA,QAAQ,MAA/C;AAAgD,QAAA,IAAI,EAAC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CA5EJ,eAiFI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAE,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKgC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CADJ,CADJ,CAjFJ,CADJ,eA0FI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1FJ,CANJ,CADJ,CADJ,CADJ,CADJ,CADJ;AA6GH;;;;EAvRkBlE,S;;AA0RvB,eAAeuB,QAAf","sourcesContent":["import React, {Component} from \"react\";\nimport lodash from \"lodash\"\nimport {\n    MDBBtn,\n    MDBCard,\n    MDBCardBody,\n    MDBCardHeader,\n    MDBCol,\n    MDBContainer,\n    MDBIcon,\n    MDBInput,\n    MDBRow,\n    MDBSelect,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n    MDBLink\n} from \"mdbreact\";\nimport axios from \"axios\";\n\nimport getCurrentDate from \"../utils/get_current_date\"\n\nconst Row = ({id, categoryComponent, productComponent, price}) => {\n    return (\n        <tr>\n            <td>{id}</td>\n            <td>{categoryComponent(id)}</td>\n            <td>{productComponent(id)}</td>\n            <td>{price}</td>\n        </tr>\n    );\n}\n\n\nclass SalePage extends Component {\n    notSelected = \"Chose your option\";\n    state = {\n        isMounted: false,\n        CustomerName: \"\",\n        rowCount: 1,\n        SelectedCategories: [this.notSelected],\n        SelectedProducts: [this.notSelected],\n        SelectedProductPrices: [0],\n        subTotal: 0,\n        discount: 0,\n        total: 0,\n        categories: [\n            // {\n            //     text: \"Category Name\",\n            //     value: \"Category Value\"\n            // },\n        ],\n        products: {\n            // Data Format\n            // Category_Name: {\n            //     Product_Name: {\n            //         text: \"Product Name\",\n            //         value: \"Product Value\"\n            //         price: \"Product Price\"\n            //     },\n            // },\n        },\n    };\n\n    componentDidMount = async () => {\n        let {categories, products} = this.state;\n        await axios\n            .post(\"http://localhost/spare_parts/show_category.php\")\n            .then((response) => {\n                    response.data.map((category) => {\n                        const newCategory = {text: category.Category_Name, value: category.Category_Name};\n                        categories = [...categories, newCategory];\n                    });\n                }\n            );\n        await axios\n            .post(\"http://localhost/spare_parts/allproducts.php\")\n            .then((response) => {\n                    response.data.map((product) => {\n\n                        const {Product_Name, Category_Name, Product_Retail_Price} = product;\n                        const newProduct = {}\n                        newProduct[Product_Name] = {\n                            text: Product_Name,\n                            value: Product_Name,\n                            price: parseInt(Product_Retail_Price)\n                        };\n                        if (!products.hasOwnProperty(product.Category_Name))\n                            products[Category_Name] = newProduct;\n                        else\n                            products[Category_Name][Product_Name] = newProduct[Product_Name];\n                    });\n                }\n            );\n        this.setState({products, categories})\n        this.setState({isMounted: true})\n    };\n\n    onAdd = () => {\n        let {rowCount,\n            SelectedProducts,\n            SelectedCategories,\n            SelectedProductPrices\n        } = this.state;\n        SelectedProductPrices[rowCount] = 0;\n        SelectedProducts[rowCount] = this.notSelected;\n        SelectedCategories[rowCount] = this.notSelected;\n        rowCount += 1;\n        this.setState({SelectedCategories, SelectedProducts, SelectedProductPrices, rowCount});\n    };\n\n    categoryComponent = (id) => {\n        const index = id - 1;\n        return (\n            <MDBSelect\n                search\n                style={{margin: 0}}\n                getValue={selectedValue => this.onSelectedCategoryUpdate(id, selectedValue[0])}\n                options={this.state.categories}\n                selected={this.state.SelectedCategories[index]}\n            />\n        );\n    };\n\n    onSelectedCategoryUpdate = (id, selectedValue) => {\n        let {\n            isMounted,\n            SelectedCategories,\n            discount\n        } = this.state;\n\n\n        if (isMounted\n            && typeof selectedValue != \"undefined\"\n            && selectedValue !== SelectedCategories[id - 1]\n        ) {\n            const index = id - 1;\n            SelectedCategories[index] = selectedValue;\n            const subTotal = this.computeSubtotal();\n            const total = subTotal - discount;\n            this.setState({SelectedCategories, subTotal, total});\n        }\n    };\n\n    productComponent = (id) => {\n        const {products, SelectedCategories, SelectedProducts} = this.state;\n        const index = id - 1;\n        let options;\n        if (products[SelectedCategories[index]])\n            options = lodash.map(products[SelectedCategories[index]], function (val) {\n                return val;\n            })\n        else options = []\n\n        // products[SelectedCategories[index]].map((val) => console.log(val))\n        return (\n            <MDBSelect\n                search\n                style={{margin: 0}}\n                getValue={selectedValue => this.onSelectedProductUpdate(id, selectedValue[0])}\n                options={options}\n                selected={SelectedProducts[index]}\n            />\n        );\n    };\n\n    onSelectedProductUpdate = (id, selectedValue) => {\n        let {\n            SelectedCategories,\n            SelectedProducts,\n            products,\n            SelectedProductPrices,\n            isMounted,\n            discount\n        } = this.state;\n        const index = id - 1;\n        const category = SelectedCategories[index];\n\n        if (isMounted\n            && selectedValue !== this.notSelected\n            && typeof selectedValue != \"undefined\"\n            && selectedValue !== SelectedProducts[id - 1]\n            && typeof category != 'undefined'\n        ) {\n            SelectedProductPrices[index] = products[category][selectedValue].price\n            SelectedProducts[index] = selectedValue;\n            const subTotal = this.computeSubtotal()\n            const total = subTotal - discount;\n            this.setState({SelectedProducts, SelectedProductPrices, subTotal, total});\n        }\n    };\n\n    computeSubtotal = () => {\n        return this.state.SelectedProductPrices.reduce((value, newVal) => {\n            return value + newVal;\n        });\n    }\n\n    onEnter = () =>{\n        console.log(\"Enter\")\n    }\n\n    render() {\n        const {rowCount, SelectedProductPrices, subTotal, total, discount} = this.state;\n        return (\n            <MDBContainer style={{paddingTop: 50}}>\n                <MDBRow className=\"d-flex justify-content-center\">\n                    <MDBCol size=\"12\" xl=\"12\">\n                        <MDBCard>\n                            <MDBCardBody>\n                                <MDBCardHeader className=\"form-header blue-gradient rounded\">\n                                    <h3 className=\"my-3\">\n                                        <MDBIcon icon=\"dollar-sign\"/> Sale\n                                    </h3>\n                                </MDBCardHeader>\n                                <form>\n                                    <div className=\"grey-text\">\n                                        {/*---------- Row 1 ----------*/}\n                                        <MDBRow>\n                                            <MDBCol sm=\"4\" className=\"mb-3\">\n                                                <MDBInput\n                                                    label=\"Customer Name\"\n                                                    group\n                                                    type=\"text\"\n                                                    validate\n                                                    onChange={(event) =>\n                                                        this.setState({CustomerName: event.target.value})\n                                                    }\n                                                    name=\"productName\"\n                                                />\n                                            </MDBCol>\n                                            <MDBCol sm=\"1\" className=\"mb-3\"/>\n                                            <MDBCol sm=\"4\" className=\"mb-3\">\n                                                <MDBInput\n                                                    label=\"Date\"\n                                                    disabled={true}\n                                                    group\n                                                    type=\"text\"\n                                                    value={getCurrentDate()}\n                                                />\n                                            </MDBCol>\n                                            <MDBCol sm=\"3\">\n                                                <MDBBtn color=\"red\" onClick={this.onAdd}>\n                                                    Add\n                                                </MDBBtn>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol>\n                                                <MDBTable>\n                                                    <MDBTableHead>\n                                                        <tr>\n                                                            <th>#</th>\n                                                            <th>Category</th>\n                                                            <th>Product</th>\n                                                            <th>Price</th>\n                                                        </tr>\n                                                    </MDBTableHead>\n                                                    <MDBTableBody>\n                                                        {lodash.range(1, rowCount + 1).map((id) => {\n                                                            return (\n                                                                <Row key={id}\n                                                                     id={id}\n                                                                     categoryComponent={this.categoryComponent}\n                                                                     productComponent={this.productComponent}\n                                                                     price={SelectedProductPrices[id - 1]}\n                                                                />\n                                                            )\n                                                        })\n                                                        }\n                                                    </MDBTableBody>\n                                                </MDBTable>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol sm=\"3\">\n                                                <MDBInput label=\"Subtotal \" value={subTotal} disabled type=\"number\" />\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol sm=\"3\">\n                                                <MDBInput label=\"Discount \" value={discount} type=\"number\"  onChange={val => {\n                                                    let disc = 0\n                                                    if (val.target.value !== '') {\n                                                        disc = parseInt(val.target.value);\n                                                    }\n                                                    const subTotal = this.computeSubtotal();\n                                                    const total = subTotal - disc;\n                                                    this.setState({discount: disc, subTotal, total})\n                                                }}/>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol sm=\"3\">\n                                                <MDBInput label=\"Total \" value={total} disabled type=\"number\" />\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol sm=\"3\">\n                                                <MDBLink to=\"/invoice\" data={\"msg\"}>\n                                                    <MDBBtn onClick={this.onEnter}> Enter Bill </MDBBtn>\n                                                </MDBLink>\n                                            </MDBCol>\n                                        </MDBRow>\n                                    </div>\n                                    <div className=\"text-center mt-4\"/>\n                                </form>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        );\n    }\n}\n\nexport default SalePage;\n\n"]},"metadata":{},"sourceType":"module"}