{"ast":null,"code":"import _regeneratorRuntime from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/hishsmtariq/ReactJsProjects/spare_part/src/spare_parts_components/all_product.jsx\";\nimport React, { Component } from \"react\";\nimport { MDBDataTable } from 'mdbreact';\nimport \"./all_product.css\";\nimport axios from \"axios\";\n\nvar AllProducts = /*#__PURE__*/function (_Component) {\n  _inherits(AllProducts, _Component);\n\n  var _super = _createSuper(AllProducts);\n\n  function AllProducts() {\n    var _this;\n\n    _classCallCheck(this, AllProducts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.componentDidMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data, rows;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = _this.state.data;\n              rows = data.rows;\n              _context.next = 4;\n              return axios.post(\"http://localhost/spare_parts/allproducts.php\").then(function (response) {\n                response.data.map(function (product, index) {\n                  product[\"qty\"] = _this.quantityComponent(index);\n                  rows = [].concat(_toConsumableArray(rows), [product]);\n                });\n              });\n\n            case 4:\n              data.rows = rows;\n              console.log(data);\n\n              _this.setState({\n                data\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.quantityComponent = function (index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"md-form\",\n        style: {\n          margin: 0\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        id: index + 1,\n        onChange: function onChange(event) {\n          return _this.onQuantityChange(index, event.target.value);\n        },\n        min: 0,\n        className: \"form-control\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    _this.onQuantityChange = function (index, value) {\n      if (value !== \"\") {\n        var data = _this.state.data;\n        data.rows[index].Product_Quantity = parseInt(value);\n\n        _this.setState({\n          data\n        });\n      }\n    };\n\n    _this.state = {\n      data: {\n        columns: [{\n          label: 'Name',\n          field: 'Product_Name',\n          sort: 'asc',\n          width: 150\n        }, {\n          label: 'C.Name',\n          field: 'Category_Name',\n          sort: 'asc',\n          width: 270\n        }, {\n          label: 'P.Brand',\n          field: 'Product_Brand',\n          sort: 'asc',\n          width: 200\n        }, {\n          label: 'P.Code',\n          field: 'Product_Code',\n          sort: 'asc',\n          width: 100\n        }, {\n          label: 'R.Price',\n          field: 'Product_Retail_Price',\n          sort: 'asc',\n          width: 150\n        }],\n        rows: [{}]\n      }\n    };\n    return _this;\n  }\n\n  _createClass(AllProducts, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MDBDataTable // className=\"form-header blue-gradient rounded\"\n      , {\n        theadColor: \"blue-gradient\",\n        striped: true,\n        barReverse: true,\n        theadTextWhite: true,\n        hover: true,\n        noBottomColumns: true,\n        data: this.state.data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          return console.log(_this2.state.data);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, \"press\"));\n    }\n  }]);\n\n  return AllProducts;\n}(Component);\n\nexport default AllProducts; // const {\n//     id,\n//     Product_Name,\n//     Category_Name,\n//     Product_Brand,\n//     Product_Model,\n//     Product_Code,\n//     Product_Quantity,\n//     Product_Size,\n//     Product_Color,\n//     Product_PurchasePrice,\n//     Product_Retail_Price,\n//     Product_Status,\n//     Product_Discounted_Price,\n//     Product_Purchase_Date,\n// } = product;\n// const newProduct = {}\n// newProduct[Product_Name] = {\n//     id,\n//     Product_Name,\n//     Category_Name,\n//     Product_Brand,\n//     Product_Model,\n//     Product_Code,\n//     qty: this.quantityComponent(index),\n//     Product_Quantity,\n//     Product_Size,\n//     Product_Color,\n//     Product_PurchasePrice,\n//     Product_Retail_Price,\n//     Product_Status,\n//     Product_Discounted_Price,\n//     Product_Purchase_Date,\n// };\n// {\n//     name: 'Tiger Nixon',\n//         position: 'System Architect',\n//     office: 'Edinburgh',\n//     age: '61',\n//     date: '2011/04/25',\n//     qty: 10,\n//     salary: '$320'\n// },\n// {\n//     name: 'Garrett Winters',\n//         position: 'Accountant',\n//     office: 'Tokyo',\n//     age: '63',\n//     date: this.quantityComponent(1),\n//     qty: 10,\n//     salary: '$170'\n// },\n// {\n//     name: 'Ashton Cox',\n//         position: 'Junior Technical Author',\n//     office: 'San Francisco',\n//     age: '66',\n//     date: '2009/01/12',\n//     qty: 10,\n//     salary: '$86'\n// },\n// {\n//     name: 'Cedric Kelly',\n//         position: 'Senior Javascript Developer',\n//     office: 'Edinburgh',\n//     age: '22',\n//     date: '2012/03/29',\n//     qty: 10,\n//     salary: '$433'\n// },\n// {\n//     name: 'Airi Satou',\n//         position: 'Accountant',\n//     office: 'Tokyo',\n//     age: '33',\n//     date: '2008/11/28',\n//     qty: 10,\n//     salary: '$162'\n// },","map":{"version":3,"sources":["/home/hishsmtariq/ReactJsProjects/spare_part/src/spare_parts_components/all_product.jsx"],"names":["React","Component","MDBDataTable","axios","AllProducts","componentDidMount","data","state","rows","post","then","response","map","product","index","quantityComponent","console","log","setState","margin","event","onQuantityChange","target","value","Product_Quantity","parseInt","columns","label","field","sort","width"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,YAAR,QAA2B,UAA3B;AACA,OAAO,mBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,W;;;;;;;;;;;;;;;UAEFC,iB,yEAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,cAAAA,IADW,GACH,MAAKC,KADF,CACXD,IADW;AAEZE,cAAAA,IAFY,GAELF,IAAI,CAACE,IAFA;AAAA;AAAA,qBAGVL,KAAK,CACNM,IADC,CACI,8CADJ,EAEDC,IAFC,CAEI,UAACC,QAAD,EAAc;AACZA,gBAAAA,QAAQ,CAACL,IAAT,CAAcM,GAAd,CAAkB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAClCD,kBAAAA,OAAO,CAAC,KAAD,CAAP,GAAiB,MAAKE,iBAAL,CAAuBD,KAAvB,CAAjB;AACAN,kBAAAA,IAAI,gCAAOA,IAAP,IAAaK,OAAb,EAAJ;AACH,iBAHD;AAIH,eAPH,CAHU;;AAAA;AAYhBP,cAAAA,IAAI,CAACE,IAAL,GAAYA,IAAZ;AACAQ,cAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;;AACA,oBAAKY,QAAL,CAAc;AAACZ,gBAAAA;AAAD,eAAd;;AAdgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAiBpBS,iB,GAAoB,UAACD,KAAD,EAAU;AAC1B,0BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,KAAK,EAAE;AAACK,UAAAA,MAAM,EAAE;AAAT,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,EAAE,EAAEL,KAAK,GAAG,CAFhB;AAGI,QAAA,QAAQ,EAAE,kBAAAM,KAAK;AAAA,iBAAI,MAAKC,gBAAL,CAAsBP,KAAtB,EAA6BM,KAAK,CAACE,MAAN,CAAaC,KAA1C,CAAJ;AAAA,SAHnB;AAII,QAAA,GAAG,EAAE,CAJT;AAKI,QAAA,SAAS,EAAC,cALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAWH,K;;UAEDF,gB,GAAmB,UAACP,KAAD,EAAQS,KAAR,EAAkB;AACjC,UAAIA,KAAK,KAAK,EAAd,EAAiB;AAAA,YACPjB,IADO,GACE,MAAKC,KADP,CACPD,IADO;AAEbA,QAAAA,IAAI,CAACE,IAAL,CAAUM,KAAV,EAAiBU,gBAAjB,GAAoCC,QAAQ,CAACF,KAAD,CAA5C;;AACA,cAAKL,QAAL,CAAc;AAACZ,UAAAA;AAAD,SAAd;AAGH;AAEJ,K;;UAEDC,K,GAAQ;AACJD,MAAAA,IAAI,EAAE;AACFoB,QAAAA,OAAO,EAAE,CACL;AACIC,UAAAA,KAAK,EAAE,MADX;AAEIC,UAAAA,KAAK,EAAE,cAFX;AAGIC,UAAAA,IAAI,EAAE,KAHV;AAIIC,UAAAA,KAAK,EAAE;AAJX,SADK,EAOL;AACIH,UAAAA,KAAK,EAAE,QADX;AAEIC,UAAAA,KAAK,EAAE,eAFX;AAGIC,UAAAA,IAAI,EAAE,KAHV;AAIIC,UAAAA,KAAK,EAAE;AAJX,SAPK,EAaL;AACIH,UAAAA,KAAK,EAAE,SADX;AAEIC,UAAAA,KAAK,EAAE,eAFX;AAGIC,UAAAA,IAAI,EAAE,KAHV;AAIIC,UAAAA,KAAK,EAAE;AAJX,SAbK,EAmBL;AACIH,UAAAA,KAAK,EAAE,QADX;AAEIC,UAAAA,KAAK,EAAE,cAFX;AAGIC,UAAAA,IAAI,EAAE,KAHV;AAIIC,UAAAA,KAAK,EAAE;AAJX,SAnBK,EAyBL;AACIH,UAAAA,KAAK,EAAE,SADX;AAEIC,UAAAA,KAAK,EAAE,sBAFX;AAGIC,UAAAA,IAAI,EAAE,KAHV;AAIIC,UAAAA,KAAK,EAAE;AAJX,SAzBK,CADP;AAiCFtB,QAAAA,IAAI,EAAE,CACF,EADE;AAjCJ;AADF,K;;;;;;6BAwCC;AAAA;;AACL,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,YAAD,CACI;AADJ;AAEI,QAAA,UAAU,EAAE,eAFhB;AAGI,QAAA,OAAO,MAHX;AAII,QAAA,UAAU,EAAE,IAJhB;AAKI,QAAA,cAAc,EAAE,IALpB;AAMI,QAAA,KAAK,MANT;AAOI,QAAA,eAAe,EAAE,IAPrB;AAQI,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWD,IARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAWI;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMU,OAAO,CAACC,GAAR,CAAY,MAAI,CAACV,KAAL,CAAWD,IAAvB,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXJ,CADJ;AAiBH;;;;EAtGqBL,S;;AAyG1B,eAAeG,WAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {Component} from \"react\";\nimport {MDBDataTable} from 'mdbreact';\nimport \"./all_product.css\"\nimport axios from \"axios\";\n\nclass AllProducts extends Component {\n\n    componentDidMount = async () => {\n        let {data} = this.state;\n        let rows = data.rows\n        await axios\n            .post(\"http://localhost/spare_parts/allproducts.php\")\n            .then((response) => {\n                    response.data.map((product, index) => {\n                        product[\"qty\"] = this.quantityComponent(index);\n                        rows = [...rows, product];\n                    });\n                }\n            );\n        data.rows = rows;\n        console.log(data);\n        this.setState({data});\n    };\n\n    quantityComponent = (index) =>{\n        return (\n            <div className=\"md-form\" style={{margin: 0}}>\n                <input\n                    type=\"number\"\n                    id={index + 1}\n                    onChange={event => this.onQuantityChange(index, event.target.value)}\n                    min={0}\n                    className=\"form-control\"\n                />\n            </div>\n        );\n    }\n\n    onQuantityChange = (index, value) => {\n        if (value !== \"\"){\n            let { data } = this.state;\n            data.rows[index].Product_Quantity = parseInt(value);\n            this.setState({data})\n\n\n        }\n\n    }\n\n    state = {\n        data: {\n            columns: [\n                {\n                    label: 'Name',\n                    field: 'Product_Name',\n                    sort: 'asc',\n                    width: 150\n                },\n                {\n                    label: 'C.Name',\n                    field: 'Category_Name',\n                    sort: 'asc',\n                    width: 270\n                },\n                {\n                    label: 'P.Brand',\n                    field: 'Product_Brand',\n                    sort: 'asc',\n                    width: 200\n                },\n                {\n                    label: 'P.Code',\n                    field: 'Product_Code',\n                    sort: 'asc',\n                    width: 100\n                },\n                {\n                    label: 'R.Price',\n                    field: 'Product_Retail_Price',\n                    sort: 'asc',\n                    width: 150\n                },\n            ],\n            rows: [\n                {}\n            ]\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <MDBDataTable\n                    // className=\"form-header blue-gradient rounded\"\n                    theadColor={\"blue-gradient\"}\n                    striped\n                    barReverse={true}\n                    theadTextWhite={true}\n                    hover\n                    noBottomColumns={true}\n                    data={this.state.data}\n                />\n                <button onClick={() => console.log(this.state.data)}>\n                    press\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default AllProducts;\n\n\n\n// const {\n//     id,\n//     Product_Name,\n//     Category_Name,\n//     Product_Brand,\n//     Product_Model,\n//     Product_Code,\n//     Product_Quantity,\n//     Product_Size,\n//     Product_Color,\n//     Product_PurchasePrice,\n//     Product_Retail_Price,\n//     Product_Status,\n//     Product_Discounted_Price,\n//     Product_Purchase_Date,\n// } = product;\n// const newProduct = {}\n// newProduct[Product_Name] = {\n//     id,\n//     Product_Name,\n//     Category_Name,\n//     Product_Brand,\n//     Product_Model,\n//     Product_Code,\n//     qty: this.quantityComponent(index),\n//     Product_Quantity,\n//     Product_Size,\n//     Product_Color,\n//     Product_PurchasePrice,\n//     Product_Retail_Price,\n//     Product_Status,\n//     Product_Discounted_Price,\n//     Product_Purchase_Date,\n// };\n\n// {\n//     name: 'Tiger Nixon',\n//         position: 'System Architect',\n//     office: 'Edinburgh',\n//     age: '61',\n//     date: '2011/04/25',\n//     qty: 10,\n//     salary: '$320'\n// },\n// {\n//     name: 'Garrett Winters',\n//         position: 'Accountant',\n//     office: 'Tokyo',\n//     age: '63',\n//     date: this.quantityComponent(1),\n//     qty: 10,\n//     salary: '$170'\n// },\n// {\n//     name: 'Ashton Cox',\n//         position: 'Junior Technical Author',\n//     office: 'San Francisco',\n//     age: '66',\n//     date: '2009/01/12',\n//     qty: 10,\n//     salary: '$86'\n// },\n// {\n//     name: 'Cedric Kelly',\n//         position: 'Senior Javascript Developer',\n//     office: 'Edinburgh',\n//     age: '22',\n//     date: '2012/03/29',\n//     qty: 10,\n//     salary: '$433'\n// },\n// {\n//     name: 'Airi Satou',\n//         position: 'Accountant',\n//     office: 'Tokyo',\n//     age: '33',\n//     date: '2008/11/28',\n//     qty: 10,\n//     salary: '$162'\n// },"]},"metadata":{},"sourceType":"module"}