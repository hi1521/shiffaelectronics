{"ast":null,"code":"import _toConsumableArray from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hishsmtariq/ReactJsProjects/spare_part/src/spare_parts_components/pages/sale.jsx\";\n\nimport React, { Component } from \"react\";\nimport lodash from \"lodash\";\nimport SelectSearch from 'react-select-search';\nimport \"./sale.css\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardHeader, MDBCol, MDBContainer, MDBIcon, MDBInput, MDBRow, MDBSelect, MDBTable, MDBTableBody, MDBTableHead, MDBLink, MDBDatePicker, MDBTimePicker } from \"mdbreact\";\nimport axios from \"axios\";\nimport getCurrentDate from \"../utils/get_current_date\";\n\nvar Row = function Row(_ref) {\n  var id = _ref.id,\n      categoryComponent = _ref.categoryComponent,\n      productComponent = _ref.productComponent,\n      quantity = _ref.quantity,\n      price = _ref.price;\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, categoryComponent(id)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, productComponent(id)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, quantity(id)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, price));\n};\n\nvar SalePage = /*#__PURE__*/function (_Component) {\n  _inherits(SalePage, _Component);\n\n  var _super = _createSuper(SalePage);\n\n  function SalePage() {\n    var _this2;\n\n    _classCallCheck(this, SalePage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.notSelected = \"Chose your option\";\n    _this2.onEnter = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _this2$state, SelectedIds, SelectedPrices, SelectedQty, SelectedProducts, rowCount, subTotal, discount, total, customerName, date, time, customerAddress, customerPhone, items, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"I am in the onEnter function\");\n              _this2$state = _this2.state, SelectedIds = _this2$state.SelectedIds, SelectedPrices = _this2$state.SelectedPrices, SelectedQty = _this2$state.SelectedQty, SelectedProducts = _this2$state.SelectedProducts, rowCount = _this2$state.rowCount, subTotal = _this2$state.subTotal, discount = _this2$state.discount, total = _this2$state.total, customerName = _this2$state.customerName, date = _this2$state.date, time = _this2$state.time, customerAddress = _this2$state.customerAddress, customerPhone = _this2$state.customerPhone; //    Data Format\n              // {\n              //  sno: index\n              //  dec: Product Name,\n              //  qty: 1 (Quantity)\n              //  rate: Price\n              // }\n\n              items = lodash.range(rowCount).map(function (index) {\n                var qty = SelectedQty[index];\n                return {\n                  sno: index,\n                  // Row No.\n                  desc: SelectedProducts[index],\n                  // Product Name\n                  qty: qty,\n                  // Product Quantity\n                  rate: SelectedPrices[index] / qty,\n                  // Product 1 Qty Price\n                  Product_id: SelectedIds[index] // Product ID\n\n                };\n              });\n              data = {\n                subTotal: subTotal,\n                discount: discount,\n                total: total,\n                items: items,\n                itemsLength: items.length,\n                customerName: customerName,\n                date: date,\n                time: time,\n                Customer_Address: customerAddress,\n                Customer_Phone: customerPhone\n              }; // console.log(data);\n\n              _context.next = 6;\n              return axios.post(\"http://localhost/spare_parts/sales.php\", data).then(function (value) {\n                return console.log(value);\n              });\n\n            case 6:\n              _this2.props.history.push({\n                pathname: \"/invoice\",\n                data: data\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this2.state = {\n      isMounted: false,\n      customerName: \"\",\n      customerAddress: \"\",\n      customerPhone: \"\",\n      date: \"\",\n      time: \"\",\n      rowCount: 1,\n      Items: _this2.onEnter,\n      SelectedCategory: [_this2.notSelected],\n      SelectedProducts: [_this2.notSelected],\n      SelectedPrices: [0],\n      SelectedQty: [1],\n      SelectedIds: [\"\"],\n      subTotal: 0,\n      discount: 0,\n      total: 0,\n      categories: [// {\n        //     text: \"Category Name\",\n        //     value: \"Category Value\"\n        // },\n      ],\n      products: {// Data Format\n        // Category_Name: {\n        //     Product_Name: {\n        //         text: \"Product Name\",\n        //         value: \"Product Value\"\n        //         price: \"Product Price\"\n        //         id: Product_id,\n        //         qty: Product_Quantity,\n        //     },\n        // },\n      }\n    };\n    _this2.componentDidMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _this2$state2, categories, products;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this2$state2 = _this2.state, categories = _this2$state2.categories, products = _this2$state2.products;\n              _context2.next = 3;\n              return axios.post(\"http://localhost/spare_parts/show_category.php\").then(function (response) {\n                response.data.map(function (category) {\n                  var newCategory = {\n                    name: category.Category_Name,\n                    value: category.Category_Name\n                  };\n                  categories = [].concat(_toConsumableArray(categories), [newCategory]);\n                });\n              });\n\n            case 3:\n              _context2.next = 5;\n              return axios.post(\"http://localhost/spare_parts/allproducts.php\").then(function (response) {\n                response.data.map(function (product) {\n                  var Product_Name = product.Product_Name,\n                      Category_Name = product.Category_Name,\n                      Product_Retail_Price = product.Product_Retail_Price,\n                      id = product.id,\n                      Product_Quantity = product.Product_Quantity;\n                  var newProduct = {};\n                  newProduct[Product_Name] = {\n                    name: Product_Name,\n                    value: Product_Name,\n                    price: parseInt(Product_Retail_Price),\n                    id: id,\n                    qty: Product_Quantity\n                  };\n                  if (!products.hasOwnProperty(product.Category_Name)) products[Category_Name] = newProduct;else products[Category_Name][Product_Name] = newProduct[Product_Name];\n                });\n              });\n\n            case 5:\n              _this2.setState({\n                products,\n                categories\n              });\n\n              _this2.setState({\n                isMounted: true\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this2.onAdd = function () {\n      var _this2$state3 = _this2.state,\n          rowCount = _this2$state3.rowCount,\n          SelectedCategory = _this2$state3.SelectedCategory,\n          SelectedProducts = _this2$state3.SelectedProducts,\n          SelectedPrices = _this2$state3.SelectedPrices,\n          SelectedQty = _this2$state3.SelectedQty,\n          SelectedIds = _this2$state3.SelectedIds;\n      var categories = [].concat(_toConsumableArray(SelectedCategory), [_this2.notSelected]);\n      var products = [].concat(_toConsumableArray(SelectedProducts), [_this2.notSelected]);\n      var prices = [].concat(_toConsumableArray(SelectedPrices), [0]);\n      var ids = [].concat(_toConsumableArray(SelectedIds), [\"None\"]);\n      var qty = [].concat(_toConsumableArray(SelectedQty), [1]);\n\n      _this2.setState({\n        rowCount: rowCount + 1,\n        SelectedCategory: categories,\n        SelectedProducts: products,\n        SelectedPrices: prices,\n        SelectedQty: qty,\n        SelectedIds: ids\n      });\n    };\n\n    _this2.categoryComponent = function (id) {\n      var _this2$state4 = _this2.state,\n          categories = _this2$state4.categories,\n          SelectedCategory = _this2$state4.SelectedCategory;\n      var index = id - 1;\n      return /*#__PURE__*/React.createElement(SelectSearch, {\n        options: categories,\n        search: true,\n        onChange: function onChange(selectedValue) {\n          return _this2.onSelectedCategoryUpdate(index, selectedValue);\n        },\n        value: SelectedCategory[index],\n        name: \"Categories\",\n        placeholder: \"Choose your Option\",\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this2.onSelectedCategoryUpdate = function (index, selectedValue) {\n      var _this2$state5 = _this2.state,\n          isMounted = _this2$state5.isMounted,\n          discount = _this2$state5.discount,\n          SelectedCategory = _this2$state5.SelectedCategory;\n\n      if (isMounted && typeof selectedValue != \"undefined\" && selectedValue !== SelectedCategory[index]) {\n        SelectedCategory[index] = selectedValue;\n\n        var subTotal = _this2.computeSubtotal();\n\n        var total = subTotal - discount;\n\n        _this2.setState({\n          SelectedCategory,\n          subTotal,\n          total\n        });\n      }\n    };\n\n    _this2.productComponent = function (id) {\n      var _this2$state6 = _this2.state,\n          products = _this2$state6.products,\n          SelectedProducts = _this2$state6.SelectedProducts,\n          SelectedCategory = _this2$state6.SelectedCategory;\n      var index = id - 1;\n      var options;\n\n      if (products[SelectedCategory[index]]) {\n        options = lodash.map(products[SelectedCategory[index]], function (val) {\n          return val;\n        });\n      } else options = [];\n\n      return /*#__PURE__*/React.createElement(SelectSearch, {\n        options: options,\n        search: true,\n        onChange: function onChange(selectedValue) {\n          return _this2.onSelectedProductUpdate(index, selectedValue);\n        },\n        value: SelectedProducts[index],\n        name: \"Products\",\n        placeholder: \"Choose your Option\",\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 16\n        }\n      });\n    };\n\n    _this2.onSelectedProductUpdate = function (index, selectedValue) {\n      var _this2$state7 = _this2.state,\n          products = _this2$state7.products,\n          isMounted = _this2$state7.isMounted,\n          discount = _this2$state7.discount,\n          SelectedProducts = _this2$state7.SelectedProducts,\n          SelectedCategory = _this2$state7.SelectedCategory,\n          SelectedPrices = _this2$state7.SelectedPrices,\n          SelectedIds = _this2$state7.SelectedIds;\n      var category = SelectedCategory[index];\n\n      if (isMounted && selectedValue !== _this2.notSelected && typeof selectedValue != \"undefined\" && selectedValue !== SelectedProducts[index] && typeof category != 'undefined') {\n        SelectedProducts[index] = selectedValue;\n        SelectedPrices[index] = products[category][selectedValue].price;\n        SelectedIds[index] = products[category][selectedValue].id;\n\n        var subTotal = _this2.computeSubtotal();\n\n        var total = subTotal - discount;\n\n        _this2.setState({\n          SelectedProducts,\n          SelectedIds,\n          SelectedPrices,\n          subTotal,\n          total\n        });\n      }\n    };\n\n    _this2.quantityComponent = function (id) {\n      var _this2$state8 = _this2.state,\n          SelectedQty = _this2$state8.SelectedQty,\n          SelectedProducts = _this2$state8.SelectedProducts,\n          SelectedCategory = _this2$state8.SelectedCategory,\n          SelectedPrices = _this2$state8.SelectedPrices,\n          products = _this2$state8.products,\n          subTotal = _this2$state8.subTotal,\n          total = _this2$state8.total,\n          discount = _this2$state8.discount;\n      var index = id - 1;\n      return /*#__PURE__*/React.createElement(MDBInput, {\n        style: {\n          marginTop: \"-1.5rem\"\n        },\n        label: \"Quantity\",\n        group: true,\n        type: \"number\",\n        value: SelectedQty[index],\n        validate: true,\n        onChange: function onChange(event) {\n          var product = SelectedProducts[index];\n          var category = SelectedCategory[index];\n\n          if (event.target.value !== '' && typeof products[category] != \"undefined\" && typeof products[category][product] != 'undefined') {\n            var quantity = parseInt(event.target.value);\n            SelectedPrices[index] = products[category][product].price * quantity;\n            SelectedQty[index] = quantity;\n            subTotal = _this2.computeSubtotal();\n            total = subTotal - discount;\n\n            _this2.setState({\n              SelectedPrices,\n              SelectedQty,\n              subTotal,\n              total\n            });\n          }\n        },\n        name: \"productName\",\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this2.computeSubtotal = function () {\n      return _this2.state.SelectedPrices.reduce(function (val, newVal) {\n        return val + newVal;\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(SalePage, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          rowCount = _this$state.rowCount,\n          SelectedPrices = _this$state.SelectedPrices,\n          subTotal = _this$state.subTotal,\n          total = _this$state.total,\n          discount = _this$state.discount;\n      return /*#__PURE__*/React.createElement(MDBContainer, {\n        style: {\n          paddingTop: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MDBRow, {\n        className: \"d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        size: \"12\",\n        xl: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MDBCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(MDBCardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(MDBCardHeader, {\n        className: \"form-header blue-gradient rounded\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"my-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(MDBIcon, {\n        icon: \"dollar-sign\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 41\n        }\n      }), \" Sale\")), /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"grey-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"4\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Customer Name\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            customerName: event.target.value\n          });\n        },\n        name: \"productName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"4\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Customer Phone\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            customerPhone: event.target.value\n          });\n        },\n        name: \"productName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"4\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Customer Address\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            customerAddress: event.target.value\n          });\n        },\n        name: \"productName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"2\",\n        className: \"mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBDatePicker, {\n        getValue: function getValue(value) {\n          return _this3.setState({\n            date: \"\".concat(value.getDate(), \"-\").concat(value.getMonth(), \"-\").concat(value.getYear() + 1900)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"4\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBTimePicker, {\n        getValue: function getValue(value) {\n          return _this3.setState({\n            time: value\n          });\n        },\n        id: \"Time\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBBtn, {\n        color: \"red\",\n        onClick: function onClick() {\n          return _this3.onAdd();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 49\n        }\n      }, \"Add\"))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBTable, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(MDBTableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 61\n        }\n      }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 61\n        }\n      }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 61\n        }\n      }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 61\n        }\n      }, \"Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 61\n        }\n      }, \"Price\"))), /*#__PURE__*/React.createElement(MDBTableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 53\n        }\n      }, lodash.range(1, rowCount + 1).map(function (id) {\n        return /*#__PURE__*/React.createElement(Row, {\n          key: id,\n          id: id,\n          categoryComponent: _this3.categoryComponent,\n          productComponent: _this3.productComponent,\n          price: SelectedPrices[id - 1],\n          quantity: _this3.quantityComponent,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 61\n          }\n        });\n      }))))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Subtotal \",\n        value: subTotal,\n        disabled: true,\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Discount \",\n        value: discount,\n        type: \"number\",\n        onChange: function onChange(val) {\n          var disc = 0;\n\n          if (val.target.value !== '') {\n            disc = parseInt(val.target.value);\n          }\n\n          var subTotal = _this3.computeSubtotal();\n\n          var total = subTotal - disc;\n\n          _this3.setState({\n            discount: disc,\n            subTotal,\n            total\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Total \",\n        value: total,\n        disabled: true,\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBBtn, {\n        onClick: this.onEnter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 49\n        }\n      }, \" Enter Bill \")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 37\n        }\n      })))))));\n    }\n  }]);\n\n  return SalePage;\n}(Component);\n\nexport default SalePage;","map":{"version":3,"sources":["/home/hishsmtariq/ReactJsProjects/spare_part/src/spare_parts_components/pages/sale.jsx"],"names":["React","Component","lodash","SelectSearch","MDBBtn","MDBCard","MDBCardBody","MDBCardHeader","MDBCol","MDBContainer","MDBIcon","MDBInput","MDBRow","MDBSelect","MDBTable","MDBTableBody","MDBTableHead","MDBLink","MDBDatePicker","MDBTimePicker","axios","getCurrentDate","Row","id","categoryComponent","productComponent","quantity","price","SalePage","notSelected","onEnter","console","log","state","SelectedIds","SelectedPrices","SelectedQty","SelectedProducts","rowCount","subTotal","discount","total","customerName","date","time","customerAddress","customerPhone","items","range","map","index","qty","sno","desc","rate","Product_id","data","itemsLength","length","Customer_Address","Customer_Phone","post","then","value","props","history","push","pathname","isMounted","Items","SelectedCategory","categories","products","componentDidMount","response","category","newCategory","name","Category_Name","product","Product_Name","Product_Retail_Price","Product_Quantity","newProduct","parseInt","hasOwnProperty","setState","onAdd","prices","ids","selectedValue","onSelectedCategoryUpdate","computeSubtotal","options","val","onSelectedProductUpdate","quantityComponent","marginTop","event","target","reduce","newVal","paddingTop","getDate","getMonth","getYear","disc"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport lodash from \"lodash\"\nimport SelectSearch from 'react-select-search';\nimport \"./sale.css\"\n\nimport {\n    MDBBtn,\n    MDBCard,\n    MDBCardBody,\n    MDBCardHeader,\n    MDBCol,\n    MDBContainer,\n    MDBIcon,\n    MDBInput,\n    MDBRow,\n    MDBSelect,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n    MDBLink,\n    MDBDatePicker,\n    MDBTimePicker\n} from \"mdbreact\";\nimport axios from \"axios\";\n\nimport getCurrentDate from \"../utils/get_current_date\"\n\nconst Row = ({id, categoryComponent, productComponent, quantity, price}) => {\n    return (\n        <tr>\n            <td>{id}</td>\n            <td>{categoryComponent(id)}</td>\n            <td>{productComponent(id)}</td>\n            <td>{quantity(id)}</td>\n            <td>{price}</td>\n        </tr>\n    );\n}\n\n\nclass SalePage extends Component {\n    notSelected = \"Chose your option\";\n\n    onEnter = async () =>{\n        console.log(\"I am in the onEnter function\");\n        const {\n            SelectedIds,\n            SelectedPrices,\n            SelectedQty,\n            SelectedProducts,\n            rowCount,\n            subTotal,\n            discount,\n            total,\n            customerName,\n            date,\n            time,\n            customerAddress,\n            customerPhone,\n        } = this.state;\n        //    Data Format\n        // {\n        //  sno: index\n        //  dec: Product Name,\n        //  qty: 1 (Quantity)\n        //  rate: Price\n        // }\n        let items = lodash.range(rowCount).map(index => {\n            const qty = SelectedQty[index];\n            return {\n                sno: index, // Row No.\n                desc: SelectedProducts[index], // Product Name\n                qty: qty, // Product Quantity\n                rate: SelectedPrices[index] / qty, // Product 1 Qty Price\n                Product_id: SelectedIds[index], // Product ID\n            }\n        })\n        const data = {\n            subTotal: subTotal,\n            discount: discount,\n            total: total,\n            items: items,\n            itemsLength: items.length,\n            customerName: customerName,\n            date: date,\n            time: time,\n            Customer_Address: customerAddress,\n            Customer_Phone: customerPhone,\n        };\n        // console.log(data);\n        await axios.post(\"http://localhost/spare_parts/sales.php\", data).then(value => console.log(value));\n        this.props.history.push({\n            pathname: \"/invoice\",\n            data: data\n        })\n\n    }\n\n    state = {\n        isMounted: false,\n        customerName: \"\",\n        customerAddress: \"\",\n        customerPhone:\"\",\n        date: \"\",\n        time: \"\",\n        rowCount: 1,\n        Items: this.onEnter,\n        SelectedCategory:[this.notSelected],\n        SelectedProducts:[this.notSelected],\n        SelectedPrices:[0],\n        SelectedQty:[1],\n        SelectedIds:[\"\"],\n        subTotal: 0,\n        discount: 0,\n        total: 0,\n        categories: [\n            // {\n            //     text: \"Category Name\",\n            //     value: \"Category Value\"\n            // },\n        ],\n        products: {\n            // Data Format\n            // Category_Name: {\n            //     Product_Name: {\n            //         text: \"Product Name\",\n            //         value: \"Product Value\"\n            //         price: \"Product Price\"\n            //         id: Product_id,\n            //         qty: Product_Quantity,\n            //     },\n            // },\n        },\n    };\n\n    componentDidMount = async () => {\n        let {categories, products} = this.state;\n        await axios\n            .post(\"http://localhost/spare_parts/show_category.php\")\n            .then((response) => {\n                    response.data.map((category) => {\n                        const newCategory = {name: category.Category_Name, value: category.Category_Name};\n                        categories = [...categories, newCategory];\n                    });\n                }\n            );\n        await axios\n            .post(\"http://localhost/spare_parts/allproducts.php\")\n            .then((response) => {\n                    response.data.map((product) => {\n\n                        const {Product_Name, Category_Name, Product_Retail_Price,id, Product_Quantity } = product;\n                        const newProduct = {}\n                        newProduct[Product_Name] = {\n                            name: Product_Name,\n                            value: Product_Name,\n                            price: parseInt(Product_Retail_Price),\n                            id:id,\n                            qty: Product_Quantity,\n\n                        };\n                        if (!products.hasOwnProperty(product.Category_Name))\n                            products[Category_Name] = newProduct;\n                        else\n                            products[Category_Name][Product_Name] = newProduct[Product_Name];\n                    });\n                }\n            );\n        this.setState({products, categories});\n        this.setState({isMounted: true});\n    };\n    onAdd = () => {\n        const {\n            rowCount,\n            SelectedCategory,\n            SelectedProducts,\n            SelectedPrices,\n            SelectedQty,\n            SelectedIds\n        } = this.state;\n        const categories = [...SelectedCategory, this.notSelected]\n        const products = [...SelectedProducts, this.notSelected]\n        const prices = [...SelectedPrices, 0]\n        const ids = [...SelectedIds, \"None\"]\n        const qty = [...SelectedQty, 1]\n        this.setState({\n            rowCount: rowCount + 1,\n            SelectedCategory: categories,\n            SelectedProducts: products,\n            SelectedPrices: prices,\n            SelectedQty: qty,\n            SelectedIds: ids\n        });\n    };\n\n    categoryComponent = (id) => {\n        const {categories, SelectedCategory} = this.state;\n        const index = id - 1;\n        return (\n            <SelectSearch options={categories} search={true} onChange={selectedValue => this.onSelectedCategoryUpdate(index, selectedValue)} value={SelectedCategory[index]} name=\"Categories\" placeholder=\"Choose your Option\" />\n        );\n    };\n\n    onSelectedCategoryUpdate = (index, selectedValue) => {\n        let {\n            isMounted,\n            discount,\n            SelectedCategory,\n        } = this.state;\n\n        if ( isMounted\n            && typeof selectedValue != \"undefined\"\n            && selectedValue !== SelectedCategory[index]\n        ) {\n            SelectedCategory[index] = selectedValue;\n            const subTotal = this.computeSubtotal();\n            const total = subTotal - discount;\n            this.setState({SelectedCategory, subTotal, total});\n        }\n    };\n\n    productComponent = (id) => {\n        const {\n            products,\n            SelectedProducts,\n            SelectedCategory\n        } = this.state;\n\n        const index = id - 1;\n        let options;\n        if (products[SelectedCategory[index]]) {\n            options = lodash.map(products[SelectedCategory[index]], function (val) {\n                return val;\n            })\n        }\n        else options = [];\n        return <SelectSearch options={options} search={true} onChange={selectedValue => this.onSelectedProductUpdate(index, selectedValue)} value={SelectedProducts[index]} name=\"Products\" placeholder=\"Choose your Option\" />\n    };\n    onSelectedProductUpdate = (index, selectedValue) => {\n        let {\n            products,\n            isMounted,\n            discount,\n            SelectedProducts,\n            SelectedCategory,\n            SelectedPrices,\n            SelectedIds\n        } = this.state;\n        const category = SelectedCategory[index];\n\n        if (isMounted\n            && selectedValue !== this.notSelected\n            && typeof selectedValue != \"undefined\"\n            && selectedValue !== SelectedProducts[index]\n            && typeof category != 'undefined'\n        ) {\n            SelectedProducts[index] = selectedValue;\n            SelectedPrices[index] = products[category][selectedValue].price;\n            SelectedIds[index] = products[category][selectedValue].id;\n            const subTotal = this.computeSubtotal()\n            const total = subTotal - discount;\n            this.setState({SelectedProducts, SelectedIds, SelectedPrices, subTotal, total});\n        }\n    };\n\n    quantityComponent = (id) =>{\n        let {\n            SelectedQty,\n            SelectedProducts,\n            SelectedCategory,\n            SelectedPrices,\n            products,\n            subTotal,\n            total,\n            discount,\n        } = this.state;\n        const index = id - 1 ;\n\n        return(\n            <MDBInput\n                style={{marginTop:\"-1.5rem\"}}\n                label=\"Quantity\"\n                group\n                type=\"number\"\n                value={SelectedQty[index]}\n                validate\n                onChange={(event) => {\n\n                    const product = SelectedProducts[index];\n                    const category = SelectedCategory[index];\n\n                    if(event.target.value !== '' &&\n                        typeof products[category] != \"undefined\" &&\n                        typeof products[category][product] != 'undefined'\n                    ){\n                        const quantity = parseInt(event.target.value);\n                        SelectedPrices[index] = products[category][product].price * quantity\n                        SelectedQty[index] = quantity;\n                        subTotal = this.computeSubtotal();\n                        total = subTotal - discount;\n                        this.setState({SelectedPrices, SelectedQty, subTotal, total});\n                    }\n\n                }}\n                name=\"productName\"\n            />\n        )\n    };\n\n\n\n    computeSubtotal = () => {\n        return this.state.SelectedPrices.reduce((val, newVal) => val + newVal)\n    }\n\n    render() {\n        const {rowCount, SelectedPrices, subTotal, total, discount} = this.state;\n        return (\n            <MDBContainer style={{paddingTop: 50}}>\n                <MDBRow className=\"d-flex justify-content-center\">\n                    <MDBCol size=\"12\" xl=\"12\">\n                        <MDBCard>\n                            <MDBCardBody>\n                                <MDBCardHeader className=\"form-header blue-gradient rounded\">\n                                    <h3 className=\"my-3\">\n                                        <MDBIcon icon=\"dollar-sign\"/> Sale\n                                    </h3>\n                                </MDBCardHeader>\n                                <form>\n                                    <div className=\"grey-text\">\n                                        {/*---------- Row 1 ----------*/}\n                                        <MDBRow>\n                                            <MDBCol sm=\"4\" className=\"mb-3\">\n                                                <MDBInput\n                                                    label=\"Customer Name\"\n                                                    group\n                                                    type=\"text\"\n                                                    validate\n                                                    onChange={(event) =>\n                                                        this.setState({customerName: event.target.value})\n                                                    }\n                                                    name=\"productName\"\n                                                />\n                                            </MDBCol>\n                                            <MDBCol sm=\"4\" className=\"mb-3\">\n                                                <MDBInput\n                                                    label=\"Customer Phone\"\n                                                    group\n                                                    type=\"text\"\n                                                    validate\n                                                    onChange={(event) =>\n                                                        this.setState({customerPhone: event.target.value})\n                                                    }\n                                                    name=\"productName\"\n                                                />\n                                            </MDBCol>\n                                            <MDBCol sm=\"4\" className=\"mb-3\">\n                                                <MDBInput\n                                                    label=\"Customer Address\"\n                                                    group\n                                                    type=\"text\"\n                                                    validate\n                                                    onChange={(event) =>\n                                                        this.setState({customerAddress: event.target.value})\n                                                    }\n                                                    name=\"productName\"\n                                                />\n                                            </MDBCol>\n                                            {/*<MDBCol sm=\"1\" className=\"mb-3\"/>*/}\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol sm=\"2\" className=\"mt-2\">\n                                                <MDBDatePicker  getValue={value => this.setState(\n                                                    {date: `${value.getDate()}-${value.getMonth()}-${value.getYear()+1900}`}\n                                                )} />\n                                            </MDBCol>\n                                            {/*<MDBCol sm=\"1\"/>*/}\n                                            <MDBCol sm=\"4\" className=\"mb-3\">\n                                                <MDBTimePicker  getValue={value => this.setState({time: value})}  id={\"Time\"}/>\n                                            </MDBCol>\n                                            <MDBCol sm=\"3\">\n                                                <MDBBtn color=\"red\" onClick={() => this.onAdd()}>\n                                                    Add\n                                                </MDBBtn>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol>\n                                                <MDBTable>\n                                                    <MDBTableHead>\n                                                        <tr>\n                                                            <th>#</th>\n                                                            <th>Category</th>\n                                                            <th>Product</th>\n                                                            <th>Qty</th>\n                                                            <th>Price</th>\n                                                        </tr>\n                                                    </MDBTableHead>\n                                                    <MDBTableBody>\n                                                        {lodash.range(1, rowCount + 1).map((id) =>\n                                                            <Row key={id}\n                                                                 id={id}\n                                                                 categoryComponent={this.categoryComponent}\n                                                                 productComponent={this.productComponent}\n                                                                 price={SelectedPrices[id - 1]}\n                                                                 quantity={this.quantityComponent}\n                                                            />\n                                                        )\n                                                        }\n                                                    </MDBTableBody>\n                                                </MDBTable>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol sm=\"3\">\n                                                <MDBInput label=\"Subtotal \" value={subTotal} disabled type=\"number\" />\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol sm=\"3\">\n                                                <MDBInput label=\"Discount \" value={discount} type=\"number\"  onChange={val => {\n                                                    let disc = 0\n                                                    if (val.target.value !== '') {\n                                                        disc = parseInt(val.target.value);\n                                                    }\n                                                    const subTotal = this.computeSubtotal();\n                                                    const total = subTotal - disc;\n                                                    this.setState({discount: disc, subTotal, total})\n                                                }}/>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol sm=\"3\">\n                                                <MDBInput label=\"Total \" value={total} disabled type=\"number\" />\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol sm=\"3\">\n                                                <MDBBtn onClick={this.onEnter}> Enter Bill </MDBBtn>\n                                            </MDBCol>\n                                        </MDBRow>\n                                    </div>\n                                    <div className=\"text-center mt-4\"/>\n                                </form>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        );\n    }\n}\n\nexport default SalePage;"]},"metadata":{},"sourceType":"module"}