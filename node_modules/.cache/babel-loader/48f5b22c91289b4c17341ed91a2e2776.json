{"ast":null,"code":"import _classCallCheck from\"/home/hishsmtariq/GitProj/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/hishsmtariq/GitProj/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/hishsmtariq/GitProj/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/hishsmtariq/GitProj/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import InsertCategoryForm from\"./forms/insert_category_form\";var axios=require(\"axios\");var InsertCategory=/*#__PURE__*/function(_Component){_inherits(InsertCategory,_Component);var _super=_createSuper(InsertCategory);function InsertCategory(){var _this;_classCallCheck(this,InsertCategory);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={};_this.componentWillMount=function(){axios.post(\"http://localhost/spare_parts/session_checker.php\").then(function(value){if(value.data===\"no record found\")return null;else if(value.data[0].status!=='1'){_this.props.history.push(\"/login\");}});};_this.onInsertCategory=function(name,status){axios.post(\"http://localhost/spare_parts/create_category.php\",{Category_Name:name,Category_Status:status}).then(function(response){return console.log(response.data);});};return _this;}_createClass(InsertCategory,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(InsertCategoryForm,{onAdd:this.onInsertCategory});}}]);return InsertCategory;}(Component);export default InsertCategory;","map":{"version":3,"sources":["/home/hishsmtariq/GitProj/spare_part/src/spare_parts_components/insert_category.jsx"],"names":["React","Component","InsertCategoryForm","axios","require","InsertCategory","state","componentWillMount","post","then","value","data","status","props","history","push","onInsertCategory","name","Category_Name","Category_Status","response","console","log"],"mappings":"4lBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,kBAAP,KAA+B,8BAA/B,CACA,GAAMC,CAAAA,KAAK,CAAGC,OAAO,CAAC,OAAD,CAArB,C,GAEMC,CAAAA,c,2VACJC,K,CAAQ,E,OAENC,kB,CAAqB,UAAM,CACvBJ,KAAK,CAACK,IAAN,CAAW,kDAAX,EACKC,IADL,CACU,SAAAC,KAAK,CAAI,CACX,GAAIA,KAAK,CAACC,IAAN,GAAe,iBAAnB,CAAsC,MAAO,KAAP,CAAtC,IACK,IAAGD,KAAK,CAACC,IAAN,CAAW,CAAX,EAAcC,MAAd,GAAyB,GAA5B,CAAiC,CAClC,MAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,EACH,CACJ,CANL,EAOH,C,OAEHC,gB,CAAmB,SAACC,IAAD,CAAOL,MAAP,CAAkB,CACnCT,KAAK,CACFK,IADH,CACQ,kDADR,CAC4D,CACxDU,aAAa,CAAED,IADyC,CAExDE,eAAe,CAAEP,MAFuC,CAD5D,EAKGH,IALH,CAKQ,SAACW,QAAD,QAAcC,CAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACT,IAArB,CAAd,EALR,EAMD,C,iFACQ,CACP,mBAAO,oBAAC,kBAAD,EAAoB,KAAK,CAAE,KAAKK,gBAAhC,EAAP,CACD,C,4BAvB0Bf,S,EA0B7B,cAAeI,CAAAA,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport InsertCategoryForm from \"./forms/insert_category_form\";\nconst axios = require(\"axios\");\n\nclass InsertCategory extends Component {\n  state = {};\n\n    componentWillMount = () => {\n        axios.post(\"http://localhost/spare_parts/session_checker.php\")\n            .then(value => {\n                if (value.data === \"no record found\") return null;\n                else if(value.data[0].status !== '1') {\n                    this.props.history.push(\"/login\");\n                }\n            })\n    }\n\n  onInsertCategory = (name, status) => {\n    axios\n      .post(\"http://localhost/spare_parts/create_category.php\", {\n        Category_Name: name,\n        Category_Status: status,\n      })\n      .then((response) => console.log(response.data));\n  };\n  render() {\n    return <InsertCategoryForm onAdd={this.onInsertCategory} />;\n  }\n}\n\nexport default InsertCategory;\n"]},"metadata":{},"sourceType":"module"}