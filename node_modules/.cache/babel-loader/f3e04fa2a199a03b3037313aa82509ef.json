{"ast":null,"code":"import _toConsumableArray from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hishsmtariq/ReactJsProjects/spare_part/src/spare_parts_components/pages/sale.jsx\";\n\nimport React, { Component } from \"react\";\nimport lodash from \"lodash\";\nimport SelectSearch from 'react-select-search';\nimport \"./sale.css\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardHeader, MDBCol, MDBContainer, MDBIcon, MDBInput, MDBRow, MDBTable, MDBTableBody, MDBTableHead, MDBDatePicker, MDBTimePicker, MDBBadge } from \"mdbreact\";\nimport axios from \"axios\";\n\nvar Row = function Row(_ref) {\n  var id = _ref.id,\n      categoryComponent = _ref.categoryComponent,\n      productComponent = _ref.productComponent,\n      quantity = _ref.quantity,\n      price = _ref.price,\n      onDelete = _ref.onDelete,\n      haveQty = _ref.haveQty;\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MDBBadge, {\n    color: \"red\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MDBIcon, {\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: function onClick() {\n      return onDelete(id);\n    },\n    icon: \"minus\",\n    size: \"2x\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, categoryComponent(id)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, productComponent(id)), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      paddingTop: \"1.5rem\",\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, haveQty), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, quantity(id)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, price));\n};\n\nvar SalePage = /*#__PURE__*/function (_Component) {\n  _inherits(SalePage, _Component);\n\n  var _super = _createSuper(SalePage);\n\n  function SalePage() {\n    var _this2;\n\n    _classCallCheck(this, SalePage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.notSelected = \"Chose your option\";\n\n    _this2.validateData = function () {\n      var _this2$state = _this2.state,\n          SelectedProducts = _this2$state.SelectedProducts,\n          SelectedCategory = _this2$state.SelectedCategory;\n      console.log(SelectedCategory.findIndex(function (value) {\n        return value === _this2.notSelected;\n      })); // if(SelectedCategory.findIndex(value => {return value === this.notSelected})) return false;\n      // return !SelectedProducts.findIndex(value => {return value === this.notSelected});\n    };\n\n    _this2.onEnter = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"I am in the onEnter function\"); // console.log(this.validateData())\n              // if (!this.validateData()) return;\n              // const {\n              //     SelectedIds,\n              //     SelectedPrices,\n              //     SelectedQty,\n              //     SelectedProducts,\n              //     rowCount,\n              //     subTotal,\n              //     discount,\n              //     total,\n              //     customerName,\n              //     date,\n              //     time,\n              //     customerAddress,\n              //     customerPhone,\n              //     customerCNIC\n              // } = this.state;\n              //\n              //\n              //\n              // //    Data Format\n              // // {\n              // //  sno: index\n              // //  dec: Product Name,\n              // //  qty: 1 (Quantity)\n              // //  rate: Price\n              // // }\n              // let items = lodash.range(rowCount).map(index => {\n              //     const qty = SelectedQty[index];\n              //     return {\n              //         sno: index, // Row No.\n              //         desc: SelectedProducts[index], // Product Name\n              //         qty: qty, // Product Quantity\n              //         rate: SelectedPrices[index] / qty, // Product 1 Qty Price\n              //         Product_id: SelectedIds[index], // Product ID\n              //     }\n              // })\n              // const data = {\n              //     subTotal: subTotal,\n              //     discount: discount,\n              //     total: total,\n              //     items: items,\n              //     itemsLength: items.length,\n              //     customerName: customerName,\n              //     date: date,\n              //     time: time,\n              //     Customer_Address: customerCNIC,\n              //     Customer_Phone: customerPhone,\n              //     Customer_CNIC: customerCNIC,\n              // };\n              // console.log(data);\n              // this.props.history.push({\n              //     pathname: \"/invoice\",\n              //     data: data\n              // })\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this2.state = {\n      isMounted: false,\n      customerName: \"\",\n      customerAddress: \"\",\n      customerPhone: \"\",\n      customerCNIC: \"\",\n      date: \"\",\n      time: \"\",\n      rowCount: 1,\n      Items: _this2.onEnter,\n      SelectedCategory: [_this2.notSelected],\n      SelectedProducts: [_this2.notSelected],\n      SelectedPrices: [0],\n      SelectedQty: [1],\n      SelectedIds: [\"\"],\n      SelectedHaveQty: [0],\n      subTotal: 0,\n      discount: 0,\n      total: 0,\n      categories: [// {\n        //     text: \"Category Name\",\n        //     value: \"Category Value\"\n        // },\n      ],\n      products: {// Data Format\n        // Category_Name: {\n        //     Product_Name: {\n        //         text: \"Product Name\",\n        //         value: \"Product Value\"\n        //         price: \"Product Price\"\n        //         id: Product_id,\n        //         qty: Product_Quantity,\n        //     },\n        // },\n      }\n    };\n    _this2.componentDidMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _this2$state2, categories, products;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this2$state2 = _this2.state, categories = _this2$state2.categories, products = _this2$state2.products;\n              _context2.next = 3;\n              return axios.post(\"http://localhost/spare_parts/show_category.php\").then(function (response) {\n                response.data.map(function (category) {\n                  var newCategory = {\n                    name: category.Category_Name,\n                    value: category.Category_Name\n                  };\n                  categories = [].concat(_toConsumableArray(categories), [newCategory]);\n                });\n              });\n\n            case 3:\n              _context2.next = 5;\n              return axios.post(\"http://localhost/spare_parts/allproducts.php\").then(function (response) {\n                response.data.map(function (product) {\n                  var Product_Name = product.Product_Name,\n                      Category_Name = product.Category_Name,\n                      Product_Retail_Price = product.Product_Retail_Price,\n                      id = product.id,\n                      Product_Quantity = product.Product_Quantity;\n                  var newProduct = {};\n                  newProduct[Product_Name] = {\n                    name: Product_Name,\n                    value: Product_Name,\n                    price: parseInt(Product_Retail_Price),\n                    id: id,\n                    qty: Product_Quantity\n                  };\n                  if (!products.hasOwnProperty(product.Category_Name)) products[Category_Name] = newProduct;else products[Category_Name][Product_Name] = newProduct[Product_Name];\n                });\n              });\n\n            case 5:\n              _this2.setState({\n                products,\n                categories\n              });\n\n              _this2.setState({\n                isMounted: true\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this2.onAdd = function () {\n      var _this2$state3 = _this2.state,\n          rowCount = _this2$state3.rowCount,\n          SelectedCategory = _this2$state3.SelectedCategory,\n          SelectedProducts = _this2$state3.SelectedProducts,\n          SelectedPrices = _this2$state3.SelectedPrices,\n          SelectedQty = _this2$state3.SelectedQty,\n          SelectedIds = _this2$state3.SelectedIds,\n          SelectedHaveQty = _this2$state3.SelectedHaveQty;\n      var categories = [].concat(_toConsumableArray(SelectedCategory), [_this2.notSelected]);\n      var products = [].concat(_toConsumableArray(SelectedProducts), [_this2.notSelected]);\n      var prices = [].concat(_toConsumableArray(SelectedPrices), [0]);\n      var ids = [].concat(_toConsumableArray(SelectedIds), [\"None\"]);\n      var qty = [].concat(_toConsumableArray(SelectedQty), [1]);\n      var haveQty = [].concat(_toConsumableArray(SelectedHaveQty), [0]);\n\n      _this2.setState({\n        rowCount: rowCount + 1,\n        SelectedCategory: categories,\n        SelectedProducts: products,\n        SelectedPrices: prices,\n        SelectedHaveQty: haveQty,\n        SelectedQty: qty,\n        SelectedIds: ids\n      });\n    };\n\n    _this2.categoryComponent = function (id) {\n      var _this2$state4 = _this2.state,\n          categories = _this2$state4.categories,\n          SelectedCategory = _this2$state4.SelectedCategory;\n      var index = id - 1;\n      return /*#__PURE__*/React.createElement(SelectSearch, {\n        options: categories,\n        search: true,\n        onChange: function onChange(selectedValue) {\n          return _this2.onSelectedCategoryUpdate(index, selectedValue);\n        },\n        value: SelectedCategory[index],\n        name: \"Categories\",\n        placeholder: \"Choose your Option\",\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this2.onSelectedCategoryUpdate = function (index, selectedValue) {\n      var _this2$state5 = _this2.state,\n          isMounted = _this2$state5.isMounted,\n          discount = _this2$state5.discount,\n          SelectedCategory = _this2$state5.SelectedCategory;\n\n      if (isMounted && typeof selectedValue != \"undefined\" && selectedValue !== SelectedCategory[index]) {\n        SelectedCategory[index] = selectedValue;\n\n        var subTotal = _this2.computeSubtotal();\n\n        var total = subTotal - discount;\n\n        _this2.setState({\n          SelectedCategory,\n          subTotal,\n          total\n        });\n      }\n    };\n\n    _this2.productComponent = function (id) {\n      var _this2$state6 = _this2.state,\n          products = _this2$state6.products,\n          SelectedProducts = _this2$state6.SelectedProducts,\n          SelectedCategory = _this2$state6.SelectedCategory;\n      var index = id - 1;\n      var options;\n\n      if (products[SelectedCategory[index]]) {\n        options = lodash.map(products[SelectedCategory[index]], function (val) {\n          return val;\n        });\n      } else options = [];\n\n      return /*#__PURE__*/React.createElement(SelectSearch, {\n        options: options,\n        search: true,\n        onChange: function onChange(selectedValue) {\n          return _this2.onSelectedProductUpdate(index, selectedValue);\n        },\n        value: SelectedProducts[index],\n        name: \"Products\",\n        placeholder: \"Choose your Option\",\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 16\n        }\n      });\n    };\n\n    _this2.onSelectedProductUpdate = function (index, selectedValue) {\n      var _this2$state7 = _this2.state,\n          products = _this2$state7.products,\n          isMounted = _this2$state7.isMounted,\n          discount = _this2$state7.discount,\n          SelectedProducts = _this2$state7.SelectedProducts,\n          SelectedCategory = _this2$state7.SelectedCategory,\n          SelectedPrices = _this2$state7.SelectedPrices,\n          SelectedIds = _this2$state7.SelectedIds,\n          SelectedHaveQty = _this2$state7.SelectedHaveQty;\n      var category = SelectedCategory[index];\n\n      if (isMounted && selectedValue !== _this2.notSelected && typeof selectedValue != \"undefined\" && selectedValue !== SelectedProducts[index] && typeof category != 'undefined') {\n        SelectedProducts[index] = selectedValue;\n        SelectedPrices[index] = products[category][selectedValue].price;\n        SelectedIds[index] = products[category][selectedValue].id;\n        SelectedHaveQty[index] = products[category][selectedValue].qty;\n\n        var subTotal = _this2.computeSubtotal();\n\n        var total = subTotal - discount;\n\n        _this2.setState({\n          SelectedProducts,\n          SelectedIds,\n          SelectedPrices,\n          SelectedHaveQty,\n          subTotal,\n          total\n        });\n      }\n    };\n\n    _this2.quantityComponent = function (id) {\n      var _this2$state8 = _this2.state,\n          SelectedQty = _this2$state8.SelectedQty,\n          SelectedProducts = _this2$state8.SelectedProducts,\n          SelectedCategory = _this2$state8.SelectedCategory,\n          SelectedPrices = _this2$state8.SelectedPrices,\n          products = _this2$state8.products,\n          subTotal = _this2$state8.subTotal,\n          total = _this2$state8.total,\n          discount = _this2$state8.discount,\n          SelectedHaveQty = _this2$state8.SelectedHaveQty;\n      var index = id - 1;\n      return /*#__PURE__*/React.createElement(MDBInput, {\n        style: {\n          marginTop: \"-1.5rem\"\n        },\n        label: \"Quantity\",\n        group: true,\n        type: \"number\",\n        value: SelectedQty[index],\n        validate: true,\n        onChange: function onChange(event) {\n          var product = SelectedProducts[index];\n          var category = SelectedCategory[index];\n\n          if (event.target.value !== '' && typeof products[category] != \"undefined\" && typeof products[category][product] != 'undefined') {\n            var quantity = parseInt(event.target.value);\n            if (quantity > SelectedHaveQty[index]) quantity = SelectedHaveQty[index];\n            SelectedPrices[index] = products[category][product].price * quantity;\n            SelectedQty[index] = quantity;\n            subTotal = _this2.computeSubtotal();\n            total = subTotal - discount;\n\n            _this2.setState({\n              SelectedPrices,\n              SelectedQty,\n              subTotal,\n              total\n            });\n          }\n        },\n        name: \"productName\",\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this2.onDelete = function (id) {\n      var index = id - 1;\n      var _this2$state9 = _this2.state,\n          SelectedProducts = _this2$state9.SelectedProducts,\n          SelectedCategory = _this2$state9.SelectedCategory,\n          SelectedIds = _this2$state9.SelectedIds,\n          SelectedQty = _this2$state9.SelectedQty,\n          SelectedPrices = _this2$state9.SelectedPrices,\n          rowCount = _this2$state9.rowCount,\n          subTotal = _this2$state9.subTotal,\n          discount = _this2$state9.discount,\n          total = _this2$state9.total;\n      var price = SelectedPrices[index];\n      SelectedPrices = SelectedPrices.filter(function (v, i) {\n        return i !== index;\n      });\n      SelectedQty = SelectedQty.filter(function (v, i) {\n        return i !== index;\n      });\n      SelectedIds = SelectedIds.filter(function (v, i) {\n        return i !== index;\n      });\n      SelectedCategory = SelectedCategory.filter(function (v, i) {\n        return i !== index;\n      });\n      SelectedProducts = SelectedProducts.filter(function (v, i) {\n        return i !== index;\n      });\n      subTotal -= price;\n      total = subTotal - discount;\n\n      _this2.setState({\n        SelectedProducts,\n        SelectedCategory,\n        SelectedIds,\n        SelectedQty,\n        SelectedPrices,\n        rowCount: rowCount - 1,\n        subTotal: subTotal,\n        total: total\n      });\n    };\n\n    _this2.computeSubtotal = function () {\n      return _this2.state.SelectedPrices.reduce(function (val, newVal) {\n        return val + newVal;\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(SalePage, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          rowCount = _this$state.rowCount,\n          SelectedPrices = _this$state.SelectedPrices,\n          subTotal = _this$state.subTotal,\n          total = _this$state.total,\n          discount = _this$state.discount,\n          SelectedHaveQty = _this$state.SelectedHaveQty;\n      return /*#__PURE__*/React.createElement(MDBContainer, {\n        style: {\n          paddingTop: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MDBRow, {\n        className: \"d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        size: \"12\",\n        xl: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MDBCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(MDBCardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(MDBCardHeader, {\n        className: \"form-header blue-gradient rounded\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"my-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(MDBIcon, {\n        icon: \"dollar-sign\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 41\n        }\n      }), \" Sale\")), /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"grey-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Customer Name\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            customerName: event.target.value\n          });\n        },\n        name: \"productName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Customer Cnic\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            customerCNIC: event.target.value\n          });\n        },\n        name: \"productName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Customer Phone\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            customerPhone: event.target.value\n          });\n        },\n        name: \"productName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Customer Address\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            customerAddress: event.target.value\n          });\n        },\n        name: \"productName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"2\",\n        className: \"mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBDatePicker, {\n        getValue: function getValue(value) {\n          return _this3.setState({\n            date: \"\".concat(value.getDate(), \"-\").concat(value.getMonth(), \"-\").concat(value.getYear() + 1900)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"4\",\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBTimePicker, {\n        getValue: function getValue(value) {\n          return _this3.setState({\n            time: value\n          });\n        },\n        id: \"Time\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBBtn, {\n        color: \"red\",\n        onClick: function onClick() {\n          return _this3.onAdd();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 49\n        }\n      }, \"Add\"))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBTable, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(MDBTableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 61\n        }\n      }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 61\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 61\n        }\n      }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 61\n        }\n      }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 61\n        }\n      }, \"HaveQty\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 61\n        }\n      }, \"Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 61\n        }\n      }, \"Price\"))), /*#__PURE__*/React.createElement(MDBTableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 53\n        }\n      }, lodash.range(1, rowCount + 1).map(function (id) {\n        return /*#__PURE__*/React.createElement(Row, {\n          key: id,\n          id: id,\n          categoryComponent: _this3.categoryComponent,\n          productComponent: _this3.productComponent,\n          price: SelectedPrices[id - 1],\n          onDelete: _this3.onDelete,\n          quantity: _this3.quantityComponent,\n          haveQty: SelectedHaveQty[id - 1],\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 61\n          }\n        });\n      }))))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Subtotal \",\n        value: subTotal,\n        disabled: true,\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Discount \",\n        value: discount,\n        type: \"number\",\n        onChange: function onChange(val) {\n          var disc = 0;\n\n          if (val.target.value !== '') {\n            disc = parseInt(val.target.value);\n          }\n\n          var subTotal = _this3.computeSubtotal();\n\n          var total = subTotal - disc;\n\n          _this3.setState({\n            discount: disc,\n            subTotal,\n            total\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        label: \"Total \",\n        value: total,\n        disabled: true,\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 49\n        }\n      }))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDBBtn, {\n        onClick: this.onEnter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 49\n        }\n      }, \" Enter Bill \")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 37\n        }\n      })))))));\n    }\n  }]);\n\n  return SalePage;\n}(Component);\n\nexport default SalePage;","map":{"version":3,"sources":["/home/hishsmtariq/ReactJsProjects/spare_part/src/spare_parts_components/pages/sale.jsx"],"names":["React","Component","lodash","SelectSearch","MDBBtn","MDBCard","MDBCardBody","MDBCardHeader","MDBCol","MDBContainer","MDBIcon","MDBInput","MDBRow","MDBTable","MDBTableBody","MDBTableHead","MDBDatePicker","MDBTimePicker","MDBBadge","axios","Row","id","categoryComponent","productComponent","quantity","price","onDelete","haveQty","cursor","paddingTop","textAlign","SalePage","notSelected","validateData","state","SelectedProducts","SelectedCategory","console","log","findIndex","value","onEnter","isMounted","customerName","customerAddress","customerPhone","customerCNIC","date","time","rowCount","Items","SelectedPrices","SelectedQty","SelectedIds","SelectedHaveQty","subTotal","discount","total","categories","products","componentDidMount","post","then","response","data","map","category","newCategory","name","Category_Name","product","Product_Name","Product_Retail_Price","Product_Quantity","newProduct","parseInt","qty","hasOwnProperty","setState","onAdd","prices","ids","index","selectedValue","onSelectedCategoryUpdate","computeSubtotal","options","val","onSelectedProductUpdate","quantityComponent","marginTop","event","target","filter","v","i","reduce","newVal","getDate","getMonth","getYear","range","disc"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport lodash from \"lodash\"\nimport SelectSearch from 'react-select-search';\nimport \"./sale.css\"\n\nimport {\n    MDBBtn,\n    MDBCard,\n    MDBCardBody,\n    MDBCardHeader,\n    MDBCol,\n    MDBContainer,\n    MDBIcon,\n    MDBInput,\n    MDBRow,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n    MDBDatePicker,\n    MDBTimePicker,\n    MDBBadge\n} from \"mdbreact\";\nimport axios from \"axios\";\n\n\nconst Row = ({id, categoryComponent, productComponent, quantity, price, onDelete, haveQty}) => {\n    return (\n        <tr>\n            <td>{id}</td>\n            <td>\n                <MDBBadge color=\"red\">\n                    <MDBIcon style={{cursor:\"pointer\"}} onClick={() => onDelete(id)} icon=\"minus\" size=\"2x\" />\n                </MDBBadge>\n            </td>\n            <td>{categoryComponent(id)}</td>\n            <td>{productComponent(id)}</td>\n            <td style={{paddingTop:\"1.5rem\", textAlign:\"center\"}}>{haveQty}</td>\n            <td>{quantity(id)}</td>\n            <td>{price}</td>\n        </tr>\n    );\n}\n\n\nclass SalePage extends Component {\n    notSelected = \"Chose your option\";\n\n    validateData = () =>{\n        const {SelectedProducts, SelectedCategory} = this.state;\n        console.log(SelectedCategory.findIndex(value => {return value === this.notSelected}))\n        // if(SelectedCategory.findIndex(value => {return value === this.notSelected})) return false;\n        // return !SelectedProducts.findIndex(value => {return value === this.notSelected});\n\n    }\n\n    onEnter = async () =>{\n        console.log(\"I am in the onEnter function\");\n        // console.log(this.validateData())\n        // if (!this.validateData()) return;\n        // const {\n        //     SelectedIds,\n        //     SelectedPrices,\n        //     SelectedQty,\n        //     SelectedProducts,\n        //     rowCount,\n        //     subTotal,\n        //     discount,\n        //     total,\n        //     customerName,\n        //     date,\n        //     time,\n        //     customerAddress,\n        //     customerPhone,\n        //     customerCNIC\n        // } = this.state;\n        //\n        //\n        //\n        // //    Data Format\n        // // {\n        // //  sno: index\n        // //  dec: Product Name,\n        // //  qty: 1 (Quantity)\n        // //  rate: Price\n        // // }\n        // let items = lodash.range(rowCount).map(index => {\n        //     const qty = SelectedQty[index];\n        //     return {\n        //         sno: index, // Row No.\n        //         desc: SelectedProducts[index], // Product Name\n        //         qty: qty, // Product Quantity\n        //         rate: SelectedPrices[index] / qty, // Product 1 Qty Price\n        //         Product_id: SelectedIds[index], // Product ID\n        //     }\n        // })\n        // const data = {\n        //     subTotal: subTotal,\n        //     discount: discount,\n        //     total: total,\n        //     items: items,\n        //     itemsLength: items.length,\n        //     customerName: customerName,\n        //     date: date,\n        //     time: time,\n        //     Customer_Address: customerCNIC,\n        //     Customer_Phone: customerPhone,\n        //     Customer_CNIC: customerCNIC,\n        // };\n        // console.log(data);\n        // this.props.history.push({\n        //     pathname: \"/invoice\",\n        //     data: data\n        // })\n\n    }\n\n    state = {\n        isMounted: false,\n        customerName: \"\",\n        customerAddress: \"\",\n        customerPhone:\"\",\n        customerCNIC:\"\",\n        date: \"\",\n        time: \"\",\n        rowCount: 1,\n        Items: this.onEnter,\n        SelectedCategory:[this.notSelected],\n        SelectedProducts:[this.notSelected],\n        SelectedPrices:[0],\n        SelectedQty:[1],\n        SelectedIds:[\"\"],\n        SelectedHaveQty:[0],\n        subTotal: 0,\n        discount: 0,\n        total: 0,\n        categories: [\n            // {\n            //     text: \"Category Name\",\n            //     value: \"Category Value\"\n            // },\n        ],\n        products: {\n            // Data Format\n            // Category_Name: {\n            //     Product_Name: {\n            //         text: \"Product Name\",\n            //         value: \"Product Value\"\n            //         price: \"Product Price\"\n            //         id: Product_id,\n            //         qty: Product_Quantity,\n            //     },\n            // },\n        },\n    };\n\n    componentDidMount = async () => {\n        let {categories, products} = this.state;\n        await axios\n            .post(\"http://localhost/spare_parts/show_category.php\")\n            .then((response) => {\n                    response.data.map((category) => {\n                        const newCategory = {name: category.Category_Name, value: category.Category_Name};\n                        categories = [...categories, newCategory];\n                    });\n                }\n            );\n        await axios\n            .post(\"http://localhost/spare_parts/allproducts.php\")\n            .then((response) => {\n                    response.data.map((product) => {\n\n                        const {Product_Name, Category_Name, Product_Retail_Price,id, Product_Quantity } = product;\n                        const newProduct = {}\n                        newProduct[Product_Name] = {\n                            name: Product_Name,\n                            value: Product_Name,\n                            price: parseInt(Product_Retail_Price),\n                            id:id,\n                            qty: Product_Quantity,\n\n                        };\n                        if (!products.hasOwnProperty(product.Category_Name))\n                            products[Category_Name] = newProduct;\n                        else\n                            products[Category_Name][Product_Name] = newProduct[Product_Name];\n                    });\n                }\n            );\n        this.setState({products, categories});\n        this.setState({isMounted: true});\n    };\n    onAdd = () => {\n        const {\n            rowCount,\n            SelectedCategory,\n            SelectedProducts,\n            SelectedPrices,\n            SelectedQty,\n            SelectedIds,\n            SelectedHaveQty\n        } = this.state;\n        const categories = [...SelectedCategory, this.notSelected];\n        const products = [...SelectedProducts, this.notSelected];\n        const prices = [...SelectedPrices, 0];\n        const ids = [...SelectedIds, \"None\"];\n        const qty = [...SelectedQty, 1];\n        const haveQty = [...SelectedHaveQty, 0];\n        this.setState({\n            rowCount: rowCount + 1,\n            SelectedCategory: categories,\n            SelectedProducts: products,\n            SelectedPrices: prices,\n            SelectedHaveQty: haveQty,\n            SelectedQty: qty,\n            SelectedIds: ids,\n        });\n    };\n\n    categoryComponent = (id) => {\n        const {categories, SelectedCategory} = this.state;\n        const index = id - 1;\n        return (\n            <SelectSearch options={categories} search={true} onChange={selectedValue => this.onSelectedCategoryUpdate(index, selectedValue)} value={SelectedCategory[index]} name=\"Categories\" placeholder=\"Choose your Option\" />\n        );\n    };\n\n    onSelectedCategoryUpdate = (index, selectedValue) => {\n        let {\n            isMounted,\n            discount,\n            SelectedCategory,\n        } = this.state;\n\n        if ( isMounted\n            && typeof selectedValue != \"undefined\"\n            && selectedValue !== SelectedCategory[index]\n        ) {\n            SelectedCategory[index] = selectedValue;\n            const subTotal = this.computeSubtotal();\n            const total = subTotal - discount;\n            this.setState({SelectedCategory, subTotal, total});\n        }\n    };\n\n    productComponent = (id) => {\n        const {\n            products,\n            SelectedProducts,\n            SelectedCategory\n        } = this.state;\n\n        const index = id - 1;\n        let options;\n        if (products[SelectedCategory[index]]) {\n            options = lodash.map(products[SelectedCategory[index]], function (val) {\n                return val;\n            })\n        }\n        else options = [];\n        return <SelectSearch options={options} search={true} onChange={selectedValue => this.onSelectedProductUpdate(index, selectedValue)} value={SelectedProducts[index]} name=\"Products\" placeholder=\"Choose your Option\" />\n    };\n    onSelectedProductUpdate = (index, selectedValue) => {\n        let {\n            products,\n            isMounted,\n            discount,\n            SelectedProducts,\n            SelectedCategory,\n            SelectedPrices,\n            SelectedIds,\n            SelectedHaveQty\n        } = this.state;\n        const category = SelectedCategory[index];\n\n        if (isMounted\n            && selectedValue !== this.notSelected\n            && typeof selectedValue != \"undefined\"\n            && selectedValue !== SelectedProducts[index]\n            && typeof category != 'undefined'\n        ) {\n            SelectedProducts[index] = selectedValue;\n            SelectedPrices[index] = products[category][selectedValue].price;\n            SelectedIds[index] = products[category][selectedValue].id;\n            SelectedHaveQty[index] = products[category][selectedValue].qty;\n            const subTotal = this.computeSubtotal()\n            const total = subTotal - discount;\n            this.setState({SelectedProducts, SelectedIds, SelectedPrices, SelectedHaveQty, subTotal, total});\n        }\n    };\n\n    quantityComponent = (id) =>{\n        let {\n            SelectedQty,\n            SelectedProducts,\n            SelectedCategory,\n            SelectedPrices,\n            products,\n            subTotal,\n            total,\n            discount,\n            SelectedHaveQty,\n        } = this.state;\n        const index = id - 1 ;\n\n        return(\n            <MDBInput\n                style={{marginTop:\"-1.5rem\"}}\n                label=\"Quantity\"\n                group\n                type=\"number\"\n                value={SelectedQty[index]}\n                validate\n                onChange={(event) => {\n\n                    const product = SelectedProducts[index];\n                    const category = SelectedCategory[index];\n\n                    if(event.target.value !== '' &&\n                        typeof products[category] != \"undefined\" &&\n                        typeof products[category][product] != 'undefined'\n                    ){\n                        let quantity = parseInt(event.target.value);\n                        if (quantity > SelectedHaveQty[index]) quantity = SelectedHaveQty[index];\n                        SelectedPrices[index] = products[category][product].price * quantity\n                        SelectedQty[index] = quantity;\n                        subTotal = this.computeSubtotal();\n                        total = subTotal - discount;\n                        this.setState({SelectedPrices, SelectedQty, subTotal, total});\n                    }\n\n                }}\n                name=\"productName\"\n            />\n        )\n    };\n\n    onDelete = (id) => {\n        const index = id - 1;\n\n        let {\n            SelectedProducts,\n            SelectedCategory,\n            SelectedIds,\n            SelectedQty,\n            SelectedPrices,\n            rowCount,\n            subTotal,\n            discount,\n            total,\n        } = this.state;\n        const price = SelectedPrices[index];\n        SelectedPrices = SelectedPrices.filter((v, i) => i !== index);\n        SelectedQty = SelectedQty.filter((v, i) => i !== index);\n        SelectedIds = SelectedIds.filter((v, i) => i !== index);\n        SelectedCategory = SelectedCategory.filter((v, i) => i !== index);\n        SelectedProducts = SelectedProducts.filter((v, i) => i !== index);\n        subTotal -= price\n        total = subTotal - discount;\n        this.setState({\n            SelectedProducts,\n            SelectedCategory,\n            SelectedIds,\n            SelectedQty,\n            SelectedPrices,\n            rowCount: rowCount - 1,\n            subTotal: subTotal,\n            total: total,\n        })\n    }\n\n\n    computeSubtotal = () => {\n        return this.state.SelectedPrices.reduce((val, newVal) => val + newVal)\n    }\n\n    render() {\n        const {rowCount, SelectedPrices, subTotal, total, discount, SelectedHaveQty} = this.state;\n        return (\n            <MDBContainer style={{paddingTop: 50}}>\n                <MDBRow className=\"d-flex justify-content-center\">\n                    <MDBCol size=\"12\" xl=\"12\">\n                        <MDBCard>\n                            <MDBCardBody>\n                                <MDBCardHeader className=\"form-header blue-gradient rounded\">\n                                    <h3 className=\"my-3\">\n                                        <MDBIcon icon=\"dollar-sign\"/> Sale\n                                    </h3>\n                                </MDBCardHeader>\n                                <form>\n                                    <div className=\"grey-text\">\n                                        {/*---------- Row 1 ----------*/}\n                                        <MDBRow>\n                                            <MDBCol sm=\"3\" className=\"mb-3\">\n                                                <MDBInput\n                                                    label=\"Customer Name\"\n                                                    group\n                                                    type=\"text\"\n                                                    validate\n                                                    onChange={(event) =>\n                                                        this.setState({customerName: event.target.value})\n                                                    }\n                                                    name=\"productName\"\n                                                />\n                                            </MDBCol>\n                                            <MDBCol sm=\"3\" className=\"mb-3\">\n                                                <MDBInput\n                                                    label=\"Customer Cnic\"\n                                                    group\n                                                    type=\"text\"\n                                                    validate\n                                                    onChange={(event) =>\n                                                        this.setState({customerCNIC: event.target.value})\n                                                    }\n                                                    name=\"productName\"\n                                                />\n                                            </MDBCol>\n                                            <MDBCol sm=\"3\" className=\"mb-3\">\n                                                <MDBInput\n                                                    label=\"Customer Phone\"\n                                                    group\n                                                    type=\"text\"\n                                                    validate\n                                                    onChange={(event) =>\n                                                        this.setState({customerPhone: event.target.value})\n                                                    }\n                                                    name=\"productName\"\n                                                />\n                                            </MDBCol>\n                                            <MDBCol sm=\"3\" className=\"mb-3\">\n                                                <MDBInput\n                                                    label=\"Customer Address\"\n                                                    group\n                                                    type=\"text\"\n                                                    validate\n                                                    onChange={(event) =>\n                                                        this.setState({customerAddress: event.target.value})\n                                                    }\n                                                    name=\"productName\"\n                                                />\n                                            </MDBCol>\n                                            {/*<MDBCol sm=\"1\" className=\"mb-3\"/>*/}\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol sm=\"2\" className=\"mt-2\">\n                                                <MDBDatePicker  getValue={value => this.setState(\n                                                    {date: `${value.getDate()}-${value.getMonth()}-${value.getYear()+1900}`}\n                                                )} />\n                                            </MDBCol>\n                                            {/*<MDBCol sm=\"1\"/>*/}\n                                            <MDBCol sm=\"4\" className=\"mb-3\">\n                                                <MDBTimePicker  getValue={value => this.setState({time: value})}  id={\"Time\"}/>\n                                            </MDBCol>\n                                            <MDBCol sm=\"3\">\n                                                <MDBBtn color=\"red\" onClick={() => this.onAdd()}>\n                                                    Add\n                                                </MDBBtn>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol>\n                                                <MDBTable>\n                                                    <MDBTableHead>\n                                                        <tr>\n                                                            <th>#</th>\n                                                            <th/>\n                                                            <th>Category</th>\n                                                            <th>Product</th>\n                                                            <th>HaveQty</th>\n                                                            <th>Qty</th>\n                                                            <th>Price</th>\n                                                        </tr>\n                                                    </MDBTableHead>\n                                                    <MDBTableBody>\n                                                        {lodash.range(1, rowCount + 1).map((id) =>\n                                                            <Row key={id}\n                                                                 id={id}\n                                                                 categoryComponent={this.categoryComponent}\n                                                                 productComponent={this.productComponent}\n                                                                 price={SelectedPrices[id - 1]}\n                                                                 onDelete={this.onDelete}\n                                                                 quantity={this.quantityComponent}\n                                                                 haveQty={SelectedHaveQty[id - 1]}\n                                                            />\n                                                        )\n                                                        }\n                                                    </MDBTableBody>\n                                                </MDBTable>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol sm=\"3\">\n                                                <MDBInput label=\"Subtotal \" value={subTotal} disabled type=\"number\" />\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol sm=\"3\">\n                                                <MDBInput label=\"Discount \" value={discount} type=\"number\"  onChange={val => {\n                                                    let disc = 0\n                                                    if (val.target.value !== '') {\n                                                        disc = parseInt(val.target.value);\n                                                    }\n                                                    const subTotal = this.computeSubtotal();\n                                                    const total = subTotal - disc;\n                                                    this.setState({discount: disc, subTotal, total})\n                                                }}/>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol sm=\"3\">\n                                                <MDBInput label=\"Total \" value={total} disabled type=\"number\" />\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBCol sm=\"3\">\n                                                <MDBBtn onClick={this.onEnter}> Enter Bill </MDBBtn>\n                                            </MDBCol>\n                                        </MDBRow>\n                                    </div>\n                                    <div className=\"text-center mt-4\"/>\n                                </form>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        );\n    }\n}\n\nexport default SalePage;"]},"metadata":{},"sourceType":"module"}