{"ast":null,"code":"import _regeneratorRuntime from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/hishsmtariq/ReactJsProjects/spare_part/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/hishsmtariq/ReactJsProjects/spare_part/src/spare_parts_components/all_product.jsx\";\nimport React, { Component } from \"react\";\nimport { MDBDataTable, MDBBtn, MDBInput, MDBRow, MDBContainer, MDBCol } from 'mdbreact';\nimport \"./all_product.css\";\nimport axios from \"axios\";\n\nvar AllProducts = /*#__PURE__*/function (_Component) {\n  _inherits(AllProducts, _Component);\n\n  var _super = _createSuper(AllProducts);\n\n  function AllProducts() {\n    var _this;\n\n    _classCallCheck(this, AllProducts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.quantityComponent = function (index) {\n      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var rows = _this.state.data.rows;\n      var quantity = rows.length > 0 ? rows[index].Product_Quantity : parseInt(value);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"md-form\",\n        style: {\n          margin: 0\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        // style={{width:\"150px\"}}\n        type: \"number\",\n        id: index + 1,\n        onChange: function onChange(event) {\n          return _this.onQuantityChange(index, event.target.value);\n        },\n        min: 0,\n        value: quantity,\n        className: \"form-control\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    _this.onQuantityChange = function (index, value) {\n      var quantity = 0;\n      if (value !== \"\") quantity = parseInt(value);\n      var _this$state = _this.state,\n          data = _this$state.data,\n          grossProfit = _this$state.grossProfit;\n      grossProfit -= data.rows[index].Profit;\n      data.rows[index].Product_Quantity = quantity;\n      var _data$rows$index = data.rows[index],\n          Product_Retail_Price = _data$rows$index.Product_Retail_Price,\n          Product_PurchasePrice = _data$rows$index.Product_PurchasePrice;\n      data.rows[index].Profit = (Product_Retail_Price - Product_PurchasePrice) * quantity;\n      grossProfit += data.rows[index].Profit;\n\n      _this.setState({\n        data,\n        grossProfit\n      });\n    };\n\n    _this.state = {\n      data: {\n        columns: [{\n          label: 'Name',\n          field: 'Product_Name',\n          sort: 'asc',\n          width: 150\n        }, {\n          label: 'C.Name',\n          field: 'Category_Name',\n          sort: 'asc',\n          width: 270\n        }, {\n          label: 'P.Brand',\n          field: 'Product_Brand',\n          sort: 'asc',\n          width: 200\n        }, {\n          label: 'P.Code',\n          field: 'Product_Code',\n          sort: 'asc',\n          width: 100\n        }, {\n          label: 'Qty',\n          field: 'qty',\n          sort: 'asc',\n          width: 150\n        }, {\n          label: 'R.Price',\n          field: 'Product_Retail_Price',\n          sort: 'asc',\n          width: 350\n        }, {\n          label: 'Profit',\n          field: 'Profit',\n          sort: 'asc',\n          width: 350\n        }],\n        rows: []\n      },\n      grossProfit: 0\n    };\n    _this.componentDidMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _this$state2, data, grossProfit, rows;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state2 = _this.state, data = _this$state2.data, grossProfit = _this$state2.grossProfit;\n              rows = data.rows;\n              _context.next = 4;\n              return axios.post(\"http://localhost/spare_parts/allproducts.php\").then(function (response) {\n                response.data.map(function (product, index) {\n                  var Product_Retail_Price = product.Product_Retail_Price,\n                      Product_PurchasePrice = product.Product_PurchasePrice,\n                      Product_Quantity = product.Product_Quantity;\n                  product[\"qty\"] = _this.quantityComponent(index, product.Product_Quantity);\n                  product[\"Profit\"] = (Product_Retail_Price - Product_PurchasePrice) * Product_Quantity;\n                  grossProfit += product[\"Profit\"];\n                  rows = [].concat(_toConsumableArray(rows), [product]);\n                });\n              });\n\n            case 4:\n              data.rows = rows;\n\n              _this.setState({\n                data,\n                grossProfit\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.onSave = function () {\n      var products = _this.state.data.rows.map(function (value) {\n        delete value.qty;\n        return value;\n      });\n\n      var data = {\n        items: products\n      };\n      console.log(data);\n      axios.post(\"http://localhost/spare_parts/update_product.php\", data).then(function (value) {\n        return console.log(value);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AllProducts, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var grossProfit = this.state.grossProfit;\n      var _this$state$data = this.state.data,\n          columns = _this$state$data.columns,\n          rows = _this$state$data.rows;\n      if (rows.length > 0) rows.map(function (value, index) {\n        rows[index].qty = _this2.quantityComponent(index); // rows[index].Product_PurchasePrice;\n        // rows[index].Product_Retail_Price;\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(MDBDataTable // className=\"form-header blue-gradient rounded\"\n      , {\n        theadColor: \"blue-gradient\",\n        striped: true,\n        barReverse: true,\n        theadTextWhite: true,\n        hover: true,\n        noBottomColumns: true,\n        data: {\n          columns,\n          rows\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(MDBContainer, {\n        style: {\n          paddingTop: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MDBRow, {\n        className: \"d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(MDBCol, {\n        sm: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(MDBBtn, {\n        color: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 33\n        }\n      }, \"Save\")), /*#__PURE__*/React.createElement(MDBCol, {\n        sm: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: \"20px\",\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 33\n        }\n      }, \"Gross Profit: \"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"inline-block\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        style: {\n          color: \"#00C851\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 37\n        }\n      }, \"Rs.\".concat(grossProfit)))))));\n    }\n  }]);\n\n  return AllProducts;\n}(Component);\n\nexport default AllProducts;","map":{"version":3,"sources":["/home/hishsmtariq/ReactJsProjects/spare_part/src/spare_parts_components/all_product.jsx"],"names":["React","Component","MDBDataTable","MDBBtn","MDBInput","MDBRow","MDBContainer","MDBCol","axios","AllProducts","quantityComponent","index","value","rows","state","data","quantity","length","Product_Quantity","parseInt","margin","event","onQuantityChange","target","grossProfit","Profit","Product_Retail_Price","Product_PurchasePrice","setState","columns","label","field","sort","width","componentDidMount","post","then","response","map","product","onSave","products","qty","items","console","log","paddingTop","fontSize","fontWeight","display","color"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {MDBDataTable, MDBBtn, MDBInput, MDBRow, MDBContainer, MDBCol} from 'mdbreact';\nimport \"./all_product.css\"\nimport axios from \"axios\";\n\nclass AllProducts extends Component {\n\n\n\n    quantityComponent = (index, value = null) =>{\n        const {rows} = this.state.data;\n        const quantity = rows.length > 0 ? rows[index].Product_Quantity : parseInt(value);\n        return (\n            <div className=\"md-form\" style={{margin: 0}}>\n                <input\n                    // style={{width:\"150px\"}}\n                    type=\"number\"\n                    id={index + 1}\n                    onChange={event => this.onQuantityChange(index, event.target.value)}\n                    min={0}\n                    value={quantity}\n                    className=\"form-control\"\n                />\n            </div>\n        );\n    }\n\n    onQuantityChange = (index, value) => {\n        let quantity = 0;\n        if (value !== \"\") quantity = parseInt(value);\n        let { data, grossProfit } = this.state;\n        grossProfit -= data.rows[index].Profit;\n        data.rows[index].Product_Quantity = quantity;\n        const {\n            Product_Retail_Price,\n            Product_PurchasePrice,\n        } = data.rows[index];\n        data.rows[index].Profit = (Product_Retail_Price - Product_PurchasePrice) * quantity;\n        grossProfit += data.rows[index].Profit;\n        this.setState({data, grossProfit})\n    }\n\n    state = {\n        data: {\n            columns: [\n                {\n                    label: 'Name',\n                    field: 'Product_Name',\n                    sort: 'asc',\n                    width: 150\n                },\n                {\n                    label: 'C.Name',\n                    field: 'Category_Name',\n                    sort: 'asc',\n                    width: 270\n                },\n                {\n                    label: 'P.Brand',\n                    field: 'Product_Brand',\n                    sort: 'asc',\n                    width: 200\n                },\n                {\n                    label: 'P.Code',\n                    field: 'Product_Code',\n                    sort: 'asc',\n                    width: 100\n                },\n                {\n                    label: 'Qty',\n                    field: 'qty',\n                    sort: 'asc',\n                    width: 150\n                },\n                {\n                    label: 'R.Price',\n                    field: 'Product_Retail_Price',\n                    sort: 'asc',\n                    width: 350\n                },\n                {\n                    label: 'Profit',\n                    field: 'Profit',\n                    sort: 'asc',\n                    width: 350\n                },\n            ],\n            rows: []\n        },\n        grossProfit: 0\n    };\n\n    componentDidMount = async () => {\n        let {data, grossProfit} = this.state;\n        let rows = data.rows;\n        await axios\n            .post(\"http://localhost/spare_parts/allproducts.php\")\n            .then((response) => {\n                    response.data.map((product, index) => {\n                        const {\n                            Product_Retail_Price,\n                            Product_PurchasePrice,\n                            Product_Quantity\n                        } = product;\n                        product[\"qty\"] = this.quantityComponent(index, product.Product_Quantity);\n                        product[\"Profit\"] = (Product_Retail_Price - Product_PurchasePrice) * Product_Quantity;\n                        grossProfit += product[\"Profit\"];\n                        rows = [...rows, product];\n                    });\n                }\n            );\n        data.rows = rows;\n        this.setState({ data, grossProfit });\n    };\n\n    onSave = () =>{\n        const products = this.state.data.rows.map(value => {\n            delete value.qty;\n            return value;\n        })\n\n        const data = {\n            items: products,\n        }\n\n        console.log(data);\n        axios.post(\"http://localhost/spare_parts/update_product.php\", data)\n            .then(value => console.log(value));\n    }\n\n    render() {\n        const { grossProfit } = this.state;\n        let { columns, rows } = this.state.data;\n        if (rows.length > 0)\n            rows.map((value, index) => {\n                rows[index].qty = this.quantityComponent(index);\n                // rows[index].Product_PurchasePrice;\n                // rows[index].Product_Retail_Price;\n            })\n        return (\n                <div>\n                    <MDBDataTable\n                        // className=\"form-header blue-gradient rounded\"\n                        theadColor={\"blue-gradient\"}\n                        striped\n                        barReverse={true}\n                        theadTextWhite={true}\n                        hover\n                        noBottomColumns={true}\n                        data={{columns,rows}}\n                    />\n                    <MDBContainer style={{paddingTop: 50}}>\n                        <MDBRow className=\"d-flex justify-content-center\">\n                            <MDBCol sm={8}>\n                                <MDBBtn color={\"success\"} >Save</MDBBtn>\n                            </MDBCol>\n                            <MDBCol sm={4}>\n                                <span style={{fontSize:\"20px\", fontWeight:\"bold\"}}>Gross Profit: </span>\n                                <div style={{display:\"inline-block\"}}>\n                                    <h4 style={{color:\"#00C851\"}}>{ `Rs.${grossProfit}` }</h4>\n                                </div>\n                            </MDBCol>\n                        </MDBRow>\n                    </MDBContainer>\n                </div>\n        );\n    }\n}\n\nexport default AllProducts;"]},"metadata":{},"sourceType":"module"}