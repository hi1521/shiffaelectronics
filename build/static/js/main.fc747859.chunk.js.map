{"version":3,"sources":["logo.png","components/SideNavigation.js","components/TopNavigation.js","components/Footer.js","spare_parts_components/utils/get_current_date.js","spare_parts_components/forms/insert_product_form.jsx","spare_parts_components/insert_product.jsx","spare_parts_components/forms/insert_category_form.jsx","spare_parts_components/insert_category.jsx","spare_parts_components/all_product.jsx","spare_parts_components/Expanses/add_expanses.jsx","spare_parts_components/Expanses/all_expanses.jsx","components/Routes.js","components/RoutesWithNavigation.js","spare_parts_components/pages/login.jsx","spare_parts_components/pages/sale.jsx","spare_parts_components/pages/billInvoice/invoiceTitle.jsx","spare_parts_components/pages/billInvoice/BillTo.jsx","spare_parts_components/pages/billInvoice/InvoiceNo.jsx","spare_parts_components/pages/billInvoice/InvoiceTableHeader.jsx","spare_parts_components/pages/billInvoice/InvoiceTableRow.jsx","spare_parts_components/pages/billInvoice/InvoiceTableBlankSpace.jsx","spare_parts_components/pages/billInvoice/InvoiceTableFooter.jsx","spare_parts_components/pages/billInvoice/InvoiceItemTable.jsx","spare_parts_components/pages/billInvoice/InvoiceThankYouMsg.jsx","spare_parts_components/pages/billInvoice/invoice.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","SideNavigation","to","text","onClick","this","props","onLinkClick","className","logo","bg","mask","fixed","breakWidth","triggerOpening","style","transition","role","type","placeholder","name","id","icon","rSNL","topLevel","React","Component","TopNavigation","state","collapse","bind","toggle","handleToggleClickA","setState","dropdownOpen","onSideNavToggleClick","navStyle","paddingLeft","light","expand","scrolling","zIndex","key","lineHeight","marginleft","verticalAlign","cursor","color","size","href","routeName","right","flexDirection","Copyrights","logout","onLogout","axios","post","then","value","backgroundColor","target","float","gradient","rounded","width","fontWeight","marginRight","marginTop","getCurrentDate","separator","newDate","Date","date","getDate","month","getMonth","year","getFullYear","hours","getHours","mintues","getMinutes","seconds","getSeconds","InsertProductForm","productName","categoryName","productBrand","productModel","productCode","productQuantity","productSize","productColor","productPurchasePrice","productRetailPrice","productDiscountPrice","productStatus","fileToUpload","categories","addCategory","category","newCategory","componentDidMount","response","data","map","Category_Name","onAdd","Product_Name","Product_Brand","Product_Model","Product_Code","Product_Quantity","Product_Size","Product_Color","Product_PurchasePrice","Product_Retail_Price","Product_Discounted_Price","Product_Status","Product_Purchase_Date","sm","label","group","validate","onChange","event","search","options","selected","getValue","val","files","require","InsertProduct","componentWillMount","status","history","push","onInsertProduct","product","console","log","InsertCategoryForm","onNameChange","onStatusChange","md","InsertCategory","onInsertCategory","Category_Status","AllProducts","quantityComponent","index","rows","quantity","length","parseInt","margin","onQuantityChange","min","grossProfit","Profit","columns","field","sort","a","onSave","items","qty","theadColor","striped","barReverse","theadTextWhite","hover","noBottomColumns","paddingTop","fontSize","display","AddExpanses","description","amount","onDescriptionChange","e","onAmountChange","_value","AllExpanses","fourtOFour","Routes","path","exact","component","App","handleResize","windowWidth","window","innerWidth","toggleSideNav","sideNavToggled","assessLocation","location","locationString","currentPage","prevProps","nextProps","snapshot","pathname","addEventListener","removeEventListener","dynamicLeftPadding","position","LoginPage","email","password","login","onLogin","JSON","stringify","pwd","containerClass","Row","categoryComponent","productComponent","price","onDelete","haveQty","textAlign","SalePage","notSelected","validateData","SelectedProducts","SelectedCategory","customerAddress","customerCNIC","customerName","customerPhone","findIndex","onEnter","SelectedIds","SelectedPrices","SelectedQty","rowCount","subTotal","discount","total","time","lodash","range","sno","desc","rate","Product_id","itemsLength","Customer_Address","Customer_Phone","Customer_CNIC","isMounted","Items","SelectedHaveQty","products","newProduct","hasOwnProperty","prices","ids","selectedValue","onSelectedCategoryUpdate","computeSubtotal","onSelectedProductUpdate","filter","v","i","reduce","newVal","xl","getYear","disabled","disc","InvoiceTitle","styles","StyleSheet","create","titleContainer","reportTitle","letterSpacing","textTransform","title","headerContainer","billTo","paddingBottom","fontFamily","BillTo","invoice","invoiceNoContainer","justifyContent","invoiceDateContainer","invoiceDate","fontStyle","InvoiceNo","invoice_no","container","borderBottomColor","borderBottomWidth","alignItems","height","flexGrow","borderRightColor","borderRightWidth","InvoiceTableHeader","row","paddingRight","InvoiceTableRow","item","toString","toFixed","InvoiceTableBlankSpace","rowsCount","Array","fill","x","InvoiceTableFooter","Number","parseFloat","InvoiceItemsTable","tableRowsCount","tableContainer","flexWrap","borderWidth","borderColor","InvoiceThankYouMsg","Invoice","invoiceData","balance","phone","address","page","marginLeft","src","RoutesWithNavigation","Boolean","hostname","match","customHistory","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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MAGF,IAAK,cACHA,EAAiB,cACjB,MACF,IAAK,cACHA,EAAiB,cACjB,MACF,IAAK,oBACHA,EAAiB,wBACjB,MAGF,IAAK,kBACHA,EAAiB,aACjB,MACF,IAAK,YACHA,EAAiB,cACjB,MACF,IAAK,iBACHA,EAAiB,sBACjB,MACF,IAAK,kBACHA,EAAiB,aACjB,MACF,IAAK,cACHA,EAAiB,SACjB,MACF,IAAK,eACHA,EAAiB,UACjB,MACF,IAAK,YACHA,EAAiB,OACjB,MACF,IAAK,aACHA,EAAiB,QACjB,MACF,IAAK,cACHA,EAAiB,SACjB,MACF,IAAK,aACHA,EAAiB,QACjB,MACF,IAAK,aACHA,EAAiB,QACjB,MACF,IAAK,aACHA,EAAiB,QACjB,MAGF,IAAK,sBACHA,EAAiB,UACjB,MACF,IAAK,oBACHA,EAAiB,QACjB,MACF,IAAK,mBACHA,EAAiB,aACjB,MACF,IAAK,qBACHA,EAAiB,SACjB,MACF,IAAK,uBACHA,EAAiB,gBACjB,MACF,IAAK,uBACHA,EAAiB,WACjB,MACF,IAAK,uBACHA,EAAiB,WACjB,MACF,IAAK,mBACHA,EAAiB,eACjB,MACF,IAAK,mBACHA,EAAiB,wBACjB,MACF,IAAK,mBACHA,EAAiB,cACjB,MACF,IAAK,mBACHA,EAAiB,cACjB,MACF,IAAK,sBACHA,EAAiB,UACjB,MACF,IAAK,yBACHA,EAAiB,aACjB,MACF,IAAK,uBACHA,EAAiB,WACjB,MAGF,IAAK,eACHA,EAAiB,SACjB,MACF,IAAK,oBACHA,EAAiB,aACjB,MACF,IAAK,kBACHA,EAAiB,QACjB,MAGF,IAAK,gBACHA,EAAiB,eACjB,MACF,IAAK,mBACHA,EAAiB,kBACjB,MACF,IAAK,oBACHA,EAAiB,YACjB,MAGF,IAAK,eACHA,EAAiB,cACjB,MACF,IAAK,aACHA,EAAiB,kBACjB,MACF,IAAK,eACHA,EAAiB,mBACjB,MAGF,IAAK,UACHA,EAAiB,SACjB,MACF,IAAK,UACHA,EAAiB,SACjB,MACF,IAAK,UACHA,EAAiB,SACjB,MACF,IAAK,YACHA,EAAiB,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","file":"static/js/main.fc747859.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.49218323.png\";","import React from \"react\";\nimport {\n  MDBSideNavLink,\n  MDBSideNavCat,\n  MDBSideNavNav,\n  MDBSideNav,\n  MDBIcon,\n} from \"mdbreact\";\n\nclass SideNavigation extends React.Component {\n  // render MDBSideNav Link\n  rSNL(to, text) {\n    return (\n      <MDBSideNavLink to={to} onClick={this.props.onLinkClick}>\n        {text}\n      </MDBSideNavLink>\n    );\n  }\n\n  render() {\n    const { onLinkClick } = this.props;\n    return (\n      <div className=\"white-skin\">\n        <MDBSideNav\n          logo=\"https://mdbootstrap.com/img/Marketing/general/logo/medium/mdb-react.png\"\n          bg=\"https://mdbootstrap.com/img/Photos/Others/sidenav4.jpg\"\n          mask=\"strong\"\n          fixed\n          breakWidth={this.props.breakWidth}\n          triggerOpening={this.props.triggerOpening}\n          style={{ transition: \"padding-left .3s\" }}\n        >\n          <form role=\"search\" className=\"search-form\">\n            <div className=\"form-group md-form mt-0 pt-1 ripple-parent\">\n              <input\n                type=\"text\"\n                placeholder=\"Search\"\n                className=\"form-control\"\n              />\n            </div>\n          </form>\n          <MDBSideNavNav>\n            <MDBSideNavCat name=\"Manage Stock\" id=\"dashboard-cat\" icon=\"boxes\">\n              {this.rSNL(\"/insertproduct\", \"Insert Product\")}\n              {this.rSNL(\"/insertcategory\", \"Insert category\")}\n              {this.rSNL(\"/allproducts\", \"All Products\")}\n            </MDBSideNavCat>\n\n            {/* <MDBSideNavCat name='Maps' id='maps-cat' icon='map'>\n              {this.rSNL('/maps/google', 'Google')}\n              {this.rSNL('/maps/full', 'Full screen map')}\n              {this.rSNL('/maps/vector', 'Vector world map')}\n            </MDBSideNavCat> */}\n            <MDBSideNavCat name=\"Expanses\" id=\"Expanses\" icon=\"money-bill-alt\">\n              {this.rSNL(\"/addexpanses\", \"Add Expanses\")}\n              {this.rSNL(\"/allexpanses\", \"All Expanses\")}\n            </MDBSideNavCat>\n\n            <MDBSideNavLink topLevel to=\"/expanses\" onClick={onLinkClick}>\n              <MDBIcon icon=\"bell mr-2\" />\n              Expanses\n            </MDBSideNavLink>\n\n            <MDBSideNavLink topLevel to=\"/modals\" onClick={onLinkClick}>\n              <MDBIcon icon=\"bolt mr-2\" />\n              Modals\n            </MDBSideNavLink>\n\n            <MDBSideNavLink topLevel to=\"/charts\" onClick={onLinkClick}>\n              <MDBIcon icon=\"chart-pie mr-2\" />\n              Charts\n            </MDBSideNavLink>\n\n            <MDBSideNavLink topLevel to=\"/calendar\" onClick={onLinkClick}>\n              <MDBIcon icon=\"calendar-check mr-2\" />\n              Calendar\n            </MDBSideNavLink>\n\n            <MDBSideNavLink topLevel to=\"/sections\" onClick={onLinkClick}>\n              <MDBIcon icon=\"th-large mr-2\" />\n              Sections\n            </MDBSideNavLink>\n          </MDBSideNavNav>\n        </MDBSideNav>\n      </div>\n    );\n  }\n}\n\nexport default SideNavigation;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBIcon,\n} from \"mdbreact\";\n\nclass TopNavigation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false,\n    };\n    this.onClick = this.onClick.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.handleToggleClickA = this.handleToggleClickA.bind(this);\n  }\n\n  onClick() {\n    this.setState({\n      collapse: !this.state.collapse,\n    });\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n\n  handleToggleClickA() {\n    this.props.onSideNavToggleClick();\n  }\n\n  render() {\n    const navStyle = {\n      paddingLeft: this.props.toggle ? \"16px\" : \"240px\",\n      transition: \"padding-left .3s\",\n    };\n    return (\n      <Router>\n        <MDBNavbar\n          className=\"flexible-MDBNavbar\"\n          light\n          expand=\"md\"\n          scrolling\n          fixed=\"top\"\n          style={{ zIndex: 3 }}\n        >\n          <div\n            onClick={this.handleToggleClickA}\n            key=\"sideNavToggleA\"\n            style={{\n              lineHeight: \"32px\",\n              marginleft: \"1em\",\n              verticalAlign: \"middle\",\n              cursor: \"pointer\",\n            }}\n          >\n            <MDBIcon icon=\"bars\" color=\"white\" size=\"lg\" />\n          </div>\n\n          <MDBNavbarBrand href=\"/\" style={navStyle}>\n            <strong>{this.props.routeName}</strong>\n          </MDBNavbarBrand>\n          <MDBNavbarNav\n            expand=\"sm\"\n            right\n            style={{ flexDirection: \"row\" }}\n          ></MDBNavbarNav>\n        </MDBNavbar>\n      </Router>\n    );\n  }\n}\n\nexport default TopNavigation;\n","import React,{Component} from \"react\";\nimport { MDBFooter, MDBBtn } from \"mdbreact\";\n\nimport { MDBLink } from \"mdbreact\";\nimport axios from \"axios\";\nimport {Redirect} from \"react-router\";\n\n\nclass Copyrights extends Component {\n\n    state = {\n        logout: false\n    }\n\n    onLogout = () =>{\n        axios.post(\"http://localhost/spare_parts/logout.php\")\n            .then(value => this.setState({logout: true}));\n    }\n\n    render() {\n        if (this.state.logout) return <Redirect to=\"/login\"/>;\n        return (\n            <MDBFooter\n                // className={props.className}\n                style={{...this.props.style, zIndex: 2, backgroundColor: \"transparent\"}}\n            >\n                <MDBLink to=\"/sale\" target=\"_blank\" style={{\n                    float: \"right\",\n                }}>\n                    <MDBBtn\n                        size=\"lg\"\n                        gradient=\"blue\"\n                        rounded={true}\n                        style={{\n                            width: \"150px\",\n                            fontWeight: \"bold\",\n                        }}\n                    >\n                        {/* <MDBIcon icon=\"bolt\" /> */}\n                        Sale\n                    </MDBBtn>\n                </MDBLink>\n                <MDBBtn\n                    size=\"lg\"\n                    gradient=\"blue\"\n                    rounded={true}\n                    style={{\n                        width: \"150px\",\n                        float: \"right\",\n                        marginRight: 50,\n                        marginTop: 15,\n                        fontWeight: \"bold\",\n                    }}\n                    onClick={() => this.onLogout()}\n                >\n                    Logout\n                </MDBBtn>\n            </MDBFooter>\n        );\n    }\n}\n\nexport default Copyrights;\n","const getCurrentDate = (separator = \"      \") => {\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    let hours = newDate.getHours();\n    let mintues = newDate.getMinutes();\n    let seconds = newDate.getSeconds();\n    return `${year}/${\n        month < 10 ? `0${month}` : `${month}`\n    }/${date}${separator}${hours}:${mintues}:${seconds}`;\n};\n\nexport default getCurrentDate","import React, { Component } from \"react\";\nimport {\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCardHeader,\n  MDBCol,\n  MDBContainer,\n  MDBIcon,\n  MDBInput,\n  MDBRow,\n  MDBSelect,\n} from \"mdbreact\";\nimport getCurrentDate from \"../utils/get_current_date\";\nimport axios from \"axios\";\n\nclass InsertProductForm extends Component {\n  state = {\n    productName: \"\",\n    categoryName: \"\",\n    productBrand: \"\",\n    productModel: \"\",\n    productCode: \"\",\n    productQuantity: \"\",\n    productSize: \"\",\n    productColor: \"\",\n    productPurchasePrice: \"\",\n    productRetailPrice: \"\",\n    productDiscountPrice: \"\",\n    productStatus: \"\",\n    fileToUpload: \"\",\n    categories: [],\n  };\n\n  addCategory = (category) => {\n    let { categories } = this.state;\n    const newCategory = { text: category, value: category };\n    categories = [...categories, newCategory];\n    this.setState({ categories });\n  };\n\n  componentDidMount = () => {\n    let { categories } = this.state;\n    axios\n      .post(\"http://localhost/spare_parts/show_category.php\")\n      .then((response) => {\n        if (response.data !== \" no record found\") {\n          response.data.map((category) => {\n            const newCategory = {\n              text: category.Category_Name,\n              value: category.Category_Name,\n            };\n            categories = [...categories, newCategory];\n            return null;\n          });\n          this.setState({ categories });\n        }\n      });\n  };\n\n  onAdd = () => {\n    const { onAdd } = this.props;\n    const {\n      productName,\n      categoryName,\n      productBrand,\n      productColor,\n      productSize,\n      productPurchasePrice,\n      productCode,\n      productDiscountPrice,\n      productModel,\n      productQuantity,\n      productRetailPrice,\n      productStatus,\n      fileToUpload,\n    } = this.state;\n\n    const currentTime = getCurrentDate(\" \");\n\n    let product = {\n      Product_Name: productName,\n      Category_Name: categoryName,\n      Product_Brand: productBrand,\n      Product_Model: productModel,\n      Product_Code: productCode,\n      Product_Quantity: productQuantity,\n      Product_Size: productSize,\n      Product_Color: productColor,\n      Product_PurchasePrice: productPurchasePrice,\n      Product_Retail_Price: productRetailPrice,\n      Product_Discounted_Price: productDiscountPrice,\n      Product_Status: productStatus,\n      Product_Purchase_Date: currentTime,\n      fileToUpload: fileToUpload,\n    };\n    onAdd(product);\n  };\n\n  render() {\n    return (\n      <div>\n        <MDBContainer>\n          <MDBRow className=\"d-flex justify-content-center\">\n            <MDBCol sm=\"12\">\n              <MDBCard>\n                <MDBCardBody>\n                  <MDBCardHeader className=\"form-header blue-gradient rounded\">\n                    <h3 className=\"my-3\">\n                      <MDBIcon icon=\"plus-circle\" /> Insert Product\n                    </h3>\n                  </MDBCardHeader>\n                  <form>\n                    <div className=\"grey-text\">\n                      {/*---------- Row 1 ----------*/}\n                      <MDBRow>\n                        <MDBCol sm=\"4\" className=\"mb-3\">\n                          <MDBInput\n                            label=\"Product Name\"\n                            group\n                            type=\"text\"\n                            validate\n                            onChange={(event) =>\n                              this.setState({ productName: event.target.value })\n                            }\n                            name=\"productName\"\n                          />\n                        </MDBCol>\n                        <MDBCol sm=\"4\" className=\"mb-3\">\n                          {/* TODO: Convert into MDBSelect */}\n                          <MDBSelect\n                            search\n                            options={this.state.categories}\n                            selected=\"Choose your option\"\n                            getValue={(val) =>\n                              this.setState({\n                                categoryName: val[0],\n                              })\n                            }\n                            label=\"Select Category\"\n                          />\n                        </MDBCol>\n                        <MDBCol sm=\"4\" className=\"mb-3\">\n                          <MDBInput\n                            label=\"Product Brand\"\n                            group\n                            type=\"text\"\n                            validate\n                            onChange={(event) =>\n                              this.setState({\n                                productBrand: event.target.value,\n                              })\n                            }\n                            name=\"productBrand\"\n                          />\n                        </MDBCol>\n                      </MDBRow>\n                      {/*---------- Row 2 ----------*/}\n                      <MDBRow>\n                        <MDBCol sm=\"4\" className=\"mb-3\">\n                          <MDBInput\n                            label=\"Product Model\"\n                            group\n                            type=\"text\"\n                            validate\n                            onChange={(event) =>\n                              this.setState({\n                                productModel: event.target.value,\n                              })\n                            }\n                            name=\"productModel\"\n                          />\n                        </MDBCol>\n                        <MDBCol sm=\"4\" className=\"mb-3\">\n                          <MDBInput\n                            label=\"Product Code\"\n                            group\n                            type=\"text\"\n                            validate\n                            onChange={(event) =>\n                              this.setState({\n                                productCode: event.target.value,\n                              })\n                            }\n                            name=\"productCode\"\n                          />\n                        </MDBCol>\n                        <MDBCol sm=\"4\" className=\"mb-3\">\n                          <MDBInput\n                            label=\"Product Quantity\"\n                            group\n                            type=\"text\"\n                            validate\n                            onChange={(event) =>\n                              this.setState({\n                                productQuantity: event.target.value,\n                              })\n                            }\n                            name=\"productQuantity\"\n                          />\n                        </MDBCol>\n                      </MDBRow>\n                      {/*---------- Row 3 ----------*/}\n                      <MDBRow>\n                        <MDBCol sm=\"4\" className=\"mb-3\">\n                          <MDBInput\n                            label=\"Product Size\"\n                            group\n                            type=\"text\"\n                            validate\n                            onChange={(event) =>\n                              this.setState({\n                                productSize: event.target.value,\n                              })\n                            }\n                            name=\"productSize\"\n                          />\n                        </MDBCol>\n                        <MDBCol sm=\"4\" className=\"mb-3\">\n                          <MDBInput\n                            label=\"Product Color\"\n                            group\n                            type=\"text\"\n                            validate\n                            onChange={(event) =>\n                              this.setState({\n                                productColor: event.target.value,\n                              })\n                            }\n                            name=\"productColor\"\n                          />\n                        </MDBCol>\n                        <MDBCol sm=\"4\" className=\"mb-3\">\n                          <MDBInput\n                            label=\"Product Purchase Price\"\n                            group\n                            type=\"text\"\n                            validate\n                            onChange={(event) =>\n                              this.setState({\n                                productPurchasePrice: event.target.value,\n                              })\n                            }\n                            name=\"productPurchasePrice\"\n                          />\n                        </MDBCol>\n                      </MDBRow>\n                      {/*---------- Row 4 ----------*/}\n                      <MDBRow>\n                        <MDBCol sm=\"4\" className=\"mb-3\">\n                          <MDBInput\n                            label=\"Product Retail Price\"\n                            group\n                            type=\"text\"\n                            validate\n                            onChange={(event) =>\n                              this.setState({\n                                productRetailPrice: event.target.value,\n                              })\n                            }\n                            name=\"productRetailPrice\"\n                          />\n                        </MDBCol>\n                        <MDBCol sm=\"4\" className=\"mb-3\">\n                          <MDBInput\n                            label=\"Product Discount Price\"\n                            group\n                            type=\"text\"\n                            validate\n                            onChange={(event) =>\n                              this.setState({\n                                productDiscountPrice: event.target.value,\n                              })\n                            }\n                            name=\"productDiscountPrice\"\n                          />\n                        </MDBCol>\n                        <MDBCol sm=\"4\" className=\"mb-3\">\n                          <MDBInput\n                            label=\"Product Status\"\n                            group\n                            type=\"text\"\n                            validate\n                            onChange={(event) =>\n                              this.setState({\n                                productStatus: event.target.value,\n                              })\n                            }\n                            name=\"productStatus\"\n                          />\n                        </MDBCol>\n                      </MDBRow>\n                      <MDBRow>\n                        <input\n                          type=\"file\"\n                          onChange={(event) =>\n                            this.setState({\n                              fileToUpload: event.target.files[0],\n                            })\n                          }\n                        />\n                        {/* <ImageUploader\n                          withIcon={true}\n                          buttonText=\"Choose images\"\n                          singleImage={true}\n                          onChange={(picture) => console.log(picture)}\n                          imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n                          maxFileSize={5242880}\n                          withPreview={true}\n                        /> */}\n                      </MDBRow>\n                    </div>\n                    <div className=\"text-center mt-4\" />\n                  </form>\n                  <MDBBtn\n                    color=\"light-blue\"\n                    className=\"mb-3\"\n                    onClick={this.onAdd}\n                  >\n                    Add\n                  </MDBBtn>\n                </MDBCardBody>\n              </MDBCard>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      </div>\n    );\n  }\n}\n\nexport default InsertProductForm;\n","import React, { Component } from \"react\";\nimport InsertProductForm from \"./forms/insert_product_form\";\nconst axios = require(\"axios\");\n\nclass InsertProduct extends Component {\n  state = {};\n\n  componentWillMount = () => {\n    axios\n      .post(\"http://localhost/spare_parts/session_checker.php\")\n      .then((value) => {\n        if (value.data === \"no record found\") return null;\n        else if (value.data[0].status !== \"1\") {\n          this.props.history.push(\"/login\");\n        }\n      });\n  };\n\n  onInsertProduct = (product) => {\n    axios\n      .post(\"http://localhost/spare_parts/insert_product.php\", product)\n      .then((response) => console.log(response));\n  };\n\n  render() {\n    return <InsertProductForm onAdd={this.onInsertProduct} />;\n  }\n}\n\nexport default InsertProduct;\n","import React, { Component } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBCard,\n  MDBCardBody,\n  MDBIcon,\n  MDBCardHeader,\n  MDBBtn,\n  MDBInput,\n} from \"mdbreact\";\n\nclass InsertCategoryForm extends Component {\n  state = {\n    name: \"\",\n    status: \"\",\n  };\n\n  onNameChange = (event) => {\n    this.setState({ name: event.target.value });\n  };\n\n  onStatusChange = (event) => {\n    this.setState({ status: event.target.value });\n  };\n\n  render() {\n    const { onAdd } = this.props;\n    let { name, status } = this.state;\n    return (\n      <div>\n        <MDBContainer>\n          <MDBRow className=\"d-flex justify-content-center\">\n            <MDBCol md=\"6\">\n              <MDBCard>\n                <MDBCardBody>\n                  <MDBCardHeader className=\"form-header blue-gradient rounded\">\n                    <h3 className=\"my-3\">\n                      <MDBIcon icon=\"plus-circle\" /> Insert Category\n                    </h3>\n                  </MDBCardHeader>\n                  <form>\n                    <div className=\"grey-text\">\n                      <MDBInput\n                        label=\"Category Name\"\n                        group\n                        type=\"text\"\n                        validate\n                        onChange={this.onNameChange}\n                      />\n                      <MDBInput\n                        label=\"Category status\"\n                        group\n                        type=\"text\"\n                        validate\n                        onChange={this.onStatusChange}\n                      />\n                    </div>\n\n                    <div className=\"text-center mt-4\">\n                      <MDBBtn\n                        color=\"light-blue\"\n                        className=\"mb-3\"\n                        onClick={() => onAdd(name, status)}\n                      >\n                        Add\n                      </MDBBtn>\n                    </div>\n                  </form>\n                </MDBCardBody>\n              </MDBCard>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      </div>\n    );\n  }\n}\n\nexport default InsertCategoryForm;\n","import React, { Component } from \"react\";\nimport InsertCategoryForm from \"./forms/insert_category_form\";\nconst axios = require(\"axios\");\n\nclass InsertCategory extends Component {\n  state = {};\n\n    componentWillMount = () => {\n        axios.post(\"http://localhost/spare_parts/session_checker.php\")\n            .then(value => {\n                if (value.data === \"no record found\") return null;\n                else if(value.data[0].status !== '1') {\n                    this.props.history.push(\"/login\");\n                }\n            })\n    }\n\n  onInsertCategory = (name, status) => {\n    axios\n      .post(\"http://localhost/spare_parts/create_category.php\", {\n        Category_Name: name,\n        Category_Status: status,\n      })\n      .then((response) => console.log(response.data));\n  };\n  render() {\n    return <InsertCategoryForm onAdd={this.onInsertCategory} />;\n  }\n}\n\nexport default InsertCategory;\n","import React, { Component } from \"react\";\nimport { MDBDataTable, MDBBtn, MDBRow, MDBContainer, MDBCol } from \"mdbreact\";\nimport \"./all_product.css\";\nimport axios from \"axios\";\n\nclass AllProducts extends Component {\n  quantityComponent = (index, value = null) => {\n    const { rows } = this.state.data;\n    const quantity =\n      rows.length > 0 ? rows[index].Product_Quantity : parseInt(value);\n    return (\n      <div className=\"md-form\" style={{ margin: 0 }}>\n        <input\n          // style={{width:\"150px\"}}\n          type=\"number\"\n          id={index + 1}\n          onChange={(event) => this.onQuantityChange(index, event.target.value)}\n          min={0}\n          value={quantity}\n          className=\"form-control\"\n        />\n      </div>\n    );\n  };\n\n  onQuantityChange = (index, value) => {\n    let quantity = 0;\n    if (value !== \"\") quantity = parseInt(value);\n    let { data, grossProfit } = this.state;\n    grossProfit -= data.rows[index].Profit;\n    data.rows[index].Product_Quantity = quantity;\n    const { Product_Retail_Price, Product_PurchasePrice } = data.rows[index];\n    data.rows[index].Profit =\n      (Product_Retail_Price - Product_PurchasePrice) * quantity;\n    grossProfit += data.rows[index].Profit;\n    this.setState({ data, grossProfit });\n  };\n\n  state = {\n    data: {\n      columns: [\n        {\n          label: \"Name\",\n          field: \"Product_Name\",\n          sort: \"asc\",\n          width: 150,\n        },\n        {\n          label: \"C.Name\",\n          field: \"Category_Name\",\n          sort: \"asc\",\n          width: 270,\n        },\n        {\n          label: \"P.Brand\",\n          field: \"Product_Brand\",\n          sort: \"asc\",\n          width: 200,\n        },\n        {\n          label: \"P.Code\",\n          field: \"Product_Code\",\n          sort: \"asc\",\n          width: 100,\n        },\n        {\n          label: \"Qty\",\n          field: \"qty\",\n          sort: \"asc\",\n          width: 150,\n        },\n        {\n          label: \"R.Price\",\n          field: \"Product_Retail_Price\",\n          sort: \"asc\",\n          width: 350,\n        },\n        {\n          label: \"Profit\",\n          field: \"Profit\",\n          sort: \"asc\",\n          width: 350,\n        },\n      ],\n      rows: [],\n    },\n    grossProfit: 0,\n  };\n\n  componentDidMount = async () => {\n    let { data, grossProfit } = this.state;\n    let rows = data.rows;\n    await axios\n      .post(\"http://localhost/spare_parts/allproducts.php\")\n      .then((response) => {\n        response.data.map((product, index) => {\n          const {\n            Product_Retail_Price,\n            Product_PurchasePrice,\n            Product_Quantity,\n          } = product;\n          product[\"qty\"] = this.quantityComponent(\n            index,\n            product.Product_Quantity\n          );\n          product[\"Profit\"] =\n            (Product_Retail_Price - Product_PurchasePrice) * Product_Quantity;\n          grossProfit += product[\"Profit\"];\n          rows = [...rows, product];\n          return null;\n        });\n      });\n    data.rows = rows;\n    this.setState({ data, grossProfit });\n  };\n\n  onSave = () => {\n    const products = this.state.data.rows.map((value) => {\n      delete value.qty;\n      return value;\n    });\n\n    const data = {\n      items: products,\n    };\n\n    console.log(data);\n    axios\n      .post(\"http://localhost/spare_parts/update_product.php\", data)\n      .then((value) => console.log(value));\n  };\n\n  render() {\n    const { grossProfit } = this.state;\n    let { columns, rows } = this.state.data;\n    if (rows.length > 0)\n      rows.map((value, index) => {\n        rows[index].qty = this.quantityComponent(index);\n        // rows[index].Product_PurchasePrice;\n        // rows[index].Product_Retail_Price;\n        return null;\n      });\n    return (\n      <div>\n        <MDBDataTable\n          // className=\"form-header blue-gradient rounded\"\n          theadColor={\"blue-gradient\"}\n          striped\n          barReverse={true}\n          theadTextWhite={true}\n          hover\n          noBottomColumns={true}\n          data={{ columns, rows }}\n        />\n        <MDBContainer style={{ paddingTop: 50 }}>\n          <MDBRow className=\"d-flex justify-content-center\">\n            <MDBCol sm={8}>\n              <MDBBtn color={\"success\"} onClick={this.onSave}>\n                Save\n              </MDBBtn>\n            </MDBCol>\n            <MDBCol sm={4}>\n              <span style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\n                Gross Profit:{\" \"}\n              </span>\n              <div style={{ display: \"inline-block\" }}>\n                <h4 style={{ color: \"#00C851\" }}>{`Rs.${grossProfit}`}</h4>\n              </div>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      </div>\n    );\n  }\n}\n\nexport default AllProducts;\n","import React, {Component} from \"react\";\nimport {MDBBtn, MDBCard, MDBCardBody, MDBCardHeader, MDBCol, MDBContainer, MDBIcon, MDBInput, MDBRow} from \"mdbreact\";\nconst axios = require(\"axios\");\n\nclass AddExpanses extends Component{\n    state = {\n        description: \"\",\n        amount: 0,\n    }\n\n    onDescriptionChange = (e) =>{\n        this.setState({description: e.target.value})\n    }\n\n    onAmountChange = (e) => {\n        let amount;\n        const {value} = e.target;\n        if (value !== \"\") amount = parseInt(value);\n        else amount = 0\n        this.setState({amount})\n    }\n\n    onAdd = () => {\n        const { description, amount } = this.state;\n        const data = {\n             description,\n             amount,\n        }\n        axios.post(\"http://localhost/spare_parts/add_expanse.php\",data)\n            .then(_value => {\n                this.setState({\n                    description: \"\",\n                    amount: 0,\n                })\n            });\n    }\n\n    render() {\n        let { description, amount } = this.state;\n        return (\n            <div>\n                <MDBContainer>\n                    <MDBRow className=\"d-flex justify-content-center\">\n                        <MDBCol md=\"6\">\n                            <MDBCard>\n                                <MDBCardBody>\n                                    <MDBCardHeader className=\"form-header blue-gradient rounded\">\n                                        <h3 className=\"my-3\">\n                                            <MDBIcon icon=\"plus-circle\" /> Add Expanses\n                                        </h3>\n                                    </MDBCardHeader>\n                                    <form>\n                                        <div className=\"grey-text\">\n                                            <MDBInput\n                                                label=\"Expanse Description\"\n                                                group\n                                                type=\"text\"\n                                                validate\n                                                value={description}\n                                                onChange={this.onDescriptionChange}\n                                            />\n                                            <MDBInput\n                                                label=\"Amount\"\n                                                group\n                                                type=\"number\"\n                                                validate\n                                                value={amount}\n                                                onChange={this.onAmountChange}\n                                            />\n                                        </div>\n\n                                        <div className=\"text-center mt-4\">\n                                            <MDBBtn\n                                                color=\"light-blue\"\n                                                className=\"mb-3\"\n                                                onClick={this.onAdd}\n                                            >\n                                                Add\n                                            </MDBBtn>\n                                        </div>\n                                    </form>\n                                </MDBCardBody>\n                            </MDBCard>\n                        </MDBCol>\n                    </MDBRow>\n                </MDBContainer>\n            </div>\n        );\n    }\n}\n\nexport default AddExpanses;","import React, { Component } from \"react\";\nimport { MDBDataTable } from \"mdbreact\";\nimport axios from \"axios\";\n\nclass AllExpanses extends Component {\n  componentDidMount = async () => {\n    let { data } = this.state;\n    let rows = data.rows;\n    await axios\n      .post(\"http://localhost/spare_parts/all_expanse.php\")\n      .then((response) => {\n        response.data.map((product, index) => {\n          rows = [...rows, product];\n          return null;\n        });\n      });\n    data.rows = rows;\n    this.setState({ data });\n  };\n\n  state = {\n    data: {\n      columns: [\n        {\n          label: \"#\",\n          field: \"id\",\n          sort: \"asc\",\n          width: 100,\n        },\n        {\n          label: \"Description\",\n          field: \"Expanse_Desc\",\n          sort: \"asc\",\n          width: 500,\n        },\n        {\n          label: \"Amount\",\n          field: \"Expanse_Amount\",\n          sort: \"asc\",\n          width: 100,\n        },\n        {\n          label: \"Date\",\n          field: \"date\",\n          sort: \"asc\",\n          width: 100,\n        },\n      ],\n      rows: [],\n    },\n    grossProfit: 0,\n  };\n\n  render() {\n    let { columns, rows } = this.state.data;\n    return (\n      <div>\n        <MDBDataTable\n          theadColor={\"blue-gradient\"}\n          striped\n          barReverse={true}\n          theadTextWhite={true}\n          hover\n          noBottomColumns={true}\n          data={{ columns, rows }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default AllExpanses;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport InsertProduct from \"../spare_parts_components/insert_product\";\nimport InsertCategory from \"../spare_parts_components/insert_category\";\nimport AllProducts from \"../spare_parts_components/all_product\"\nimport AddExpanses from \"../spare_parts_components/Expanses/add_expanses\"\nimport AllExpanses from \"../spare_parts_components/Expanses/all_expanses\"\n\n\nconst fourtOFour = () => <h1 className=\"text-center\">Under Construction</h1>;\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/\" exact component={InsertProduct} />\n        <Route path=\"/insertproduct\" component={InsertProduct} />\n        <Route path=\"/insertcategory\" component={InsertCategory} />\n        <Route path=\"/allproducts\" component={AllProducts} />\n        <Route path=\"/addexpanses\" component={AddExpanses} />\n        <Route path=\"/allexpanses\" component={AllExpanses} />\n        <Route component={fourtOFour} />\n      </Switch>\n    );\n  }\n}\n\nexport default Routes;\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport SideNavigation from \"./SideNavigation\";\nimport TopNavigation from \"./TopNavigation\";\nimport Copyrights from \"./Footer\";\nimport Routes from \"./Routes\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false,\n      windowWidth: 0,\n      currentPage: \"\",\n      sideNavToggled: false,\n      breakWidth: 1400,\n    };\n  }\n\n  componentDidUpdate(prevProps, nextProps, snapshot) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      this.assessLocation(this.props.location.pathname);\n    }\n  }\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n    this.assessLocation(this.props.location.pathname);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize = () => {\n    this.setState({\n      windowWidth: window.innerWidth,\n    });\n  };\n\n  toggleSideNav = () => {\n    if (this.state.windowWidth < this.state.breakWidth) {\n      this.setState({\n        sideNavToggled: !this.state.sideNavToggled,\n      });\n    }\n  };\n\n  assessLocation = (location) => {\n    let locationString;\n    switch (location) {\n      // Manage Stock:\n      case \"/insertproduct\":\n        locationString = \"Insert Product\";\n        break;\n      case \"/insertcategory\":\n        locationString = \"Insert Category\";\n        break;\n      case \"/allproducts\":\n        locationString = \"All Products\";\n        break;\n\n      //\n      case \"/addexpanses\":\n        locationString = \"Add Expanses\";\n        break;\n      case \"/allexpanses\":\n        locationString = \"All Expanses\";\n        break;\n      case \"/pages/invoice\":\n        locationString = \"Invoice page\";\n        break;\n      case \"/pages/chat\":\n        locationString = \"Chat page\";\n        break;\n      case \"/pages/support\":\n        locationString = \"Support page\";\n        break;\n\n      // Profiles\n      case \"/profile/v1\":\n        locationString = \"Profile v.1\";\n        break;\n      case \"/profile/v2\":\n        locationString = \"Profile v.2\";\n        break;\n      case \"/profile/extended\":\n        locationString = \"Extended profile page\";\n        break;\n\n      // CSS\n      case \"/css/animations\":\n        locationString = \"Animations\";\n        break;\n      case \"/css/grid\":\n        locationString = \"Grid system\";\n        break;\n      case \"/css/utilities\":\n        locationString = \"Utilities & helpers\";\n        break;\n      case \"/css/typography\":\n        locationString = \"Typography\";\n        break;\n      case \"/css/colors\":\n        locationString = \"Colors\";\n        break;\n      case \"/css/shadows\":\n        locationString = \"Shadows\";\n        break;\n      case \"/css/code\":\n        locationString = \"Code\";\n        break;\n      case \"/css/icons\":\n        locationString = \"Icons\";\n        break;\n      case \"/css/images\":\n        locationString = \"Images\";\n        break;\n      case \"/css/masks\":\n        locationString = \"Masks\";\n        break;\n      case \"/css/hover\":\n        locationString = \"Hover\";\n        break;\n      case \"/css/media\":\n        locationString = \"Media\";\n        break;\n\n      // Components\n      case \"/components/buttons\":\n        locationString = \"Buttons\";\n        break;\n      case \"/components/cards\":\n        locationString = \"Cards\";\n        break;\n      case \"/components/list\":\n        locationString = \"List group\";\n        break;\n      case \"/components/panels\":\n        locationString = \"Panels\";\n        break;\n      case \"/components/progress\":\n        locationString = \"Progress bars\";\n        break;\n      case \"/components/tooltips\":\n        locationString = \"Tooltips\";\n        break;\n      case \"/components/popovers\":\n        locationString = \"Popovers\";\n        break;\n      case \"/components/tabs\":\n        locationString = \"Tabs & pills\";\n        break;\n      case \"/components/tags\":\n        locationString = \"Tags, labels & badges\";\n        break;\n      case \"/components/date\":\n        locationString = \"Date picker\";\n        break;\n      case \"/components/time\":\n        locationString = \"Time picker\";\n        break;\n      case \"/components/stepper\":\n        locationString = \"Stepper\";\n        break;\n      case \"/components/pagination\":\n        locationString = \"Pagination\";\n        break;\n      case \"/components/collapse\":\n        locationString = \"Collapse\";\n        break;\n\n      // Forms\n      case \"/forms/basic\":\n        locationString = \"Inputs\";\n        break;\n      case \"/forms/validation\":\n        locationString = \"Validation\";\n        break;\n      case \"/forms/extended\":\n        locationString = \"Forms\";\n        break;\n\n      // Tables\n      case \"/tables/basic\":\n        locationString = \"Tables basic\";\n        break;\n      case \"/tables/extended\":\n        locationString = \"Tables extended\";\n        break;\n      case \"/tables/datatable\":\n        locationString = \"Datatable\";\n        break;\n\n      // Maps\n      case \"/maps/google\":\n        locationString = \"Google maps\";\n        break;\n      case \"/maps/full\":\n        locationString = \"Full height map\";\n        break;\n      case \"/maps/vector\":\n        locationString = \"Vector world map\";\n        break;\n\n      // others\n      case \"/alerts\":\n        locationString = \"Alerts\";\n        break;\n      case \"/modals\":\n        locationString = \"Modals\";\n        break;\n      case \"/charts\":\n        locationString = \"Charts\";\n        break;\n      case \"/sections\":\n        locationString = \"Sections\";\n        break;\n      case \"/calendar\":\n        locationString = \"Full page calendar\";\n        break;\n      default:\n    }\n    this.setState({\n      currentPage: locationString,\n    });\n  };\n\n  render() {\n    const dynamicLeftPadding = {\n      paddingLeft:\n        this.state.windowWidth > this.state.breakWidth ? \"240px\" : \"0\",\n    };\n\n    return (\n      <div className=\"app\">\n        <div className=\"white-skin\">\n          {/* Generates the Left Nav */}\n          <SideNavigation\n            breakWidth={this.state.breakWidth}\n            style={{ transition: \"all .3s\" }}\n            triggerOpening={this.state.sideNavToggled}\n            onLinkClick={() => this.toggleSideNav()}\n          />\n        </div>\n        <div className=\"flexible-content white-skin\">\n          <TopNavigation\n            toggle={this.state.windowWidth < this.state.breakWidth}\n            onSideNavToggleClick={this.toggleSideNav}\n            routeName={this.state.currentPage}\n            className=\"white-skin\"\n          />\n          {/* Generates the Main content */}\n          <main style={{ ...dynamicLeftPadding, margin: \"8rem 6% 6rem\" }}>\n            <Routes onChange={() => this.assessLocation()} />\n          </main>\n\n          <Copyrights\n            style={{ ...dynamicLeftPadding, position: \"fixed\", width: \"100%\" }}\n            className=\"d-none d-lg-block\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\n\nimport {\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCol,\n  MDBContainer,\n  MDBInput,\n  MDBRow,\n} from \"mdbreact\";\n\nconst axios = require(\"axios\");\n\nclass LoginPage extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    login: false,\n  };\n\n  componentWillMount = () => {\n    axios\n      .post(\"http://localhost/spare_parts/session_checker.php\")\n      .then((value) => {\n        if (value.data === \"no record found\") return null;\n        else if (value.data[0].status === \"1\") {\n          this.props.history.push(\"/\");\n        }\n      });\n  };\n\n  onLogin = (val) => {\n    const { email, password } = this.state;\n    axios\n      .post(\n        \"http://localhost/spare_parts/signin.php\",\n        JSON.stringify({\n          email: email,\n        })\n      )\n      .then((response) => {\n        const status = response.data[0].pwd === password;\n        // this.setState({email: \"\", password: \"\"});\n        if (status) {\n          axios\n            .post(\"http://localhost/spare_parts/session_create.php\", {\n              email: email,\n            })\n            .then((value) => this.setState({ login: true }));\n        }\n      });\n  };\n\n  render() {\n    if (this.state.login) this.props.history.push(\"/\");\n    const { email, password } = this.state;\n    return (\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <MDBCard>\n              <div className=\"header pt-3 grey lighten-2\">\n                <MDBRow className=\"d-flex justify-content-start\">\n                  <h3 className=\"deep-grey-text mt-3 mb-4 pb-1 mx-5\">Log in</h3>\n                </MDBRow>\n              </div>\n              <MDBCardBody className=\"mx-4 mt-4\">\n                <MDBInput\n                  label=\"Your email\"\n                  value={email}\n                  group\n                  type=\"text\"\n                  validate\n                  onChange={(event) =>\n                    this.setState({ email: event.target.value })\n                  }\n                />\n                <MDBInput\n                  label=\"Your password\"\n                  value={password}\n                  group\n                  type=\"password\"\n                  validate\n                  containerClass=\"mb-0\"\n                  onChange={(event) =>\n                    this.setState({ password: event.target.value })\n                  }\n                />\n                <p className=\"font-small grey-text d-flex justify-content-end\">\n                  Forgot\n                  <span className=\"dark-grey-text font-weight-bold ml-1\">\n                    Password?\n                  </span>\n                </p>\n                <div className=\"text-center mb-4 mt-5\">\n                  <MDBBtn\n                    color=\"danger\"\n                    type=\"button\"\n                    className=\"btn-block z-depth-2\"\n                    onClick={() => this.onLogin(true)}\n                  >\n                    Log in\n                  </MDBBtn>\n                </div>\n                <p className=\"font-small grey-text d-flex justify-content-center\">\n                  Don't have an account?\n                  <span className=\"dark-grey-text font-weight-bold ml-1\">\n                    Sign up\n                  </span>\n                </p>\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React, { Component } from \"react\";\nimport lodash from \"lodash\";\nimport SelectSearch from \"react-select-search\";\nimport \"./sale.css\";\n\nimport {\n  MDBBadge,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCardHeader,\n  MDBCol,\n  MDBContainer,\n  MDBDatePicker,\n  MDBIcon,\n  MDBInput,\n  MDBRow,\n  MDBTable,\n  MDBTableBody,\n  MDBTableHead,\n  MDBTimePicker,\n} from \"mdbreact\";\nimport axios from \"axios\";\n\nconst Row = ({\n  id,\n  categoryComponent,\n  productComponent,\n  quantity,\n  price,\n  onDelete,\n  haveQty,\n}) => {\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>\n        <MDBBadge color=\"red\">\n          <MDBIcon\n            style={{ cursor: \"pointer\" }}\n            onClick={() => onDelete(id)}\n            icon=\"minus\"\n            size=\"2x\"\n          />\n        </MDBBadge>\n      </td>\n      <td>{categoryComponent(id)}</td>\n      <td>{productComponent(id)}</td>\n      <td style={{ paddingTop: \"1.5rem\", textAlign: \"center\" }}>{haveQty}</td>\n      <td>{quantity(id)}</td>\n      <td>{price}</td>\n    </tr>\n  );\n};\n\nclass SalePage extends Component {\n  notSelected = \"Chose your option\";\n\n  validateData = () => {\n    const {\n      SelectedProducts,\n      SelectedCategory,\n      customerAddress,\n      customerCNIC,\n      customerName,\n      customerPhone,\n    } = this.state;\n    if (\n      SelectedCategory.findIndex((value) => {\n        return value === this.notSelected;\n      }) === 0\n    )\n      return false;\n    if (\n      SelectedProducts.findIndex((value) => {\n        return value === this.notSelected;\n      }) === 0\n    )\n      return false;\n    if (customerName === \"\") return false;\n    if (customerPhone === \"\") return false;\n    if (customerCNIC === \"\") return false;\n    return customerAddress !== \"\";\n  };\n\n  componentWillMount = () => {\n    axios\n      .post(\"http://localhost/spare_parts/session_checker.php\")\n      .then((value) => {\n        if (value.data === \"no record found\") return null;\n        else if (value.data[0].status !== \"1\") {\n          this.props.history.push(\"/login\");\n        }\n      });\n  };\n\n  onEnter = async () => {\n    console.log(\"I am in the onEnter function\");\n    if (!this.validateData()) return;\n    const {\n      SelectedIds,\n      SelectedPrices,\n      SelectedQty,\n      SelectedProducts,\n      rowCount,\n      subTotal,\n      discount,\n      total,\n      customerName,\n      date,\n      time,\n      customerAddress,\n      customerPhone,\n      customerCNIC,\n    } = this.state;\n\n    //    Data Format\n    // {\n    //  sno: index\n    //  dec: Product Name,\n    //  qty: 1 (Quantity)\n    //  rate: Price\n    // }\n\n    let items = lodash.range(rowCount).map((index) => {\n      const qty = SelectedQty[index];\n      return {\n        sno: index, // Row No.\n        desc: SelectedProducts[index], // Product Name\n        qty: qty, // Product Quantity\n        rate: SelectedPrices[index] / qty, // Product 1 Qty Price\n        Product_id: SelectedIds[index], // Product ID\n      };\n    });\n    const data = {\n      subTotal: subTotal,\n      discount: discount,\n      total: total,\n      items: items,\n      itemsLength: items.length,\n      customerName: customerName,\n      date: date,\n      time: time,\n      Customer_Address: customerAddress,\n      Customer_Phone: customerPhone,\n      Customer_CNIC: customerCNIC,\n    };\n    // console.log(data);\n    this.props.history.push({\n      pathname: \"/invoice\",\n      data: data,\n    });\n  };\n\n  state = {\n    isMounted: false,\n    customerName: \"\",\n    customerAddress: \"\",\n    customerPhone: \"\",\n    customerCNIC: \"\",\n    date: \"\",\n    time: \"\",\n    rowCount: 1,\n    Items: this.onEnter,\n    SelectedCategory: [this.notSelected],\n    SelectedProducts: [this.notSelected],\n    SelectedPrices: [0],\n    SelectedQty: [1],\n    SelectedIds: [\"\"],\n    SelectedHaveQty: [0],\n    subTotal: 0,\n    discount: 0,\n    total: 0,\n    categories: [\n      // {\n      //     text: \"Category Name\",\n      //     value: \"Category Value\"\n      // },\n    ],\n    products: {\n      // Data Format\n      // Category_Name: {\n      //     Product_Name: {\n      //         text: \"Product Name\",\n      //         value: \"Product Value\"\n      //         price: \"Product Price\"\n      //         id: Product_id,\n      //         qty: Product_Quantity,\n      //     },\n      // },\n    },\n  };\n\n  componentDidMount = async () => {\n    let { categories, products } = this.state;\n    await axios\n      .post(\"http://localhost/spare_parts/show_category.php\")\n      .then((response) => {\n        if (response.data !== \" no record found\") {\n          response.data.map((category) => {\n            const newCategory = {\n              name: category.Category_Name,\n              value: category.Category_Name,\n            };\n            categories = [...categories, newCategory];\n            return null;\n          });\n        }\n      });\n    await axios\n      .post(\"http://localhost/spare_parts/allproducts.php\")\n      .then((response) => {\n        if (response.data !== \" no record found\") {\n          response.data.map((product) => {\n            const {\n              Product_Name,\n              Category_Name,\n              Product_Retail_Price,\n              id,\n              Product_Quantity,\n            } = product;\n            const newProduct = {};\n            newProduct[Product_Name] = {\n              name: Product_Name,\n              value: Product_Name,\n              price: parseInt(Product_Retail_Price),\n              id: id,\n              qty: Product_Quantity,\n            };\n            if (!products.hasOwnProperty(product.Category_Name))\n              products[Category_Name] = newProduct;\n            else\n              products[Category_Name][Product_Name] = newProduct[Product_Name];\n            return null;\n          });\n        }\n        return null;\n      });\n    this.setState({ products, categories });\n    this.setState({ isMounted: true });\n  };\n  onAdd = () => {\n    const {\n      rowCount,\n      SelectedCategory,\n      SelectedProducts,\n      SelectedPrices,\n      SelectedQty,\n      SelectedIds,\n      SelectedHaveQty,\n    } = this.state;\n    const categories = [...SelectedCategory, this.notSelected];\n    const products = [...SelectedProducts, this.notSelected];\n    const prices = [...SelectedPrices, 0];\n    const ids = [...SelectedIds, \"None\"];\n    const qty = [...SelectedQty, 1];\n    const haveQty = [...SelectedHaveQty, 0];\n    this.setState({\n      rowCount: rowCount + 1,\n      SelectedCategory: categories,\n      SelectedProducts: products,\n      SelectedPrices: prices,\n      SelectedHaveQty: haveQty,\n      SelectedQty: qty,\n      SelectedIds: ids,\n    });\n  };\n\n  categoryComponent = (id) => {\n    const { categories, SelectedCategory } = this.state;\n    const index = id - 1;\n    return (\n      <SelectSearch\n        options={categories}\n        search={true}\n        onChange={(selectedValue) =>\n          this.onSelectedCategoryUpdate(index, selectedValue)\n        }\n        value={SelectedCategory[index]}\n        name=\"Categories\"\n        placeholder=\"Choose your Option\"\n      />\n    );\n  };\n\n  onSelectedCategoryUpdate = (index, selectedValue) => {\n    let { isMounted, discount, SelectedCategory } = this.state;\n\n    if (\n      isMounted &&\n      typeof selectedValue != \"undefined\" &&\n      selectedValue !== SelectedCategory[index]\n    ) {\n      SelectedCategory[index] = selectedValue;\n      const subTotal = this.computeSubtotal();\n      const total = subTotal - discount;\n      this.setState({ SelectedCategory, subTotal, total });\n    }\n  };\n\n  productComponent = (id) => {\n    const { products, SelectedProducts, SelectedCategory } = this.state;\n\n    const index = id - 1;\n    let options;\n    if (products[SelectedCategory[index]]) {\n      options = lodash.map(products[SelectedCategory[index]], function (val) {\n        return val;\n      });\n    } else options = [];\n    return (\n      <SelectSearch\n        options={options}\n        search={true}\n        onChange={(selectedValue) =>\n          this.onSelectedProductUpdate(index, selectedValue)\n        }\n        value={SelectedProducts[index]}\n        name=\"Products\"\n        placeholder=\"Choose your Option\"\n      />\n    );\n  };\n  onSelectedProductUpdate = (index, selectedValue) => {\n    let {\n      products,\n      isMounted,\n      discount,\n      SelectedProducts,\n      SelectedCategory,\n      SelectedPrices,\n      SelectedIds,\n      SelectedHaveQty,\n    } = this.state;\n    const category = SelectedCategory[index];\n\n    if (\n      isMounted &&\n      selectedValue !== this.notSelected &&\n      typeof selectedValue != \"undefined\" &&\n      selectedValue !== SelectedProducts[index] &&\n      typeof category != \"undefined\"\n    ) {\n      SelectedProducts[index] = selectedValue;\n      SelectedPrices[index] = products[category][selectedValue].price;\n      SelectedIds[index] = products[category][selectedValue].id;\n      SelectedHaveQty[index] = products[category][selectedValue].qty;\n      const subTotal = this.computeSubtotal();\n      const total = subTotal - discount;\n      this.setState({\n        SelectedProducts,\n        SelectedIds,\n        SelectedPrices,\n        SelectedHaveQty,\n        subTotal,\n        total,\n      });\n    }\n  };\n\n  quantityComponent = (id) => {\n    let {\n      SelectedQty,\n      SelectedProducts,\n      SelectedCategory,\n      SelectedPrices,\n      products,\n      subTotal,\n      total,\n      discount,\n      SelectedHaveQty,\n    } = this.state;\n    const index = id - 1;\n\n    return (\n      <MDBInput\n        style={{ marginTop: \"-1.5rem\" }}\n        label=\"Quantity\"\n        group\n        type=\"number\"\n        value={SelectedQty[index]}\n        validate\n        onChange={(event) => {\n          const product = SelectedProducts[index];\n          const category = SelectedCategory[index];\n\n          if (\n            event.target.value !== \"\" &&\n            typeof products[category] != \"undefined\" &&\n            typeof products[category][product] != \"undefined\"\n          ) {\n            let quantity = parseInt(event.target.value);\n            if (quantity > SelectedHaveQty[index])\n              quantity = SelectedHaveQty[index];\n            SelectedPrices[index] =\n              products[category][product].price * quantity;\n            SelectedQty[index] = quantity;\n            subTotal = this.computeSubtotal();\n            total = subTotal - discount;\n            this.setState({ SelectedPrices, SelectedQty, subTotal, total });\n          }\n        }}\n        name=\"productName\"\n      />\n    );\n  };\n\n  onDelete = (id) => {\n    const index = id - 1;\n\n    let {\n      SelectedProducts,\n      SelectedCategory,\n      SelectedIds,\n      SelectedQty,\n      SelectedPrices,\n      rowCount,\n      subTotal,\n      discount,\n      total,\n    } = this.state;\n    const price = SelectedPrices[index];\n    SelectedPrices = SelectedPrices.filter((v, i) => i !== index);\n    SelectedQty = SelectedQty.filter((v, i) => i !== index);\n    SelectedIds = SelectedIds.filter((v, i) => i !== index);\n    SelectedCategory = SelectedCategory.filter((v, i) => i !== index);\n    SelectedProducts = SelectedProducts.filter((v, i) => i !== index);\n    subTotal -= price;\n    total = subTotal - discount;\n    this.setState({\n      SelectedProducts,\n      SelectedCategory,\n      SelectedIds,\n      SelectedQty,\n      SelectedPrices,\n      rowCount: rowCount - 1,\n      subTotal: subTotal,\n      total: total,\n    });\n  };\n\n  computeSubtotal = () => {\n    return this.state.SelectedPrices.reduce((val, newVal) => val + newVal);\n  };\n\n  render() {\n    const {\n      rowCount,\n      SelectedPrices,\n      subTotal,\n      total,\n      discount,\n      SelectedHaveQty,\n    } = this.state;\n    return (\n      <MDBContainer style={{ paddingTop: 50 }}>\n        <MDBRow className=\"d-flex justify-content-center\">\n          <MDBCol size=\"12\" xl=\"12\">\n            <MDBCard>\n              <MDBCardBody>\n                <MDBCardHeader className=\"form-header blue-gradient rounded\">\n                  <h3 className=\"my-3\">\n                    <MDBIcon icon=\"dollar-sign\" /> Sale\n                  </h3>\n                </MDBCardHeader>\n                <form>\n                  <div className=\"grey-text\">\n                    {/*---------- Row 1 ----------*/}\n                    <MDBRow>\n                      <MDBCol sm=\"3\" className=\"mb-3\">\n                        <MDBInput\n                          label=\"Customer Name\"\n                          group\n                          type=\"text\"\n                          validate\n                          onChange={(event) =>\n                            this.setState({ customerName: event.target.value })\n                          }\n                          name=\"productName\"\n                        />\n                      </MDBCol>\n                      <MDBCol sm=\"3\" className=\"mb-3\">\n                        <MDBInput\n                          label=\"Customer Cnic\"\n                          group\n                          type=\"text\"\n                          validate\n                          onChange={(event) =>\n                            this.setState({ customerCNIC: event.target.value })\n                          }\n                          name=\"productName\"\n                        />\n                      </MDBCol>\n                      <MDBCol sm=\"3\" className=\"mb-3\">\n                        <MDBInput\n                          label=\"Customer Phone\"\n                          group\n                          type=\"text\"\n                          validate\n                          onChange={(event) =>\n                            this.setState({ customerPhone: event.target.value })\n                          }\n                          name=\"productName\"\n                        />\n                      </MDBCol>\n                      <MDBCol sm=\"3\" className=\"mb-3\">\n                        <MDBInput\n                          label=\"Customer Address\"\n                          group\n                          type=\"text\"\n                          validate\n                          onChange={(event) =>\n                            this.setState({\n                              customerAddress: event.target.value,\n                            })\n                          }\n                          name=\"productName\"\n                        />\n                      </MDBCol>\n                      {/*<MDBCol sm=\"1\" className=\"mb-3\"/>*/}\n                    </MDBRow>\n                    <MDBRow>\n                      <MDBCol sm=\"2\" className=\"mt-2\">\n                        <MDBDatePicker\n                          getValue={(value) =>\n                            this.setState({\n                              date: `${value.getDate()}-${value.getMonth()}-${\n                                value.getYear() + 1900\n                              }`,\n                            })\n                          }\n                        />\n                      </MDBCol>\n                      {/*<MDBCol sm=\"1\"/>*/}\n                      <MDBCol sm=\"4\" className=\"mb-3\">\n                        <MDBTimePicker\n                          getValue={(value) => this.setState({ time: value })}\n                          id={\"Time\"}\n                        />\n                      </MDBCol>\n                      <MDBCol sm=\"3\">\n                        <MDBBtn color=\"red\" onClick={() => this.onAdd()}>\n                          Add\n                        </MDBBtn>\n                      </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                      <MDBCol>\n                        <MDBTable>\n                          <MDBTableHead>\n                            <tr>\n                              <th>#</th>\n                              <th />\n                              <th>Category</th>\n                              <th>Product</th>\n                              <th>HaveQty</th>\n                              <th>Qty</th>\n                              <th>Price</th>\n                            </tr>\n                          </MDBTableHead>\n                          <MDBTableBody>\n                            {lodash.range(1, rowCount + 1).map((id) => (\n                              <Row\n                                key={id}\n                                id={id}\n                                categoryComponent={this.categoryComponent}\n                                productComponent={this.productComponent}\n                                price={SelectedPrices[id - 1]}\n                                onDelete={this.onDelete}\n                                quantity={this.quantityComponent}\n                                haveQty={SelectedHaveQty[id - 1]}\n                              />\n                            ))}\n                          </MDBTableBody>\n                        </MDBTable>\n                      </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                      <MDBCol sm=\"3\">\n                        <MDBInput\n                          label=\"Subtotal \"\n                          value={subTotal}\n                          disabled\n                          type=\"number\"\n                        />\n                      </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                      <MDBCol sm=\"3\">\n                        <MDBInput\n                          label=\"Discount \"\n                          value={discount}\n                          type=\"number\"\n                          onChange={(val) => {\n                            let disc = 0;\n                            if (val.target.value !== \"\") {\n                              disc = parseInt(val.target.value);\n                            }\n                            const subTotal = this.computeSubtotal();\n                            const total = subTotal - disc;\n                            this.setState({ discount: disc, subTotal, total });\n                          }}\n                        />\n                      </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                      <MDBCol sm=\"3\">\n                        <MDBInput\n                          label=\"Total \"\n                          value={total}\n                          disabled\n                          type=\"number\"\n                        />\n                      </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                      <MDBCol sm=\"3\">\n                        <MDBBtn onClick={this.onEnter}> Enter Bill </MDBBtn>\n                      </MDBCol>\n                    </MDBRow>\n                  </div>\n                  <div className=\"text-center mt-4\" />\n                </form>\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    );\n  }\n}\n\nexport default SalePage;\n","import React, {Component} from \"react\";\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\n\nclass InvoiceTitle extends Component{\n    state = {}\n\n    styles = StyleSheet.create({\n\n        titleContainer:{\n            flexDirection: 'row',\n            marginTop: 24,\n        },\n        reportTitle:{\n            color: '#61dafb',\n            letterSpacing: 4,\n            fontSize: 25,\n            textAlign: 'center',\n            textTransform: 'uppercase',\n        }\n    });\n\n    render() {\n        const { title } = this.props;\n        return (\n            <View style={this.styles.titleContainer}>\n                <Text style={this.styles.reportTitle}>{title}</Text>\n            </View>\n        );\n    }\n}\n\nexport default InvoiceTitle;","import React, {Component} from 'react';\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst styles = StyleSheet.create({\n    headerContainer: {\n        marginTop: 36\n    },\n    billTo: {\n        marginTop: 20,\n        paddingBottom: 3,\n        fontFamily: 'Helvetica-Oblique'\n    },\n});\n\n\nclass BillTo extends Component{\n    state = {}\n    render() {\n        const { invoice } = this.props\n        return (\n            <View style={styles.headerContainer}>\n                <Text style={styles.billTo}>Bill To:</Text>\n                <Text>{invoice.customerName}</Text>\n                {/*<Text>{invoice.address}</Text>*/}\n                {/*<Text>{invoice.phone}</Text>*/}\n                {/*<Text>{invoice.email}</Text>*/}\n            </View>\n        );\n    }\n}\n\nexport default BillTo","import React, {Component, Fragment} from 'react';\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst styles = StyleSheet.create({\n    invoiceNoContainer: {\n        flexDirection: 'row',\n        marginTop: 36,\n        justifyContent: 'flex-end'\n    },\n    invoiceDateContainer: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end'\n    },\n    invoiceDate: {\n        fontSize: 12,\n        fontStyle: 'bold',\n    },\n    label: {\n        width: 60\n    }\n\n});\n\n\nclass InvoiceNo extends Component{\n    state = {};\n\n    render() {\n        const { invoice } = this.props\n        return (\n            <Fragment>\n                <View style={styles.invoiceNoContainer}>\n                    <Text style={styles.label}>Invoice No:</Text>\n                    <Text style={styles.invoiceDate}>{invoice.invoice_no}</Text>\n                </View>\n                <View style={styles.invoiceDateContainer}>\n                    <Text style={styles.label}>Date: </Text>\n                    <Text>{invoice.date}</Text>\n                </View>\n            </Fragment>\n        );\n    }\n}\n\nexport default InvoiceNo","import React from 'react';\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst borderColor = '#90e5fc'\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n        borderBottomColor: '#bff0fd',\n        backgroundColor: '#bff0fd',\n        borderBottomWidth: 1,\n        alignItems: 'center',\n        height: 24,\n        textAlign: 'center',\n        fontStyle: 'bold',\n        flexGrow: 1,\n    },\n    description: {\n        width: '60%',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n    },\n    qty: {\n        width: '10%',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n    },\n    rate: {\n        width: '15%',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n    },\n    amount: {\n        width: '15%'\n    },\n});\n\nconst InvoiceTableHeader = () => (\n    <View style={styles.container}>\n        <Text style={styles.description}>Item Description</Text>\n        <Text style={styles.qty}>Qty</Text>\n        <Text style={styles.rate}>@</Text>\n        <Text style={styles.amount}>Amount</Text>\n    </View>\n);\n\nexport default InvoiceTableHeader","import React, {Fragment} from 'react';\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst borderColor = '#90e5fc'\nconst styles = StyleSheet.create({\n    row: {\n        flexDirection: 'row',\n        borderBottomColor: '#bff0fd',\n        borderBottomWidth: 1,\n        alignItems: 'center',\n        height: 24,\n        fontStyle: 'bold',\n    },\n    description: {\n        width: '60%',\n        textAlign: 'left',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n        paddingLeft: 8,\n    },\n    qty: {\n        width: '10%',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n        textAlign: 'right',\n        paddingRight: 8,\n    },\n    rate: {\n        width: '15%',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n        textAlign: 'right',\n        paddingRight: 8,\n    },\n    amount: {\n        width: '15%',\n        textAlign: 'right',\n        paddingRight: 8,\n    },\n});\n\n\nconst InvoiceTableRow = ({items}) => {\n    const rows = items.map( item =>\n        <View style={styles.row} key={item.sno.toString()}>\n            <Text style={styles.description}>{item.desc}</Text>\n            <Text style={styles.qty}>{item.qty}</Text>\n            <Text style={styles.rate}>{item.rate}</Text>\n            <Text style={styles.amount}>{(item.qty * item.rate).toFixed(2)}</Text>\n        </View>\n    )\n    return (<Fragment>{rows}</Fragment> )\n};\n\nexport default InvoiceTableRow","import React, {Fragment} from 'react';\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst borderColor = '#90e5fc'\nconst styles = StyleSheet.create({\n    row: {\n        flexDirection: 'row',\n        borderBottomColor: '#bff0fd',\n        borderBottomWidth: 1,\n        alignItems: 'center',\n        height: 24,\n        fontStyle: 'bold',\n        color: 'white'\n    },\n    description: {\n        width: '60%',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n    },\n    qty: {\n        width: '10%',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n    },\n    rate: {\n        width: '15%',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n    },\n    amount: {\n        width: '15%',\n    },\n\n});\n\nconst InvoiceTableBlankSpace = ({rowsCount}) => {\n    const blankRows = Array(rowsCount).fill(0)\n    const rows = blankRows.map( (x, i) =>\n        <View style={styles.row} key={`BR${i}`}>\n            <Text style={styles.description}>-</Text>\n            <Text style={styles.qty}>-</Text>\n            <Text style={styles.rate}>-</Text>\n            <Text style={styles.amount}>-</Text>\n        </View>\n    )\n    return (<Fragment>{rows}</Fragment> )\n};\nexport default InvoiceTableBlankSpace;","import React from 'react';\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst borderColor = '#90e5fc'\nconst styles = StyleSheet.create({\n    row: {\n        flexDirection: 'row',\n        borderBottomColor: '#bff0fd',\n        borderBottomWidth: 1,\n        alignItems: 'center',\n        height: 24,\n        fontSize: 12,\n        fontStyle: 'bold',\n    },\n    description: {\n        width: '85%',\n        textAlign: 'right',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n        paddingRight: 8,\n    },\n    total: {\n        width: '15%',\n        textAlign: 'right',\n        paddingRight: 8,\n    },\n});\n\n\nconst InvoiceTableFooter = ({text, value}) => {\n    return(\n        <View style={styles.row}>\n            <Text style={styles.description}>{text}</Text>\n            <Text style={styles.total}>{ Number.parseFloat(value).toFixed(2)}</Text>\n        </View>\n    )\n};\n\nexport default InvoiceTableFooter","import React, {Component} from 'react';\nimport {View, StyleSheet } from '@react-pdf/renderer';\nimport InvoiceTableHeader from './InvoiceTableHeader'\nimport InvoiceTableRow from './InvoiceTableRow'\nimport InvoiceTableBlankSpace from './InvoiceTableBlankSpace'\nimport InvoiceTableFooter from './InvoiceTableFooter'\n\n\n\nclass InvoiceItemsTable extends Component {\n    state = {}\n\n    tableRowsCount = 6;\n\n    styles = StyleSheet.create({\n        tableContainer: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            marginTop: 24,\n            borderWidth: 1,\n            borderColor: '#bff0fd',\n        },\n    });\n\n\n    render() {\n        const { invoice } = this.props;\n        return (\n            <View style={this.styles.tableContainer}>\n                <InvoiceTableHeader />\n                <InvoiceTableRow items={invoice.items} />\n                <InvoiceTableBlankSpace rowsCount={1} />\n                <InvoiceTableFooter text=\"SUBTOTAL\" value={invoice.subTotal} />\n                <InvoiceTableFooter text=\"DISCOUNT\" value={invoice.discount} />\n                <InvoiceTableFooter text=\"TOTAL\" value={invoice.total} />\n            </View>\n        );\n    }\n}\n\nexport default InvoiceItemsTable","import React from 'react';\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst styles = StyleSheet.create({\n\n    titleContainer:{\n        flexDirection: 'row',\n        marginTop: 12\n    },\n    reportTitle:{\n        fontSize: 12,\n        textAlign: 'center',\n        textTransform: 'uppercase',\n    }\n});\n\n\nconst InvoiceThankYouMsg = () => (\n    <View style={styles.titleContainer}>\n        <Text style={styles.reportTitle}>Thank you for your business</Text>\n    </View>\n);\n\nexport default InvoiceThankYouMsg","import React, { Component } from \"react\";\n\nimport {\n  Document,\n  Image,\n  Page,\n  StyleSheet,\n  PDFViewer,\n} from \"@react-pdf/renderer\";\nimport InvoiceTitle from \"./invoiceTitle\";\nimport BillTo from \"./BillTo\";\nimport InvoiceNo from \"./InvoiceNo\";\nimport InvoiceItemsTable from \"./InvoiceItemTable\";\nimport InvoiceThankYouMsg from \"./InvoiceThankYouMsg\";\nimport logo from \"../../../logo.png\";\nimport axios from \"axios\";\n\nclass Invoice extends Component {\n  state = {};\n\n  invoiceData = {\n    id: \"5f8920556ab6bcf247b2115c\",\n    invoice_no: \"202007-31\",\n    balance: \"$1,941.94\",\n    customerName: \"\",\n    email: \"haleyblake@voipa.com\",\n    phone: \"+1 (830) 481-3846\",\n    address: \"437 Manhattan Court, Babb, Mississippi, 7475\",\n    date: \"2019-09-01\",\n    subTotal: 0,\n    discount: 0,\n    total: 0,\n    items: [],\n  };\n\n  styles = StyleSheet.create({\n    page: {\n      fontFamily: \"Helvetica\",\n      fontSize: 11,\n      paddingTop: 30,\n      paddingLeft: 60,\n      paddingRight: 60,\n      lineHeight: 1.5,\n      flexDirection: \"column\",\n    },\n    logo: {\n      width: 74,\n      height: 66,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  });\n\n  // static getDerivedStateFromProps(_, state) {\n  //     axios.post(\"http://localhost/spare_parts/session_checker.php\")\n  //         .then(value => {\n  //             if (value.data === \"no record found\") return null;\n  //             else if(value.data[0].status !== '1') {\n  //                 this.props.history.push(\"/login\");\n  //             }\n  //         })\n  // }\n\n  componentWillMount = async () => {\n    await axios\n      .post(\"http://localhost/spare_parts/session_checker.php\")\n      .then((value) => {\n        if (value.data === \"no record found\") return null;\n        else if (value.data[0].status !== \"1\") {\n          this.props.history.push(\"/login\");\n        }\n      });\n  };\n\n  componentDidMount = () => {\n    axios\n      .post(\"http://localhost/spare_parts/sales.php\", this.props.location.data)\n      .then((value) => console.log(value));\n  };\n\n  render() {\n    let invoice = this.invoiceData;\n    const { data } = this.props.location;\n    let { subTotal, discount, total, items, customerName, date } = data;\n    // console.log(\"Message \",this.props.location.data);\n    invoice.items = items;\n    invoice.subTotal = subTotal;\n    invoice.discount = discount;\n    invoice.total = total;\n    invoice.customerName = customerName;\n    invoice.date = date;\n\n    return (\n      <PDFViewer width=\"1900\" height=\"1000\" className=\"app\">\n        <Document>\n          <Page size=\"A4\" style={this.styles.page}>\n            <Image style={this.styles.logo} src={logo} />\n            <InvoiceTitle title=\"Invoice\" />\n            <InvoiceNo invoice={invoice} />\n            <BillTo invoice={invoice} />\n            <InvoiceItemsTable invoice={invoice} />\n            <InvoiceThankYouMsg />\n          </Page>\n        </Document>\n      </PDFViewer>\n    );\n  }\n}\n\nexport default Invoice;\n","import React from \"react\";\nimport \"./App.css\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\n\nimport RoutesWithNavigation from \"./components/RoutesWithNavigation\";\n\nimport LoginPage from \"./spare_parts_components/pages/login\";\n\nimport SalePage from \"./spare_parts_components/pages/sale\";\n\nimport Invoice from \"./spare_parts_components/pages/billInvoice/invoice\";\n\n\nconst App = () => {\n    return (\n        <Switch>\n            <Route path=\"/login\" exact component={LoginPage}/>\n            <Route path=\"/sale\" exact component={SalePage}/>\n            <Route path=\"/invoice\" exact component={Invoice}/>\n            <RoutesWithNavigation/>\n            <Redirect to=\"/login\"/>\n        </Switch>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nconst customHistory = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={customHistory}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}